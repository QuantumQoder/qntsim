{"version":3,"file":"ng-particles.mjs","sources":["../../../projects/ng-particles/src/lib/ng-particles.component.ts","../../../projects/ng-particles/src/lib/ng-particles.module.ts","../../../projects/ng-particles/src/public-api.ts","../../../projects/ng-particles/src/ng-particles.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { EMPTY, from, mergeMap, Subject, takeUntil } from 'rxjs';\n\nimport { tsParticles } from 'tsparticles-engine';\nimport type { Container, Engine } from 'tsparticles-engine';\n\nimport { IParticlesProps } from './ng-particles.module';\n\n@Component({\n  selector: 'ng-particles',\n  template: '<div [id]=\"id\"></div>',\n})\nexport class NgParticlesComponent implements AfterViewInit, OnDestroy {\n  @Input() options?: IParticlesProps;\n  @Input() url?: string;\n  @Input() id?: string;\n  @Input() particlesInit?: (engine: Engine) => Promise<void>;\n  @Output() particlesLoaded: EventEmitter<Container> =\n    new EventEmitter<Container>();\n\n  private destroy$ = new Subject<void>();\n\n  constructor(@Inject(PLATFORM_ID) private platformId: string) {}\n\n  public ngAfterViewInit(): void {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n\n    const cb = (container?: Container) => {\n      this.particlesLoaded.emit(container);\n    };\n\n    from(\n      this.particlesInit ? this.particlesInit(tsParticles) : Promise.resolve()\n    )\n      .pipe(\n        mergeMap(() => {\n          if (this.url) {\n            if (this.id) {\n              return tsParticles.loadJSON(this.id, this.url);\n            } else {\n              return tsParticles.loadJSON(this.url);\n            }\n          } else if (this.options) {\n            if (this.id) {\n              return tsParticles.load(this.id, this.options);\n            } else {\n              return tsParticles.load(this.options);\n            }\n          } else {\n            console.error(\n              'You must specify options or url to load tsParticles'\n            );\n            return EMPTY;\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(cb);\n  }\n\n  public ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n}\n\n@Component({\n  selector: 'Particles',\n  template: '<div [id]=\"id\"></div>',\n})\nexport class ParticlesComponent extends NgParticlesComponent {\n  @Input() override options?: IParticlesProps;\n  @Input() override url?: string;\n  @Input() override id?: string;\n  @Input() override particlesInit?: (engine: Engine) => Promise<void>;\n  @Output() override particlesLoaded: EventEmitter<Container> =\n    new EventEmitter<Container>();\n}\n","import { NgModule } from '@angular/core';\nimport { NgParticlesComponent, ParticlesComponent } from './ng-particles.component';\nimport type { ISourceOptions } from 'tsparticles-engine';\n\n@NgModule({\n  declarations: [ NgParticlesComponent, ParticlesComponent ],\n  exports: [ NgParticlesComponent, ParticlesComponent ]\n})\nexport class NgParticlesModule {\n}\n\nexport type IParticlesProps = ISourceOptions;\nexport type IParticlesParams = IParticlesProps;","/*\n * Public API Surface of ng-particles\n */\n\nexport * from './lib/ng-particles.component';\nexport * from './lib/ng-particles.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}