{"ast":null,"code":"import _get from \"/Users/aman/Qulabs/QNT_Web/frontend/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/aman/Qulabs/QNT_Web/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/aman/Qulabs/QNT_Web/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/aman/Qulabs/QNT_Web/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/Users/aman/Qulabs/QNT_Web/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/aman/Qulabs/QNT_Web/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\n * @license Angular v12.2.16\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nexport { ɵgetDOM } from '@angular/common';\nimport { InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, setTestabilityGetter, ɵglobal, Injectable, ApplicationRef, NgZone, ɵgetDebugNodeR2, NgProbeToken, Optional, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵConsole, NgModule, ɵɵdefineInjectable, ɵɵinject, forwardRef, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵgetSanitizationBypassType, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, INJECTOR, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, Sanitizer, createPlatformFactory, platformCore, ɵINJECTOR_SCOPE, RendererFactory2, Testability, ApplicationModule, SkipSelf, Version } from '@angular/core';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\nvar GenericBrowserDomAdapter = /*#__PURE__*/function (_ɵDomAdapter) {\n  _inherits(GenericBrowserDomAdapter, _ɵDomAdapter);\n\n  var _super = _createSuper(GenericBrowserDomAdapter);\n\n  function GenericBrowserDomAdapter() {\n    var _this;\n\n    _classCallCheck(this, GenericBrowserDomAdapter);\n\n    _this = _super.apply(this, arguments);\n    _this.supportsDOMEvents = true;\n    return _this;\n  }\n\n  return _createClass(GenericBrowserDomAdapter);\n}(ɵDomAdapter);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\n/* tslint:disable:requireParameterType no-console */\n\n\nvar BrowserDomAdapter = /*#__PURE__*/function (_GenericBrowserDomAda) {\n  _inherits(BrowserDomAdapter, _GenericBrowserDomAda);\n\n  var _super2 = _createSuper(BrowserDomAdapter);\n\n  function BrowserDomAdapter() {\n    _classCallCheck(this, BrowserDomAdapter);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(BrowserDomAdapter, [{\n    key: \"onAndCancel\",\n    value: function onAndCancel(el, evt, listener) {\n      el.addEventListener(evt, listener, false); // Needed to follow Dart's subscription semantic, until fix of\n      // https://code.google.com/p/dart/issues/detail?id=17406\n\n      return function () {\n        el.removeEventListener(evt, listener, false);\n      };\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(el, evt) {\n      el.dispatchEvent(evt);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(node) {\n      if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    }\n  }, {\n    key: \"createElement\",\n    value: function createElement(tagName, doc) {\n      doc = doc || this.getDefaultDocument();\n      return doc.createElement(tagName);\n    }\n  }, {\n    key: \"createHtmlDocument\",\n    value: function createHtmlDocument() {\n      return document.implementation.createHTMLDocument('fakeTitle');\n    }\n  }, {\n    key: \"getDefaultDocument\",\n    value: function getDefaultDocument() {\n      return document;\n    }\n  }, {\n    key: \"isElementNode\",\n    value: function isElementNode(node) {\n      return node.nodeType === Node.ELEMENT_NODE;\n    }\n  }, {\n    key: \"isShadowRoot\",\n    value: function isShadowRoot(node) {\n      return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n\n  }, {\n    key: \"getGlobalEventTarget\",\n    value: function getGlobalEventTarget(doc, target) {\n      if (target === 'window') {\n        return window;\n      }\n\n      if (target === 'document') {\n        return doc;\n      }\n\n      if (target === 'body') {\n        return doc.body;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getBaseHref\",\n    value: function getBaseHref(doc) {\n      var href = getBaseElementHref();\n      return href == null ? null : relativePath(href);\n    }\n  }, {\n    key: \"resetBaseElement\",\n    value: function resetBaseElement() {\n      baseElement = null;\n    }\n  }, {\n    key: \"getUserAgent\",\n    value: function getUserAgent() {\n      return window.navigator.userAgent;\n    }\n  }, {\n    key: \"getCookie\",\n    value: function getCookie(name) {\n      return ɵparseCookieValue(document.cookie, name);\n    }\n  }], [{\n    key: \"makeCurrent\",\n    value: function makeCurrent() {\n      ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n  }]);\n\n  return BrowserDomAdapter;\n}(GenericBrowserDomAdapter);\n\nvar baseElement = null;\n\nfunction getBaseElementHref() {\n  baseElement = baseElement || document.querySelector('base');\n  return baseElement ? baseElement.getAttribute('href') : null;\n} // based on urlUtils.js in AngularJS 1\n\n\nvar urlParsingNode;\n\nfunction relativePath(url) {\n  urlParsingNode = urlParsingNode || document.createElement('a');\n  urlParsingNode.setAttribute('href', url);\n  var pathName = urlParsingNode.pathname;\n  return pathName.charAt(0) === '/' ? pathName : \"/\".concat(pathName);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\n\n\nvar TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n\nfunction appInitializerFactory(transitionId, document, injector) {\n  return function () {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(function () {\n      var dom = ɵgetDOM();\n      var styles = document.querySelectorAll(\"style[ng-transition=\\\"\".concat(transitionId, \"\\\"]\"));\n\n      for (var i = 0; i < styles.length; i++) {\n        dom.remove(styles[i]);\n      }\n    });\n  };\n}\n\nvar SERVER_TRANSITION_PROVIDERS = [{\n  provide: APP_INITIALIZER,\n  useFactory: appInitializerFactory,\n  deps: [TRANSITION_ID, DOCUMENT, Injector],\n  multi: true\n}];\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar BrowserGetTestability = /*#__PURE__*/function () {\n  function BrowserGetTestability() {\n    _classCallCheck(this, BrowserGetTestability);\n  }\n\n  _createClass(BrowserGetTestability, [{\n    key: \"addToWindow\",\n    value: function addToWindow(registry) {\n      ɵglobal['getAngularTestability'] = function (elem) {\n        var findInAncestors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var testability = registry.findTestabilityInTree(elem, findInAncestors);\n\n        if (testability == null) {\n          throw new Error('Could not find testability for element.');\n        }\n\n        return testability;\n      };\n\n      ɵglobal['getAllAngularTestabilities'] = function () {\n        return registry.getAllTestabilities();\n      };\n\n      ɵglobal['getAllAngularRootElements'] = function () {\n        return registry.getAllRootElements();\n      };\n\n      var whenAllStable = function whenAllStable(callback\n      /** TODO #9100 */\n      ) {\n        var testabilities = ɵglobal['getAllAngularTestabilities']();\n        var count = testabilities.length;\n        var didWork = false;\n\n        var decrement = function decrement(didWork_\n        /** TODO #9100 */\n        ) {\n          didWork = didWork || didWork_;\n          count--;\n\n          if (count == 0) {\n            callback(didWork);\n          }\n        };\n\n        testabilities.forEach(function (testability\n        /** TODO #9100 */\n        ) {\n          testability.whenStable(decrement);\n        });\n      };\n\n      if (!ɵglobal['frameworkStabilizers']) {\n        ɵglobal['frameworkStabilizers'] = [];\n      }\n\n      ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n  }, {\n    key: \"findTestabilityInTree\",\n    value: function findTestabilityInTree(registry, elem, findInAncestors) {\n      if (elem == null) {\n        return null;\n      }\n\n      var t = registry.getTestability(elem);\n\n      if (t != null) {\n        return t;\n      } else if (!findInAncestors) {\n        return null;\n      }\n\n      if (ɵgetDOM().isShadowRoot(elem)) {\n        return this.findTestabilityInTree(registry, elem.host, true);\n      }\n\n      return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n  }], [{\n    key: \"init\",\n    value: function init() {\n      setTestabilityGetter(new BrowserGetTestability());\n    }\n  }]);\n\n  return BrowserGetTestability;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\n\n\nvar BrowserXhr = /*#__PURE__*/function () {\n  function BrowserXhr() {\n    _classCallCheck(this, BrowserXhr);\n  }\n\n  _createClass(BrowserXhr, [{\n    key: \"build\",\n    value: function build() {\n      return new XMLHttpRequest();\n    }\n  }]);\n\n  return BrowserXhr;\n}();\n\nBrowserXhr.ɵfac = function BrowserXhr_Factory(t) {\n  return new (t || BrowserXhr)();\n};\n\nBrowserXhr.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: BrowserXhr,\n  factory: BrowserXhr.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserXhr, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nvar DASH_CASE_REGEXP = /-([a-z])/g;\n\nfunction camelCaseToDashCase(input) {\n  return input.replace(CAMEL_CASE_REGEXP, function () {\n    for (var _len = arguments.length, m = new Array(_len), _key = 0; _key < _len; _key++) {\n      m[_key] = arguments[_key];\n    }\n\n    return '-' + m[1].toLowerCase();\n  });\n}\n\nfunction dashCaseToCamelCase(input) {\n  return input.replace(DASH_CASE_REGEXP, function () {\n    for (var _len2 = arguments.length, m = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      m[_key2] = arguments[_key2];\n    }\n\n    return m[1].toUpperCase();\n  });\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\n\n\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    var ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n    ng[name] = value;\n  }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar ɵ0 = function ɵ0() {\n  return {\n    'ApplicationRef': ApplicationRef,\n    'NgZone': NgZone\n  };\n};\n\nvar CORE_TOKENS = ɵ0();\nvar INSPECT_GLOBAL_NAME = 'probe';\nvar CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\n\nfunction inspectNativeElementR2(element) {\n  return ɵgetDebugNodeR2(element);\n}\n\nfunction _createNgProbeR2(coreTokens) {\n  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElementR2);\n  exportNgVar(CORE_TOKENS_GLOBAL_NAME, Object.assign(Object.assign({}, CORE_TOKENS), _ngProbeTokensToMap(coreTokens || [])));\n  return function () {\n    return inspectNativeElementR2;\n  };\n}\n\nfunction _ngProbeTokensToMap(tokens) {\n  return tokens.reduce(function (prev, t) {\n    return prev[t.name] = t.token, prev;\n  }, {});\n}\n/**\n * In Ivy, we don't support NgProbe because we have our own set of testing utilities\n * with more robust functionality.\n *\n * We shouldn't bring in NgProbe because it prevents DebugNode and friends from\n * tree-shaking properly.\n */\n\n\nvar ELEMENT_PROBE_PROVIDERS__POST_R3__ = [];\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\n\nvar ELEMENT_PROBE_PROVIDERS__PRE_R3__ = [{\n  provide: APP_INITIALIZER,\n  useFactory: _createNgProbeR2,\n  deps: [[NgProbeToken, new Optional()]],\n  multi: true\n}];\nvar ELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS__POST_R3__;\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\n\nvar EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\n\nvar EventManager = /*#__PURE__*/function () {\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  function EventManager(plugins, _zone) {\n    var _this2 = this;\n\n    _classCallCheck(this, EventManager);\n\n    this._zone = _zone;\n    this._eventNameToPlugin = new Map();\n    plugins.forEach(function (p) {\n      return p.manager = _this2;\n    });\n    this._plugins = plugins.slice().reverse();\n  }\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n\n\n  _createClass(EventManager, [{\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var plugin = this._findPluginFor(eventName);\n\n      return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     * @deprecated No longer being used in Ivy code. To be removed in version 14.\n     */\n\n  }, {\n    key: \"addGlobalEventListener\",\n    value: function addGlobalEventListener(target, eventName, handler) {\n      var plugin = this._findPluginFor(eventName);\n\n      return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n\n  }, {\n    key: \"getZone\",\n    value: function getZone() {\n      return this._zone;\n    }\n    /** @internal */\n\n  }, {\n    key: \"_findPluginFor\",\n    value: function _findPluginFor(eventName) {\n      var plugin = this._eventNameToPlugin.get(eventName);\n\n      if (plugin) {\n        return plugin;\n      }\n\n      var plugins = this._plugins;\n\n      for (var i = 0; i < plugins.length; i++) {\n        var _plugin = plugins[i];\n\n        if (_plugin.supports(eventName)) {\n          this._eventNameToPlugin.set(eventName, _plugin);\n\n          return _plugin;\n        }\n      }\n\n      throw new Error(\"No event manager plugin found for event \".concat(eventName));\n    }\n  }]);\n\n  return EventManager;\n}();\n\nEventManager.ɵfac = function EventManager_Factory(t) {\n  return new (t || EventManager)(ɵngcc0.ɵɵinject(EVENT_MANAGER_PLUGINS), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nEventManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: EventManager,\n  factory: EventManager.ɵfac\n});\n\nEventManager.ctorParameters = function () {\n  return [{\n    type: Array,\n    decorators: [{\n      type: Inject,\n      args: [EVENT_MANAGER_PLUGINS]\n    }]\n  }, {\n    type: NgZone\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EventManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: Array,\n      decorators: [{\n        type: Inject,\n        args: [EVENT_MANAGER_PLUGINS]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\nvar EventManagerPlugin = /*#__PURE__*/function () {\n  function EventManagerPlugin(_doc) {\n    _classCallCheck(this, EventManagerPlugin);\n\n    this._doc = _doc;\n  }\n\n  _createClass(EventManagerPlugin, [{\n    key: \"addGlobalEventListener\",\n    value: function addGlobalEventListener(element, eventName, handler) {\n      var target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n\n      if (!target) {\n        throw new Error(\"Unsupported event target \".concat(target, \" for event \").concat(eventName));\n      }\n\n      return this.addEventListener(target, eventName, handler);\n    }\n  }]);\n\n  return EventManagerPlugin;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar SharedStylesHost = /*#__PURE__*/function () {\n  function SharedStylesHost() {\n    _classCallCheck(this, SharedStylesHost);\n\n    /** @internal */\n    this._stylesSet = new Set();\n  }\n\n  _createClass(SharedStylesHost, [{\n    key: \"addStyles\",\n    value: function addStyles(styles) {\n      var _this3 = this;\n\n      var additions = new Set();\n      styles.forEach(function (style) {\n        if (!_this3._stylesSet.has(style)) {\n          _this3._stylesSet.add(style);\n\n          additions.add(style);\n        }\n      });\n      this.onStylesAdded(additions);\n    }\n  }, {\n    key: \"onStylesAdded\",\n    value: function onStylesAdded(additions) {}\n  }, {\n    key: \"getAllStyles\",\n    value: function getAllStyles() {\n      return Array.from(this._stylesSet);\n    }\n  }]);\n\n  return SharedStylesHost;\n}();\n\nSharedStylesHost.ɵfac = function SharedStylesHost_Factory(t) {\n  return new (t || SharedStylesHost)();\n};\n\nSharedStylesHost.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: SharedStylesHost,\n  factory: SharedStylesHost.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar DomSharedStylesHost = /*#__PURE__*/function (_SharedStylesHost) {\n  _inherits(DomSharedStylesHost, _SharedStylesHost);\n\n  var _super3 = _createSuper(DomSharedStylesHost);\n\n  function DomSharedStylesHost(_doc) {\n    var _this4;\n\n    _classCallCheck(this, DomSharedStylesHost);\n\n    _this4 = _super3.call(this);\n    _this4._doc = _doc; // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n\n    _this4._hostNodes = new Map();\n\n    _this4._hostNodes.set(_doc.head, []);\n\n    return _this4;\n  }\n\n  _createClass(DomSharedStylesHost, [{\n    key: \"_addStylesToHost\",\n    value: function _addStylesToHost(styles, host, styleNodes) {\n      var _this5 = this;\n\n      styles.forEach(function (style) {\n        var styleEl = _this5._doc.createElement('style');\n\n        styleEl.textContent = style;\n        styleNodes.push(host.appendChild(styleEl));\n      });\n    }\n  }, {\n    key: \"addHost\",\n    value: function addHost(hostNode) {\n      var styleNodes = [];\n\n      this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n\n      this._hostNodes.set(hostNode, styleNodes);\n    }\n  }, {\n    key: \"removeHost\",\n    value: function removeHost(hostNode) {\n      var styleNodes = this._hostNodes.get(hostNode);\n\n      if (styleNodes) {\n        styleNodes.forEach(removeStyle);\n      }\n\n      this._hostNodes.delete(hostNode);\n    }\n  }, {\n    key: \"onStylesAdded\",\n    value: function onStylesAdded(additions) {\n      var _this6 = this;\n\n      this._hostNodes.forEach(function (styleNodes, hostNode) {\n        _this6._addStylesToHost(additions, hostNode, styleNodes);\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._hostNodes.forEach(function (styleNodes) {\n        return styleNodes.forEach(removeStyle);\n      });\n    }\n  }]);\n\n  return DomSharedStylesHost;\n}(SharedStylesHost);\n\nDomSharedStylesHost.ɵfac = function DomSharedStylesHost_Factory(t) {\n  return new (t || DomSharedStylesHost)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nDomSharedStylesHost.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DomSharedStylesHost,\n  factory: DomSharedStylesHost.ɵfac\n});\n\nDomSharedStylesHost.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nfunction removeStyle(styleNode) {\n  ɵgetDOM().remove(styleNode);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/'\n};\nvar COMPONENT_REGEX = /%COMP%/g;\nvar NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\".concat(COMPONENT_VARIABLE);\nvar CONTENT_ATTR = \"_ngcontent-\".concat(COMPONENT_VARIABLE);\n\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nfunction flattenStyles(compId, styles, target) {\n  for (var i = 0; i < styles.length; i++) {\n    var style = styles[i];\n\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n\n  return target;\n}\n\nfunction decoratePreventDefault(eventHandler) {\n  // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n  // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n  // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n  // the listener (see below).\n  return function (event) {\n    // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n    // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n    // can inspect the listener toString contents for the existence of this special token. Because\n    // the token is a string literal, it is ensured to not be modified by compiled code.\n    if (event === '__ngUnwrap__') {\n      return eventHandler;\n    }\n\n    var allowDefaultBehavior = eventHandler(event);\n\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n\n    return undefined;\n  };\n}\n\nvar hasLoggedNativeEncapsulationWarning = false;\n\nvar DomRendererFactory2 = /*#__PURE__*/function () {\n  function DomRendererFactory2(eventManager, sharedStylesHost, appId) {\n    _classCallCheck(this, DomRendererFactory2);\n\n    this.eventManager = eventManager;\n    this.sharedStylesHost = sharedStylesHost;\n    this.appId = appId;\n    this.rendererByCompId = new Map();\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n\n  _createClass(DomRendererFactory2, [{\n    key: \"createRenderer\",\n    value: function createRenderer(element, type) {\n      if (!element || !type) {\n        return this.defaultRenderer;\n      }\n\n      switch (type.encapsulation) {\n        case ViewEncapsulation.Emulated:\n          {\n            var renderer = this.rendererByCompId.get(type.id);\n\n            if (!renderer) {\n              renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n              this.rendererByCompId.set(type.id, renderer);\n            }\n\n            renderer.applyToHost(element);\n            return renderer;\n          }\n        // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an enum\n        // value that is not known (but previously was the value for ViewEncapsulation.Native)\n\n        case 1:\n        case ViewEncapsulation.ShadowDom:\n          // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n          if ((typeof ngDevMode === 'undefined' || ngDevMode) && // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an\n          // enum value that is not known (but previously was the value for\n          // ViewEncapsulation.Native)\n          !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n            hasLoggedNativeEncapsulationWarning = true;\n            console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n          }\n\n          return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n\n        default:\n          {\n            if (!this.rendererByCompId.has(type.id)) {\n              var styles = flattenStyles(type.id, type.styles, []);\n              this.sharedStylesHost.addStyles(styles);\n              this.rendererByCompId.set(type.id, this.defaultRenderer);\n            }\n\n            return this.defaultRenderer;\n          }\n      }\n    }\n  }, {\n    key: \"begin\",\n    value: function begin() {}\n  }, {\n    key: \"end\",\n    value: function end() {}\n  }]);\n\n  return DomRendererFactory2;\n}();\n\nDomRendererFactory2.ɵfac = function DomRendererFactory2_Factory(t) {\n  return new (t || DomRendererFactory2)(ɵngcc0.ɵɵinject(EventManager), ɵngcc0.ɵɵinject(DomSharedStylesHost), ɵngcc0.ɵɵinject(APP_ID));\n};\n\nDomRendererFactory2.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DomRendererFactory2,\n  factory: DomRendererFactory2.ɵfac\n});\n\nDomRendererFactory2.ctorParameters = function () {\n  return [{\n    type: EventManager\n  }, {\n    type: DomSharedStylesHost\n  }, {\n    type: String,\n    decorators: [{\n      type: Inject,\n      args: [APP_ID]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomRendererFactory2, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: EventManager\n    }, {\n      type: DomSharedStylesHost\n    }, {\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [APP_ID]\n      }]\n    }];\n  }, null);\n})();\n\nvar DefaultDomRenderer2 = /*#__PURE__*/function () {\n  function DefaultDomRenderer2(eventManager) {\n    _classCallCheck(this, DefaultDomRenderer2);\n\n    this.eventManager = eventManager;\n    this.data = Object.create(null);\n  }\n\n  _createClass(DefaultDomRenderer2, [{\n    key: \"destroy\",\n    value: function destroy() {}\n  }, {\n    key: \"createElement\",\n    value: function createElement(name, namespace) {\n      if (namespace) {\n        // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n        // will result in undefined, so we just return the namespace here.\n        return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n      }\n\n      return document.createElement(name);\n    }\n  }, {\n    key: \"createComment\",\n    value: function createComment(value) {\n      return document.createComment(value);\n    }\n  }, {\n    key: \"createText\",\n    value: function createText(value) {\n      return document.createTextNode(value);\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(parent, newChild) {\n      parent.appendChild(newChild);\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(parent, newChild, refChild) {\n      if (parent) {\n        parent.insertBefore(newChild, refChild);\n      }\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(parent, oldChild) {\n      if (parent) {\n        parent.removeChild(oldChild);\n      }\n    }\n  }, {\n    key: \"selectRootElement\",\n    value: function selectRootElement(selectorOrNode, preserveContent) {\n      var el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) : selectorOrNode;\n\n      if (!el) {\n        throw new Error(\"The selector \\\"\".concat(selectorOrNode, \"\\\" did not match any elements\"));\n      }\n\n      if (!preserveContent) {\n        el.textContent = '';\n      }\n\n      return el;\n    }\n  }, {\n    key: \"parentNode\",\n    value: function parentNode(node) {\n      return node.parentNode;\n    }\n  }, {\n    key: \"nextSibling\",\n    value: function nextSibling(node) {\n      return node.nextSibling;\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(el, name, value, namespace) {\n      if (namespace) {\n        name = namespace + ':' + name; // TODO(FW-811): Ivy may cause issues here because it's passing around\n        // full URIs for namespaces, therefore this lookup will fail.\n\n        var namespaceUri = NAMESPACE_URIS[namespace];\n\n        if (namespaceUri) {\n          el.setAttributeNS(namespaceUri, name, value);\n        } else {\n          el.setAttribute(name, value);\n        }\n      } else {\n        el.setAttribute(name, value);\n      }\n    }\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(el, name, namespace) {\n      if (namespace) {\n        // TODO(FW-811): Ivy may cause issues here because it's passing around\n        // full URIs for namespaces, therefore this lookup will fail.\n        var namespaceUri = NAMESPACE_URIS[namespace];\n\n        if (namespaceUri) {\n          el.removeAttributeNS(namespaceUri, name);\n        } else {\n          // TODO(FW-811): Since ivy is passing around full URIs for namespaces\n          // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n          // which is wrong.\n          el.removeAttribute(\"\".concat(namespace, \":\").concat(name));\n        }\n      } else {\n        el.removeAttribute(name);\n      }\n    }\n  }, {\n    key: \"addClass\",\n    value: function addClass(el, name) {\n      el.classList.add(name);\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(el, name) {\n      el.classList.remove(name);\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(el, style, value, flags) {\n      if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n        el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n      } else {\n        el.style[style] = value;\n      }\n    }\n  }, {\n    key: \"removeStyle\",\n    value: function removeStyle(el, style, flags) {\n      if (flags & RendererStyleFlags2.DashCase) {\n        el.style.removeProperty(style);\n      } else {\n        // IE requires '' instead of null\n        // see https://github.com/angular/angular/issues/7916\n        el.style[style] = '';\n      }\n    }\n  }, {\n    key: \"setProperty\",\n    value: function setProperty(el, name, value) {\n      NG_DEV_MODE && checkNoSyntheticProp(name, 'property');\n      el[name] = value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(node, value) {\n      node.nodeValue = value;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(target, event, callback) {\n      NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');\n\n      if (typeof target === 'string') {\n        return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n      }\n\n      return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    }\n  }]);\n\n  return DefaultDomRenderer2;\n}();\n\nvar ɵ0$1 = function ɵ0$1() {\n  return '@'.charCodeAt(0);\n};\n\nvar AT_CHARCODE = ɵ0$1();\n\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(\"Unexpected synthetic \".concat(nameKind, \" \").concat(name, \" found. Please make sure that:\\n  - Either `BrowserAnimationsModule` or `NoopAnimationsModule` are imported in your application.\\n  - There is corresponding configuration for the animation named `\").concat(name, \"` defined in the `animations` field of the `@Component` decorator (see https://angular.io/api/core/Component#animations).\"));\n  }\n}\n\nvar EmulatedEncapsulationDomRenderer2 = /*#__PURE__*/function (_DefaultDomRenderer) {\n  _inherits(EmulatedEncapsulationDomRenderer2, _DefaultDomRenderer);\n\n  var _super4 = _createSuper(EmulatedEncapsulationDomRenderer2);\n\n  function EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, component, appId) {\n    var _this7;\n\n    _classCallCheck(this, EmulatedEncapsulationDomRenderer2);\n\n    _this7 = _super4.call(this, eventManager);\n    _this7.component = component;\n    var styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n    _this7.contentAttr = shimContentAttribute(appId + '-' + component.id);\n    _this7.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    return _this7;\n  }\n\n  _createClass(EmulatedEncapsulationDomRenderer2, [{\n    key: \"applyToHost\",\n    value: function applyToHost(element) {\n      _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"setAttribute\", this).call(this, element, this.hostAttr, '');\n    }\n  }, {\n    key: \"createElement\",\n    value: function createElement(parent, name) {\n      var el = _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"createElement\", this).call(this, parent, name);\n\n      _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"setAttribute\", this).call(this, el, this.contentAttr, '');\n\n      return el;\n    }\n  }]);\n\n  return EmulatedEncapsulationDomRenderer2;\n}(DefaultDomRenderer2);\n\nvar ShadowDomRenderer = /*#__PURE__*/function (_DefaultDomRenderer2) {\n  _inherits(ShadowDomRenderer, _DefaultDomRenderer2);\n\n  var _super5 = _createSuper(ShadowDomRenderer);\n\n  function ShadowDomRenderer(eventManager, sharedStylesHost, hostEl, component) {\n    var _this8;\n\n    _classCallCheck(this, ShadowDomRenderer);\n\n    _this8 = _super5.call(this, eventManager);\n    _this8.sharedStylesHost = sharedStylesHost;\n    _this8.hostEl = hostEl;\n    _this8.shadowRoot = hostEl.attachShadow({\n      mode: 'open'\n    });\n\n    _this8.sharedStylesHost.addHost(_this8.shadowRoot);\n\n    var styles = flattenStyles(component.id, component.styles, []);\n\n    for (var i = 0; i < styles.length; i++) {\n      var styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n\n      _this8.shadowRoot.appendChild(styleEl);\n    }\n\n    return _this8;\n  }\n\n  _createClass(ShadowDomRenderer, [{\n    key: \"nodeOrShadowRoot\",\n    value: function nodeOrShadowRoot(node) {\n      return node === this.hostEl ? this.shadowRoot : node;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(parent, newChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"appendChild\", this).call(this, this.nodeOrShadowRoot(parent), newChild);\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(parent, newChild, refChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"insertBefore\", this).call(this, this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(parent, oldChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"removeChild\", this).call(this, this.nodeOrShadowRoot(parent), oldChild);\n    }\n  }, {\n    key: \"parentNode\",\n    value: function parentNode(node) {\n      return this.nodeOrShadowRoot(_get(_getPrototypeOf(ShadowDomRenderer.prototype), \"parentNode\", this).call(this, this.nodeOrShadowRoot(node)));\n    }\n  }]);\n\n  return ShadowDomRenderer;\n}(DefaultDomRenderer2);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar DomEventsPlugin = /*#__PURE__*/function (_EventManagerPlugin) {\n  _inherits(DomEventsPlugin, _EventManagerPlugin);\n\n  var _super6 = _createSuper(DomEventsPlugin);\n\n  function DomEventsPlugin(doc) {\n    _classCallCheck(this, DomEventsPlugin);\n\n    return _super6.call(this, doc);\n  } // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n\n\n  _createClass(DomEventsPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var _this9 = this;\n\n      element.addEventListener(eventName, handler, false);\n      return function () {\n        return _this9.removeEventListener(element, eventName, handler);\n      };\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(target, eventName, callback) {\n      return target.removeEventListener(eventName, callback);\n    }\n  }]);\n\n  return DomEventsPlugin;\n}(EventManagerPlugin);\n\nDomEventsPlugin.ɵfac = function DomEventsPlugin_Factory(t) {\n  return new (t || DomEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nDomEventsPlugin.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DomEventsPlugin,\n  factory: DomEventsPlugin.ɵfac\n});\n\nDomEventsPlugin.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Supported HammerJS recognizer event names.\n */\n\n\nvar EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\n\nvar HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\n\nvar HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\n\nvar HammerGestureConfig = /*#__PURE__*/function () {\n  function HammerGestureConfig() {\n    _classCallCheck(this, HammerGestureConfig);\n\n    /**\n     * A set of supported event names for gestures to be used in Angular.\n     * Angular supports all built-in recognizers, as listed in\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    this.events = [];\n    /**\n     * Maps gesture event names to a set of configuration options\n     * that specify overrides to the default values for specific properties.\n     *\n     * The key is a supported event name to be configured,\n     * and the options object contains a set of properties, with override values\n     * to be applied to the named recognizer event.\n     * For example, to disable recognition of the rotate event, specify\n     *  `{\"rotate\": {\"enable\": false}}`.\n     *\n     * Properties that are not present take the HammerJS default values.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     *\n     */\n\n    this.overrides = {};\n  }\n  /**\n   * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n\n\n  _createClass(HammerGestureConfig, [{\n    key: \"buildHammer\",\n    value: function buildHammer(element) {\n      var mc = new Hammer(element, this.options);\n      mc.get('pinch').set({\n        enable: true\n      });\n      mc.get('rotate').set({\n        enable: true\n      });\n\n      for (var eventName in this.overrides) {\n        mc.get(eventName).set(this.overrides[eventName]);\n      }\n\n      return mc;\n    }\n  }]);\n\n  return HammerGestureConfig;\n}();\n\nHammerGestureConfig.ɵfac = function HammerGestureConfig_Factory(t) {\n  return new (t || HammerGestureConfig)();\n};\n\nHammerGestureConfig.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: HammerGestureConfig,\n  factory: HammerGestureConfig.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGestureConfig, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\n\n\nvar HammerGesturesPlugin = /*#__PURE__*/function (_EventManagerPlugin2) {\n  _inherits(HammerGesturesPlugin, _EventManagerPlugin2);\n\n  var _super7 = _createSuper(HammerGesturesPlugin);\n\n  function HammerGesturesPlugin(doc, _config, console, loader) {\n    var _this10;\n\n    _classCallCheck(this, HammerGesturesPlugin);\n\n    _this10 = _super7.call(this, doc);\n    _this10._config = _config;\n    _this10.console = console;\n    _this10.loader = loader;\n    _this10._loaderPromise = null;\n    return _this10;\n  }\n\n  _createClass(HammerGesturesPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n        return false;\n      }\n\n      if (!window.Hammer && !this.loader) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          this.console.warn(\"The \\\"\".concat(eventName, \"\\\" event cannot be bound because Hammer.JS is not \") + \"loaded and no custom loader has been specified.\");\n        }\n\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var _this11 = this;\n\n      var zone = this.manager.getZone();\n      eventName = eventName.toLowerCase(); // If Hammer is not present but a loader is specified, we defer adding the event listener\n      // until Hammer is loaded.\n\n      if (!window.Hammer && this.loader) {\n        this._loaderPromise = this._loaderPromise || this.loader(); // This `addEventListener` method returns a function to remove the added listener.\n        // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n        // than remove anything.\n\n        var cancelRegistration = false;\n\n        var deregister = function deregister() {\n          cancelRegistration = true;\n        };\n\n        this._loaderPromise.then(function () {\n          // If Hammer isn't actually loaded when the custom loader resolves, give up.\n          if (!window.Hammer) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n              _this11.console.warn(\"The custom HAMMER_LOADER completed, but Hammer.JS is not present.\");\n            }\n\n            deregister = function deregister() {};\n\n            return;\n          }\n\n          if (!cancelRegistration) {\n            // Now that Hammer is loaded and the listener is being loaded for real,\n            // the deregistration function changes from canceling registration to removal.\n            deregister = _this11.addEventListener(element, eventName, handler);\n          }\n        }).catch(function () {\n          if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            _this11.console.warn(\"The \\\"\".concat(eventName, \"\\\" event cannot be bound because the custom \") + \"Hammer.JS loader failed.\");\n          }\n\n          deregister = function deregister() {};\n        }); // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n        // can change the behavior of `deregister` once the listener is added. Using a closure in\n        // this way allows us to avoid any additional data structures to track listener removal.\n\n\n        return function () {\n          deregister();\n        };\n      }\n\n      return zone.runOutsideAngular(function () {\n        // Creating the manager bind events, must be done outside of angular\n        var mc = _this11._config.buildHammer(element);\n\n        var callback = function callback(eventObj) {\n          zone.runGuarded(function () {\n            handler(eventObj);\n          });\n        };\n\n        mc.on(eventName, callback);\n        return function () {\n          mc.off(eventName, callback); // destroy mc to prevent memory leak\n\n          if (typeof mc.destroy === 'function') {\n            mc.destroy();\n          }\n        };\n      });\n    }\n  }, {\n    key: \"isCustomEvent\",\n    value: function isCustomEvent(eventName) {\n      return this._config.events.indexOf(eventName) > -1;\n    }\n  }]);\n\n  return HammerGesturesPlugin;\n}(EventManagerPlugin);\n\nHammerGesturesPlugin.ɵfac = function HammerGesturesPlugin_Factory(t) {\n  return new (t || HammerGesturesPlugin)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(HAMMER_GESTURE_CONFIG), ɵngcc0.ɵɵinject(ɵngcc0.ɵConsole), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8));\n};\n\nHammerGesturesPlugin.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: HammerGesturesPlugin,\n  factory: HammerGesturesPlugin.ɵfac\n});\n\nHammerGesturesPlugin.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: HammerGestureConfig,\n    decorators: [{\n      type: Inject,\n      args: [HAMMER_GESTURE_CONFIG]\n    }]\n  }, {\n    type: ɵConsole\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [HAMMER_LOADER]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: HammerGestureConfig,\n      decorators: [{\n        type: Inject,\n        args: [HAMMER_GESTURE_CONFIG]\n      }]\n    }, {\n      type: ɵngcc0.ɵConsole\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HAMMER_LOADER]\n      }]\n    }];\n  }, null);\n})();\n/**\n * In Ivy, support for Hammer gestures is optional, so applications must\n * import the `HammerModule` at root to turn on support. This means that\n * Hammer-specific code can be tree-shaken away if not needed.\n */\n\n\nvar HAMMER_PROVIDERS__POST_R3__ = [];\n/**\n * In View Engine, support for Hammer gestures is built-in by default.\n */\n\nvar HAMMER_PROVIDERS__PRE_R3__ = [{\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: HammerGesturesPlugin,\n  multi: true,\n  deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n}, {\n  provide: HAMMER_GESTURE_CONFIG,\n  useClass: HammerGestureConfig,\n  deps: []\n}];\nvar HAMMER_PROVIDERS = HAMMER_PROVIDERS__POST_R3__;\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\n\nvar HammerModule = /*#__PURE__*/_createClass(function HammerModule() {\n  _classCallCheck(this, HammerModule);\n});\n\nHammerModule.ɵfac = function HammerModule_Factory(t) {\n  return new (t || HammerModule)();\n};\n\nHammerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: HammerModule\n});\nHammerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: HAMMER_PROVIDERS__PRE_R3__\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerModule, [{\n    type: NgModule,\n    args: [{\n      providers: HAMMER_PROVIDERS__PRE_R3__\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Defines supported modifiers for key events.\n */\n\n\nvar MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nvar DOM_KEY_LOCATION_NUMPAD = 3; // Map to convert some key or keyIdentifier values to what will be returned by getEventKey\n\nvar _keyMap = {\n  // The following values are here for cross-browser compatibility and to match the W3C standard\n  // cf https://www.w3.org/TR/DOM-Level-3-Events-key/\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n}; // There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\n\nvar _chromeNumKeyPadMap = {\n  'A': '1',\n  'B': '2',\n  'C': '3',\n  'D': '4',\n  'E': '5',\n  'F': '6',\n  'G': '7',\n  'H': '8',\n  'I': '9',\n  'J': '*',\n  'K': '+',\n  'M': '-',\n  'N': '.',\n  'O': '/',\n  '\\x60': '0',\n  '\\x90': 'NumLock'\n};\n\nvar ɵ0$2 = function ɵ0$2(event) {\n  return event.altKey;\n},\n    ɵ1 = function ɵ1(event) {\n  return event.ctrlKey;\n},\n    ɵ2 = function ɵ2(event) {\n  return event.metaKey;\n},\n    ɵ3 = function ɵ3(event) {\n  return event.shiftKey;\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\n\n\nvar MODIFIER_KEY_GETTERS = {\n  'alt': ɵ0$2,\n  'control': ɵ1,\n  'meta': ɵ2,\n  'shift': ɵ3\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\n\nvar KeyEventsPlugin = /*#__PURE__*/function (_EventManagerPlugin3) {\n  _inherits(KeyEventsPlugin, _EventManagerPlugin3);\n\n  var _super8 = _createSuper(KeyEventsPlugin);\n\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  function KeyEventsPlugin(doc) {\n    _classCallCheck(this, KeyEventsPlugin);\n\n    return _super8.call(this, doc);\n  }\n  /**\n   * Reports whether a named key event is supported.\n   * @param eventName The event name to query.\n   * @return True if the named key event is supported.\n   */\n\n\n  _createClass(KeyEventsPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n      var outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n      return this.manager.getZone().runOutsideAngular(function () {\n        return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n      });\n    }\n  }], [{\n    key: \"parseEventName\",\n    value: function parseEventName(eventName) {\n      var parts = eventName.toLowerCase().split('.');\n      var domEventName = parts.shift();\n\n      if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n        return null;\n      }\n\n      var key = KeyEventsPlugin._normalizeKey(parts.pop());\n\n      var fullKey = '';\n      MODIFIER_KEYS.forEach(function (modifierName) {\n        var index = parts.indexOf(modifierName);\n\n        if (index > -1) {\n          parts.splice(index, 1);\n          fullKey += modifierName + '.';\n        }\n      });\n      fullKey += key;\n\n      if (parts.length != 0 || key.length === 0) {\n        // returning null instead of throwing to let another plugin process the event\n        return null;\n      } // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n      //       The code must remain in the `result['domEventName']` form.\n      // return {domEventName, fullKey};\n\n\n      var result = {};\n      result['domEventName'] = domEventName;\n      result['fullKey'] = fullKey;\n      return result;\n    }\n  }, {\n    key: \"getEventFullKey\",\n    value: function getEventFullKey(event) {\n      var fullKey = '';\n      var key = getEventKey(event);\n      key = key.toLowerCase();\n\n      if (key === ' ') {\n        key = 'space'; // for readability\n      } else if (key === '.') {\n        key = 'dot'; // because '.' is used as a separator in event names\n      }\n\n      MODIFIER_KEYS.forEach(function (modifierName) {\n        if (modifierName != key) {\n          var modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n\n          if (modifierGetter(event)) {\n            fullKey += modifierName + '.';\n          }\n        }\n      });\n      fullKey += key;\n      return fullKey;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n\n  }, {\n    key: \"eventCallback\",\n    value: function eventCallback(fullKey, handler, zone) {\n      return function (event\n      /** TODO #9100 */\n      ) {\n        if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n          zone.runGuarded(function () {\n            return handler(event);\n          });\n        }\n      };\n    }\n    /** @internal */\n\n  }, {\n    key: \"_normalizeKey\",\n    value: function _normalizeKey(keyName) {\n      // TODO: switch to a Map if the mapping grows too much\n      switch (keyName) {\n        case 'esc':\n          return 'escape';\n\n        default:\n          return keyName;\n      }\n    }\n  }]);\n\n  return KeyEventsPlugin;\n}(EventManagerPlugin);\n\nKeyEventsPlugin.ɵfac = function KeyEventsPlugin_Factory(t) {\n  return new (t || KeyEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nKeyEventsPlugin.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: KeyEventsPlugin,\n  factory: KeyEventsPlugin.ɵfac\n});\n\nKeyEventsPlugin.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nfunction getEventKey(event) {\n  var key = event.key;\n\n  if (key == null) {\n    key = event.keyIdentifier; // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n    // Safari cf\n    // https://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n\n    if (key == null) {\n      return 'Unidentified';\n    }\n\n    if (key.startsWith('U+')) {\n      key = String.fromCharCode(parseInt(key.substring(2), 16));\n\n      if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n        // There is a bug in Chrome for numeric keypad keys:\n        // https://code.google.com/p/chromium/issues/detail?id=155654\n        // 1, 2, 3 ... are reported as A, B, C ...\n        key = _chromeNumKeyPadMap[key];\n      }\n    }\n  }\n\n  return _keyMap[key] || key;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\n\n\nvar DomSanitizer = /*#__PURE__*/_createClass(function DomSanitizer() {\n  _classCallCheck(this, DomSanitizer);\n});\n\nDomSanitizer.ɵfac = function DomSanitizer_Factory(t) {\n  return new (t || DomSanitizer)();\n};\n\nDomSanitizer.ɵprov = ɵɵdefineInjectable({\n  factory: function DomSanitizer_Factory() {\n    return ɵɵinject(DomSanitizerImpl);\n  },\n  token: DomSanitizer,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: forwardRef(function () {\n        return DomSanitizerImpl;\n      })\n    }]\n  }], null, null);\n})();\n\nfunction domSanitizerImplFactory(injector) {\n  return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\n\nvar DomSanitizerImpl = /*#__PURE__*/function (_DomSanitizer) {\n  _inherits(DomSanitizerImpl, _DomSanitizer);\n\n  var _super9 = _createSuper(DomSanitizerImpl);\n\n  function DomSanitizerImpl(_doc) {\n    var _this12;\n\n    _classCallCheck(this, DomSanitizerImpl);\n\n    _this12 = _super9.call(this);\n    _this12._doc = _doc;\n    return _this12;\n  }\n\n  _createClass(DomSanitizerImpl, [{\n    key: \"sanitize\",\n    value: function sanitize(ctx, value) {\n      if (value == null) return null;\n\n      switch (ctx) {\n        case SecurityContext.NONE:\n          return value;\n\n        case SecurityContext.HTML:\n          if (ɵallowSanitizationBypassAndThrow(value, \"HTML\"\n          /* Html */\n          )) {\n            return ɵunwrapSafeValue(value);\n          }\n\n          return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n\n        case SecurityContext.STYLE:\n          if (ɵallowSanitizationBypassAndThrow(value, \"Style\"\n          /* Style */\n          )) {\n            return ɵunwrapSafeValue(value);\n          }\n\n          return value;\n\n        case SecurityContext.SCRIPT:\n          if (ɵallowSanitizationBypassAndThrow(value, \"Script\"\n          /* Script */\n          )) {\n            return ɵunwrapSafeValue(value);\n          }\n\n          throw new Error('unsafe value used in a script context');\n\n        case SecurityContext.URL:\n          var type = ɵgetSanitizationBypassType(value);\n\n          if (ɵallowSanitizationBypassAndThrow(value, \"URL\"\n          /* Url */\n          )) {\n            return ɵunwrapSafeValue(value);\n          }\n\n          return ɵ_sanitizeUrl(String(value));\n\n        case SecurityContext.RESOURCE_URL:\n          if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\"\n          /* ResourceUrl */\n          )) {\n            return ɵunwrapSafeValue(value);\n          }\n\n          throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n\n        default:\n          throw new Error(\"Unexpected SecurityContext \".concat(ctx, \" (see https://g.co/ng/security#xss)\"));\n      }\n    }\n  }, {\n    key: \"bypassSecurityTrustHtml\",\n    value: function bypassSecurityTrustHtml(value) {\n      return ɵbypassSanitizationTrustHtml(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustStyle\",\n    value: function bypassSecurityTrustStyle(value) {\n      return ɵbypassSanitizationTrustStyle(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustScript\",\n    value: function bypassSecurityTrustScript(value) {\n      return ɵbypassSanitizationTrustScript(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustUrl\",\n    value: function bypassSecurityTrustUrl(value) {\n      return ɵbypassSanitizationTrustUrl(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustResourceUrl\",\n    value: function bypassSecurityTrustResourceUrl(value) {\n      return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n  }]);\n\n  return DomSanitizerImpl;\n}(DomSanitizer);\n\nDomSanitizerImpl.ɵfac = function DomSanitizerImpl_Factory(t) {\n  return new (t || DomSanitizerImpl)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nDomSanitizerImpl.ɵprov = ɵɵdefineInjectable({\n  factory: function DomSanitizerImpl_Factory() {\n    return domSanitizerImplFactory(ɵɵinject(INJECTOR));\n  },\n  token: DomSanitizerImpl,\n  providedIn: \"root\"\n});\n\nDomSanitizerImpl.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizerImpl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: domSanitizerImplFactory,\n      deps: [Injector]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n\nfunction errorHandler() {\n  return new ErrorHandler();\n}\n\nfunction _document() {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\n\nvar ɵ0$3 = ɵPLATFORM_BROWSER_ID;\nvar INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_ID,\n  useValue: ɵ0$3\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useValue: initDomAdapter,\n  multi: true\n}, {\n  provide: DOCUMENT,\n  useFactory: _document,\n  deps: []\n}];\nvar BROWSER_SANITIZATION_PROVIDERS__PRE_R3__ = [{\n  provide: Sanitizer,\n  useExisting: DomSanitizer\n}, {\n  provide: DomSanitizer,\n  useClass: DomSanitizerImpl,\n  deps: [DOCUMENT]\n}];\nvar BROWSER_SANITIZATION_PROVIDERS__POST_R3__ = [];\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](https://g.co/ng/security).\n * @publicApi\n */\n\nvar BROWSER_SANITIZATION_PROVIDERS = BROWSER_SANITIZATION_PROVIDERS__POST_R3__;\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\n\nvar platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\nvar BROWSER_MODULE_PROVIDERS = [BROWSER_SANITIZATION_PROVIDERS, {\n  provide: ɵINJECTOR_SCOPE,\n  useValue: 'root'\n}, {\n  provide: ErrorHandler,\n  useFactory: errorHandler,\n  deps: []\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: DomEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT, NgZone, PLATFORM_ID]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: KeyEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, HAMMER_PROVIDERS, {\n  provide: DomRendererFactory2,\n  useClass: DomRendererFactory2,\n  deps: [EventManager, DomSharedStylesHost, APP_ID]\n}, {\n  provide: RendererFactory2,\n  useExisting: DomRendererFactory2\n}, {\n  provide: SharedStylesHost,\n  useExisting: DomSharedStylesHost\n}, {\n  provide: DomSharedStylesHost,\n  useClass: DomSharedStylesHost,\n  deps: [DOCUMENT]\n}, {\n  provide: Testability,\n  useClass: Testability,\n  deps: [NgZone]\n}, {\n  provide: EventManager,\n  useClass: EventManager,\n  deps: [EVENT_MANAGER_PLUGINS, NgZone]\n}, {\n  provide: XhrFactory,\n  useClass: BrowserXhr,\n  deps: []\n}, ELEMENT_PROBE_PROVIDERS];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\n\nvar BrowserModule = /*#__PURE__*/function () {\n  function BrowserModule(parentModule) {\n    _classCallCheck(this, BrowserModule);\n\n    if (parentModule) {\n      throw new Error(\"BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.\");\n    }\n  }\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n\n\n  _createClass(BrowserModule, null, [{\n    key: \"withServerTransition\",\n    value: function withServerTransition(params) {\n      return {\n        ngModule: BrowserModule,\n        providers: [{\n          provide: APP_ID,\n          useValue: params.appId\n        }, {\n          provide: TRANSITION_ID,\n          useExisting: APP_ID\n        }, SERVER_TRANSITION_PROVIDERS]\n      };\n    }\n  }]);\n\n  return BrowserModule;\n}();\n\nBrowserModule.ɵfac = function BrowserModule_Factory(t) {\n  return new (t || BrowserModule)(ɵngcc0.ɵɵinject(BrowserModule, 12));\n};\n\nBrowserModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: BrowserModule\n});\nBrowserModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: BROWSER_MODULE_PROVIDERS,\n  imports: [CommonModule, ApplicationModule]\n});\n\nBrowserModule.ctorParameters = function () {\n  return [{\n    type: BrowserModule,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }, {\n      type: Inject,\n      args: [BrowserModule]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserModule, [{\n    type: NgModule,\n    args: [{\n      providers: BROWSER_MODULE_PROVIDERS,\n      exports: [CommonModule, ApplicationModule]\n    }]\n  }], function () {\n    return [{\n      type: BrowserModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [BrowserModule]\n      }]\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BrowserModule, {\n    exports: function exports() {\n      return [CommonModule, ApplicationModule];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\n\n\nfunction createMeta() {\n  return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\n\n\nvar Meta = /*#__PURE__*/function () {\n  function Meta(_doc) {\n    _classCallCheck(this, Meta);\n\n    this._doc = _doc;\n    this._dom = ɵgetDOM();\n  }\n  /**\n   * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * If an existing element is found, it is returned and is not modified in any way.\n   * @param tag The definition of a `<meta>` element to match or create.\n   * @param forceCreation True to create a new element without checking whether one already exists.\n   * @returns The existing element with the same attributes and values if found,\n   * the new element if no match is found, or `null` if the tag parameter is not defined.\n   */\n\n\n  _createClass(Meta, [{\n    key: \"addTag\",\n    value: function addTag(tag) {\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!tag) return null;\n      return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n\n  }, {\n    key: \"addTags\",\n    value: function addTags(tags) {\n      var _this13 = this;\n\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!tags) return [];\n      return tags.reduce(function (result, tag) {\n        if (tag) {\n          result.push(_this13._getOrCreateElement(tag, forceCreation));\n        }\n\n        return result;\n      }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n\n  }, {\n    key: \"getTag\",\n    value: function getTag(attrSelector) {\n      if (!attrSelector) return null;\n      return this._doc.querySelector(\"meta[\".concat(attrSelector, \"]\")) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n\n  }, {\n    key: \"getTags\",\n    value: function getTags(attrSelector) {\n      if (!attrSelector) return [];\n\n      var list\n      /*NodeList*/\n      = this._doc.querySelectorAll(\"meta[\".concat(attrSelector, \"]\"));\n\n      return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n\n  }, {\n    key: \"updateTag\",\n    value: function updateTag(tag, selector) {\n      if (!tag) return null;\n      selector = selector || this._parseSelector(tag);\n      var meta = this.getTag(selector);\n\n      if (meta) {\n        return this._setMetaElementAttributes(tag, meta);\n      }\n\n      return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n\n  }, {\n    key: \"removeTag\",\n    value: function removeTag(attrSelector) {\n      this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n\n  }, {\n    key: \"removeTagElement\",\n    value: function removeTagElement(meta) {\n      if (meta) {\n        this._dom.remove(meta);\n      }\n    }\n  }, {\n    key: \"_getOrCreateElement\",\n    value: function _getOrCreateElement(meta) {\n      var _this14 = this;\n\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!forceCreation) {\n        var selector = this._parseSelector(meta); // It's allowed to have multiple elements with the same name so it's not enough to\n        // just check that element with the same name already present on the page. We also need to\n        // check if element has tag attributes\n\n\n        var elem = this.getTags(selector).filter(function (elem) {\n          return _this14._containsAttributes(meta, elem);\n        })[0];\n        if (elem !== undefined) return elem;\n      }\n\n      var element = this._dom.createElement('meta');\n\n      this._setMetaElementAttributes(meta, element);\n\n      var head = this._doc.getElementsByTagName('head')[0];\n\n      head.appendChild(element);\n      return element;\n    }\n  }, {\n    key: \"_setMetaElementAttributes\",\n    value: function _setMetaElementAttributes(tag, el) {\n      var _this15 = this;\n\n      Object.keys(tag).forEach(function (prop) {\n        return el.setAttribute(_this15._getMetaKeyMap(prop), tag[prop]);\n      });\n      return el;\n    }\n  }, {\n    key: \"_parseSelector\",\n    value: function _parseSelector(tag) {\n      var attr = tag.name ? 'name' : 'property';\n      return \"\".concat(attr, \"=\\\"\").concat(tag[attr], \"\\\"\");\n    }\n  }, {\n    key: \"_containsAttributes\",\n    value: function _containsAttributes(tag, elem) {\n      var _this16 = this;\n\n      return Object.keys(tag).every(function (key) {\n        return elem.getAttribute(_this16._getMetaKeyMap(key)) === tag[key];\n      });\n    }\n  }, {\n    key: \"_getMetaKeyMap\",\n    value: function _getMetaKeyMap(prop) {\n      return META_KEYS_MAP[prop] || prop;\n    }\n  }]);\n\n  return Meta;\n}();\n\nMeta.ɵfac = function Meta_Factory(t) {\n  return new (t || Meta)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nMeta.ɵprov = ɵɵdefineInjectable({\n  factory: createMeta,\n  token: Meta,\n  providedIn: \"root\"\n});\n\nMeta.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Meta, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createMeta,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\n\n\nvar META_KEYS_MAP = {\n  httpEquiv: 'http-equiv'\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Factory to create Title service.\n */\n\nfunction createTitle() {\n  return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\n\n\nvar Title = /*#__PURE__*/function () {\n  function Title(_doc) {\n    _classCallCheck(this, Title);\n\n    this._doc = _doc;\n  }\n  /**\n   * Get the title of the current HTML document.\n   */\n\n\n  _createClass(Title, [{\n    key: \"getTitle\",\n    value: function getTitle() {\n      return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n\n  }, {\n    key: \"setTitle\",\n    value: function setTitle(newTitle) {\n      this._doc.title = newTitle || '';\n    }\n  }]);\n\n  return Title;\n}();\n\nTitle.ɵfac = function Title_Factory(t) {\n  return new (t || Title)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nTitle.ɵprov = ɵɵdefineInjectable({\n  factory: createTitle,\n  token: Title,\n  providedIn: \"root\"\n});\n\nTitle.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Title, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createTitle,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar win = typeof window !== 'undefined' && window || {};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ChangeDetectionPerfRecord = /*#__PURE__*/_createClass(function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n  _classCallCheck(this, ChangeDetectionPerfRecord);\n\n  this.msPerTick = msPerTick;\n  this.numTicks = numTicks;\n});\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\n\n\nvar AngularProfiler = /*#__PURE__*/function () {\n  function AngularProfiler(ref) {\n    _classCallCheck(this, AngularProfiler);\n\n    this.appRef = ref.injector.get(ApplicationRef);\n  } // tslint:disable:no-console\n\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n\n\n  _createClass(AngularProfiler, [{\n    key: \"timeChangeDetection\",\n    value: function timeChangeDetection(config) {\n      var record = config && config['record'];\n      var profileName = 'Change Detection'; // Profiler is not available in Android browsers without dev tools opened\n\n      var isProfilerAvailable = win.console.profile != null;\n\n      if (record && isProfilerAvailable) {\n        win.console.profile(profileName);\n      }\n\n      var start = performanceNow();\n      var numTicks = 0;\n\n      while (numTicks < 5 || performanceNow() - start < 500) {\n        this.appRef.tick();\n        numTicks++;\n      }\n\n      var end = performanceNow();\n\n      if (record && isProfilerAvailable) {\n        win.console.profileEnd(profileName);\n      }\n\n      var msPerTick = (end - start) / numTicks;\n      win.console.log(\"ran \".concat(numTicks, \" change detection cycles\"));\n      win.console.log(\"\".concat(msPerTick.toFixed(2), \" ms per check\"));\n      return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n  }]);\n\n  return AngularProfiler;\n}();\n\nfunction performanceNow() {\n  return win.performance && win.performance.now ? win.performance.now() : new Date().getTime();\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\n\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\n\n\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction escapeHtml(text) {\n  var escapedText = {\n    '&': '&a;',\n    '\"': '&q;',\n    '\\'': '&s;',\n    '<': '&l;',\n    '>': '&g;'\n  };\n  return text.replace(/[&\"'<>]/g, function (s) {\n    return escapedText[s];\n  });\n}\n\nfunction unescapeHtml(text) {\n  var unescapedText = {\n    '&a;': '&',\n    '&q;': '\"',\n    '&s;': '\\'',\n    '&l;': '<',\n    '&g;': '>'\n  };\n  return text.replace(/&[^;]+;/g, function (s) {\n    return unescapedText[s];\n  });\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\n\n\nfunction makeStateKey(key) {\n  return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\n\n\nvar TransferState = /*#__PURE__*/function () {\n  function TransferState() {\n    _classCallCheck(this, TransferState);\n\n    this.store = {};\n    this.onSerializeCallbacks = {};\n  }\n  /** @internal */\n\n\n  _createClass(TransferState, [{\n    key: \"get\",\n    value:\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     */\n    function get(key, defaultValue) {\n      return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      this.store[key] = value;\n    }\n    /**\n     * Remove a key from the store.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      delete this.store[key];\n    }\n    /**\n     * Test whether a key exists in the store.\n     */\n\n  }, {\n    key: \"hasKey\",\n    value: function hasKey(key) {\n      return this.store.hasOwnProperty(key);\n    }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n\n  }, {\n    key: \"onSerialize\",\n    value: function onSerialize(key, callback) {\n      this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      // Call the onSerialize callbacks and put those values into the store.\n      for (var key in this.onSerializeCallbacks) {\n        if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n          try {\n            this.store[key] = this.onSerializeCallbacks[key]();\n          } catch (e) {\n            console.warn('Exception in onSerialize callback: ', e);\n          }\n        }\n      }\n\n      return JSON.stringify(this.store);\n    }\n  }], [{\n    key: \"init\",\n    value: function init(initState) {\n      var transferState = new TransferState();\n      transferState.store = initState;\n      return transferState;\n    }\n  }]);\n\n  return TransferState;\n}();\n\nTransferState.ɵfac = function TransferState_Factory(t) {\n  return new (t || TransferState)();\n};\n\nTransferState.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: TransferState,\n  factory: TransferState.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TransferState, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nfunction initTransferState(doc, appId) {\n  // Locate the script tag with the JSON data transferred from the server.\n  // The id of the script tag is set to the Angular appId + 'state'.\n  var script = doc.getElementById(appId + '-state');\n  var initialState = {};\n\n  if (script && script.textContent) {\n    try {\n      // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n      initialState = JSON.parse(unescapeHtml(script.textContent));\n    } catch (e) {\n      console.warn('Exception while restoring TransferState for app ' + appId, e);\n    }\n  }\n\n  return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\n\n\nvar BrowserTransferStateModule = /*#__PURE__*/_createClass(function BrowserTransferStateModule() {\n  _classCallCheck(this, BrowserTransferStateModule);\n});\n\nBrowserTransferStateModule.ɵfac = function BrowserTransferStateModule_Factory(t) {\n  return new (t || BrowserTransferStateModule)();\n};\n\nBrowserTransferStateModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: BrowserTransferStateModule\n});\nBrowserTransferStateModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: TransferState,\n    useFactory: initTransferState,\n    deps: [DOCUMENT, APP_ID]\n  }]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserTransferStateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: TransferState,\n        useFactory: initTransferState,\n        deps: [DOCUMENT, APP_ID]\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\n\n\nvar By = /*#__PURE__*/function () {\n  function By() {\n    _classCallCheck(this, By);\n  }\n\n  _createClass(By, null, [{\n    key: \"all\",\n    value:\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    function all() {\n      return function () {\n        return true;\n      };\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n\n  }, {\n    key: \"css\",\n    value: function css(selector) {\n      return function (debugElement) {\n        return debugElement.nativeElement != null ? elementMatches(debugElement.nativeElement, selector) : false;\n      };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n\n  }, {\n    key: \"directive\",\n    value: function directive(type) {\n      return function (debugNode) {\n        return debugNode.providerTokens.indexOf(type) !== -1;\n      };\n    }\n  }]);\n\n  return By;\n}();\n\nfunction elementMatches(n, selector) {\n  if (ɵgetDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n\n  return false;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\n\nvar VERSION = new Version('12.2.16');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, BROWSER_SANITIZATION_PROVIDERS as ɵBROWSER_SANITIZATION_PROVIDERS, BROWSER_SANITIZATION_PROVIDERS__POST_R3__ as ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, ELEMENT_PROBE_PROVIDERS as ɵELEMENT_PROBE_PROVIDERS, ELEMENT_PROBE_PROVIDERS__POST_R3__ as ɵELEMENT_PROBE_PROVIDERS__POST_R3__, HAMMER_PROVIDERS__POST_R3__ as ɵHAMMER_PROVIDERS__POST_R3__, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, errorHandler as ɵangular_packages_platform_browser_platform_browser_a, _document as ɵangular_packages_platform_browser_platform_browser_b, BROWSER_MODULE_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_c, createMeta as ɵangular_packages_platform_browser_platform_browser_d, createTitle as ɵangular_packages_platform_browser_platform_browser_e, initTransferState as ɵangular_packages_platform_browser_platform_browser_f, EventManagerPlugin as ɵangular_packages_platform_browser_platform_browser_g, HAMMER_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_h, HAMMER_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_i, domSanitizerImplFactory as ɵangular_packages_platform_browser_platform_browser_j, appInitializerFactory as ɵangular_packages_platform_browser_platform_browser_k, SERVER_TRANSITION_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_l, _createNgProbeR2 as ɵangular_packages_platform_browser_platform_browser_m, ELEMENT_PROBE_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_n, BrowserXhr as ɵangular_packages_platform_browser_platform_browser_o, GenericBrowserDomAdapter as ɵangular_packages_platform_browser_platform_browser_p, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };","map":{"version":3,"names":["ɵDomAdapter","ɵsetRootDomAdapter","ɵparseCookieValue","ɵgetDOM","DOCUMENT","ɵPLATFORM_BROWSER_ID","XhrFactory","CommonModule","ɵngcc0","InjectionToken","ApplicationInitStatus","APP_INITIALIZER","Injector","setTestabilityGetter","ɵglobal","Injectable","ApplicationRef","NgZone","ɵgetDebugNodeR2","NgProbeToken","Optional","Inject","ViewEncapsulation","APP_ID","RendererStyleFlags2","ɵConsole","NgModule","ɵɵdefineInjectable","ɵɵinject","forwardRef","SecurityContext","ɵallowSanitizationBypassAndThrow","ɵunwrapSafeValue","ɵgetSanitizationBypassType","ɵ_sanitizeUrl","ɵ_sanitizeHtml","ɵbypassSanitizationTrustHtml","ɵbypassSanitizationTrustStyle","ɵbypassSanitizationTrustScript","ɵbypassSanitizationTrustUrl","ɵbypassSanitizationTrustResourceUrl","INJECTOR","ErrorHandler","ɵsetDocument","PLATFORM_ID","PLATFORM_INITIALIZER","Sanitizer","createPlatformFactory","platformCore","ɵINJECTOR_SCOPE","RendererFactory2","Testability","ApplicationModule","SkipSelf","Version","GenericBrowserDomAdapter","arguments","supportsDOMEvents","BrowserDomAdapter","el","evt","listener","addEventListener","removeEventListener","dispatchEvent","node","parentNode","removeChild","tagName","doc","getDefaultDocument","createElement","document","implementation","createHTMLDocument","nodeType","Node","ELEMENT_NODE","DocumentFragment","target","window","body","href","getBaseElementHref","relativePath","baseElement","navigator","userAgent","name","cookie","querySelector","getAttribute","urlParsingNode","url","setAttribute","pathName","pathname","charAt","TRANSITION_ID","appInitializerFactory","transitionId","injector","get","donePromise","then","dom","styles","querySelectorAll","i","length","remove","SERVER_TRANSITION_PROVIDERS","provide","useFactory","deps","multi","BrowserGetTestability","registry","elem","findInAncestors","testability","findTestabilityInTree","Error","getAllTestabilities","getAllRootElements","whenAllStable","callback","testabilities","count","didWork","decrement","didWork_","forEach","whenStable","push","t","getTestability","isShadowRoot","host","parentElement","BrowserXhr","XMLHttpRequest","ɵfac","BrowserXhr_Factory","ɵprov","token","factory","ngDevMode","ɵsetClassMetadata","type","CAMEL_CASE_REGEXP","DASH_CASE_REGEXP","camelCaseToDashCase","input","replace","m","toLowerCase","dashCaseToCamelCase","toUpperCase","exportNgVar","value","COMPILED","ng","ɵ0","CORE_TOKENS","INSPECT_GLOBAL_NAME","CORE_TOKENS_GLOBAL_NAME","inspectNativeElementR2","element","_createNgProbeR2","coreTokens","Object","assign","_ngProbeTokensToMap","tokens","reduce","prev","ELEMENT_PROBE_PROVIDERS__POST_R3__","ELEMENT_PROBE_PROVIDERS__PRE_R3__","ELEMENT_PROBE_PROVIDERS","EVENT_MANAGER_PLUGINS","EventManager","plugins","_zone","_eventNameToPlugin","Map","p","manager","_plugins","slice","reverse","eventName","handler","plugin","_findPluginFor","addGlobalEventListener","supports","set","EventManager_Factory","ctorParameters","Array","decorators","args","EventManagerPlugin","_doc","getGlobalEventTarget","SharedStylesHost","_stylesSet","Set","additions","style","has","add","onStylesAdded","from","SharedStylesHost_Factory","DomSharedStylesHost","_hostNodes","head","styleNodes","styleEl","textContent","appendChild","hostNode","_addStylesToHost","removeStyle","delete","DomSharedStylesHost_Factory","undefined","styleNode","NAMESPACE_URIS","COMPONENT_REGEX","NG_DEV_MODE","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","shimContentAttribute","componentShortId","shimHostAttribute","flattenStyles","compId","isArray","decoratePreventDefault","eventHandler","event","allowDefaultBehavior","preventDefault","returnValue","hasLoggedNativeEncapsulationWarning","DomRendererFactory2","eventManager","sharedStylesHost","appId","rendererByCompId","defaultRenderer","DefaultDomRenderer2","encapsulation","Emulated","renderer","id","EmulatedEncapsulationDomRenderer2","applyToHost","ShadowDom","console","warn","ShadowDomRenderer","addStyles","DomRendererFactory2_Factory","String","data","create","namespace","createElementNS","createComment","createTextNode","parent","newChild","refChild","insertBefore","oldChild","selectorOrNode","preserveContent","nextSibling","namespaceUri","setAttributeNS","removeAttributeNS","removeAttribute","classList","flags","DashCase","Important","setProperty","removeProperty","checkNoSyntheticProp","nodeValue","ɵ0$1","charCodeAt","AT_CHARCODE","nameKind","component","contentAttr","hostAttr","hostEl","shadowRoot","attachShadow","mode","addHost","removeHost","nodeOrShadowRoot","DomEventsPlugin","DomEventsPlugin_Factory","EVENT_NAMES","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","events","overrides","mc","Hammer","options","enable","HammerGestureConfig_Factory","HammerGesturesPlugin","_config","loader","_loaderPromise","hasOwnProperty","isCustomEvent","zone","getZone","cancelRegistration","deregister","catch","runOutsideAngular","buildHammer","eventObj","runGuarded","on","off","destroy","indexOf","HammerGesturesPlugin_Factory","HAMMER_PROVIDERS__POST_R3__","HAMMER_PROVIDERS__PRE_R3__","useClass","HAMMER_PROVIDERS","HammerModule","HammerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","MODIFIER_KEYS","DOM_KEY_LOCATION_NUMPAD","_keyMap","_chromeNumKeyPadMap","ɵ0$2","altKey","ɵ1","ctrlKey","ɵ2","metaKey","ɵ3","shiftKey","MODIFIER_KEY_GETTERS","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","onAndCancel","parts","split","domEventName","shift","key","_normalizeKey","pop","fullKey","modifierName","index","splice","result","getEventKey","modifierGetter","getEventFullKey","keyName","KeyEventsPlugin_Factory","keyIdentifier","startsWith","fromCharCode","parseInt","substring","location","DomSanitizer","DomSanitizer_Factory","DomSanitizerImpl","providedIn","useExisting","domSanitizerImplFactory","ctx","NONE","HTML","toString","STYLE","SCRIPT","URL","RESOURCE_URL","DomSanitizerImpl_Factory","initDomAdapter","makeCurrent","init","errorHandler","_document","ɵ0$3","INTERNAL_BROWSER_PLATFORM_PROVIDERS","useValue","BROWSER_SANITIZATION_PROVIDERS__PRE_R3__","BROWSER_SANITIZATION_PROVIDERS__POST_R3__","BROWSER_SANITIZATION_PROVIDERS","platformBrowser","BROWSER_MODULE_PROVIDERS","BrowserModule","parentModule","params","ngModule","BrowserModule_Factory","imports","exports","ngJitMode","ɵɵsetNgModuleScope","createMeta","Meta","_dom","tag","forceCreation","_getOrCreateElement","tags","attrSelector","list","call","selector","_parseSelector","meta","getTag","_setMetaElementAttributes","removeTagElement","getTags","filter","_containsAttributes","getElementsByTagName","keys","prop","_getMetaKeyMap","attr","every","META_KEYS_MAP","Meta_Factory","httpEquiv","createTitle","Title","title","newTitle","Title_Factory","win","ChangeDetectionPerfRecord","msPerTick","numTicks","AngularProfiler","ref","appRef","config","record","profileName","isProfilerAvailable","profile","start","performanceNow","tick","end","profileEnd","log","toFixed","performance","now","Date","getTime","PROFILER_GLOBAL_NAME","enableDebugTools","disableDebugTools","escapeHtml","text","escapedText","s","unescapeHtml","unescapedText","makeStateKey","TransferState","store","onSerializeCallbacks","defaultValue","e","JSON","stringify","initState","transferState","TransferState_Factory","initTransferState","script","getElementById","initialState","parse","BrowserTransferStateModule","BrowserTransferStateModule_Factory","By","debugElement","nativeElement","elementMatches","debugNode","providerTokens","n","isElementNode","matches","msMatchesSelector","webkitMatchesSelector","VERSION","ɵBROWSER_SANITIZATION_PROVIDERS","ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__","ɵBrowserDomAdapter","ɵBrowserGetTestability","ɵDomEventsPlugin","ɵDomRendererFactory2","ɵDomSanitizerImpl","ɵDomSharedStylesHost","ɵELEMENT_PROBE_PROVIDERS","ɵELEMENT_PROBE_PROVIDERS__POST_R3__","ɵHAMMER_PROVIDERS__POST_R3__","ɵHammerGesturesPlugin","ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS","ɵKeyEventsPlugin","ɵNAMESPACE_URIS","ɵSharedStylesHost","ɵTRANSITION_ID","ɵangular_packages_platform_browser_platform_browser_a","ɵangular_packages_platform_browser_platform_browser_b","ɵangular_packages_platform_browser_platform_browser_c","ɵangular_packages_platform_browser_platform_browser_d","ɵangular_packages_platform_browser_platform_browser_e","ɵangular_packages_platform_browser_platform_browser_f","ɵangular_packages_platform_browser_platform_browser_g","ɵangular_packages_platform_browser_platform_browser_h","ɵangular_packages_platform_browser_platform_browser_i","ɵangular_packages_platform_browser_platform_browser_j","ɵangular_packages_platform_browser_platform_browser_k","ɵangular_packages_platform_browser_platform_browser_l","ɵangular_packages_platform_browser_platform_browser_m","ɵangular_packages_platform_browser_platform_browser_n","ɵangular_packages_platform_browser_platform_browser_o","ɵangular_packages_platform_browser_platform_browser_p","ɵescapeHtml","ɵflattenStyles","ɵinitDomAdapter","ɵshimContentAttribute","ɵshimHostAttribute"],"sources":["/Users/aman/Qulabs/QNT_Web/frontend/node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js"],"sourcesContent":["/**\n * @license Angular v12.2.16\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nexport { ɵgetDOM } from '@angular/common';\nimport { InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, setTestabilityGetter, ɵglobal, Injectable, ApplicationRef, NgZone, ɵgetDebugNodeR2, NgProbeToken, Optional, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵConsole, NgModule, ɵɵdefineInjectable, ɵɵinject, forwardRef, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵgetSanitizationBypassType, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, INJECTOR, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, Sanitizer, createPlatformFactory, platformCore, ɵINJECTOR_SCOPE, RendererFactory2, Testability, ApplicationModule, SkipSelf, Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n    constructor() {\n        super(...arguments);\n        this.supportsDOMEvents = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n    static makeCurrent() {\n        ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n    onAndCancel(el, evt, listener) {\n        el.addEventListener(evt, listener, false);\n        // Needed to follow Dart's subscription semantic, until fix of\n        // https://code.google.com/p/dart/issues/detail?id=17406\n        return () => {\n            el.removeEventListener(evt, listener, false);\n        };\n    }\n    dispatchEvent(el, evt) {\n        el.dispatchEvent(evt);\n    }\n    remove(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    }\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    getDefaultDocument() {\n        return document;\n    }\n    isElementNode(node) {\n        return node.nodeType === Node.ELEMENT_NODE;\n    }\n    isShadowRoot(node) {\n        return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    getBaseHref(doc) {\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    resetBaseElement() {\n        baseElement = null;\n    }\n    getUserAgent() {\n        return window.navigator.userAgent;\n    }\n    getCookie(name) {\n        return ɵparseCookieValue(document.cookie, name);\n    }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n    baseElement = baseElement || document.querySelector('base');\n    return baseElement ? baseElement.getAttribute('href') : null;\n}\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode;\nfunction relativePath(url) {\n    urlParsingNode = urlParsingNode || document.createElement('a');\n    urlParsingNode.setAttribute('href', url);\n    const pathName = urlParsingNode.pathname;\n    return pathName.charAt(0) === '/' ? pathName : `/${pathName}`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nconst TRANSITION_ID = new InjectionToken('TRANSITION_ID');\nfunction appInitializerFactory(transitionId, document, injector) {\n    return () => {\n        // Wait for all application initializers to be completed before removing the styles set by\n        // the server.\n        injector.get(ApplicationInitStatus).donePromise.then(() => {\n            const dom = ɵgetDOM();\n            const styles = document.querySelectorAll(`style[ng-transition=\"${transitionId}\"]`);\n            for (let i = 0; i < styles.length; i++) {\n                dom.remove(styles[i]);\n            }\n        });\n    };\n}\nconst SERVER_TRANSITION_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: appInitializerFactory,\n        deps: [TRANSITION_ID, DOCUMENT, Injector],\n        multi: true\n    },\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BrowserGetTestability {\n    static init() {\n        setTestabilityGetter(new BrowserGetTestability());\n    }\n    addToWindow(registry) {\n        ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new Error('Could not find testability for element.');\n            }\n            return testability;\n        };\n        ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        const whenAllStable = (callback /** TODO #9100 */) => {\n            const testabilities = ɵglobal['getAllAngularTestabilities']();\n            let count = testabilities.length;\n            let didWork = false;\n            const decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!ɵglobal['frameworkStabilizers']) {\n            ɵglobal['frameworkStabilizers'] = [];\n        }\n        ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (ɵgetDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, elem.host, true);\n        }\n        return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n    build() {\n        return new XMLHttpRequest();\n    }\n}\nBrowserXhr.ɵfac = function BrowserXhr_Factory(t) { return new (t || BrowserXhr)(); };\nBrowserXhr.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: BrowserXhr, factory: BrowserXhr.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserXhr, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n        ng[name] = value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ɵ0 = () => ({\n    'ApplicationRef': ApplicationRef,\n    'NgZone': NgZone,\n});\nconst CORE_TOKENS = (ɵ0)();\nconst INSPECT_GLOBAL_NAME = 'probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nfunction inspectNativeElementR2(element) {\n    return ɵgetDebugNodeR2(element);\n}\nfunction _createNgProbeR2(coreTokens) {\n    exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElementR2);\n    exportNgVar(CORE_TOKENS_GLOBAL_NAME, Object.assign(Object.assign({}, CORE_TOKENS), _ngProbeTokensToMap(coreTokens || [])));\n    return () => inspectNativeElementR2;\n}\nfunction _ngProbeTokensToMap(tokens) {\n    return tokens.reduce((prev, t) => (prev[t.name] = t.token, prev), {});\n}\n/**\n * In Ivy, we don't support NgProbe because we have our own set of testing utilities\n * with more robust functionality.\n *\n * We shouldn't bring in NgProbe because it prevents DebugNode and friends from\n * tree-shaking properly.\n */\nconst ELEMENT_PROBE_PROVIDERS__POST_R3__ = [];\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nconst ELEMENT_PROBE_PROVIDERS__PRE_R3__ = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: _createNgProbeR2,\n        deps: [\n            [NgProbeToken, new Optional()],\n        ],\n        multi: true,\n    },\n];\nconst ELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS__POST_R3__;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach(p => p.manager = this);\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     * @deprecated No longer being used in Ivy code. To be removed in version 14.\n     */\n    addGlobalEventListener(target, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n        return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n        const plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        const plugins = this._plugins;\n        for (let i = 0; i < plugins.length; i++) {\n            const plugin = plugins[i];\n            if (plugin.supports(eventName)) {\n                this._eventNameToPlugin.set(eventName, plugin);\n                return plugin;\n            }\n        }\n        throw new Error(`No event manager plugin found for event ${eventName}`);\n    }\n}\nEventManager.ɵfac = function EventManager_Factory(t) { return new (t || EventManager)(ɵngcc0.ɵɵinject(EVENT_MANAGER_PLUGINS), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nEventManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: EventManager, factory: EventManager.ɵfac });\nEventManager.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Inject, args: [EVENT_MANAGER_PLUGINS,] }] },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EventManager, [{\n        type: Injectable\n    }], function () { return [{ type: Array, decorators: [{\n                type: Inject,\n                args: [EVENT_MANAGER_PLUGINS]\n            }] }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass EventManagerPlugin {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    addGlobalEventListener(element, eventName, handler) {\n        const target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n        if (!target) {\n            throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n        }\n        return this.addEventListener(target, eventName, handler);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass SharedStylesHost {\n    constructor() {\n        /** @internal */\n        this._stylesSet = new Set();\n    }\n    addStyles(styles) {\n        const additions = new Set();\n        styles.forEach(style => {\n            if (!this._stylesSet.has(style)) {\n                this._stylesSet.add(style);\n                additions.add(style);\n            }\n        });\n        this.onStylesAdded(additions);\n    }\n    onStylesAdded(additions) { }\n    getAllStyles() {\n        return Array.from(this._stylesSet);\n    }\n}\nSharedStylesHost.ɵfac = function SharedStylesHost_Factory(t) { return new (t || SharedStylesHost)(); };\nSharedStylesHost.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: SharedStylesHost, factory: SharedStylesHost.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SharedStylesHost, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\nclass DomSharedStylesHost extends SharedStylesHost {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n        // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n        this._hostNodes = new Map();\n        this._hostNodes.set(_doc.head, []);\n    }\n    _addStylesToHost(styles, host, styleNodes) {\n        styles.forEach((style) => {\n            const styleEl = this._doc.createElement('style');\n            styleEl.textContent = style;\n            styleNodes.push(host.appendChild(styleEl));\n        });\n    }\n    addHost(hostNode) {\n        const styleNodes = [];\n        this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n        this._hostNodes.set(hostNode, styleNodes);\n    }\n    removeHost(hostNode) {\n        const styleNodes = this._hostNodes.get(hostNode);\n        if (styleNodes) {\n            styleNodes.forEach(removeStyle);\n        }\n        this._hostNodes.delete(hostNode);\n    }\n    onStylesAdded(additions) {\n        this._hostNodes.forEach((styleNodes, hostNode) => {\n            this._addStylesToHost(additions, hostNode, styleNodes);\n        });\n    }\n    ngOnDestroy() {\n        this._hostNodes.forEach(styleNodes => styleNodes.forEach(removeStyle));\n    }\n}\nDomSharedStylesHost.ɵfac = function DomSharedStylesHost_Factory(t) { return new (t || DomSharedStylesHost)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nDomSharedStylesHost.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DomSharedStylesHost, factory: DomSharedStylesHost.ɵfac });\nDomSharedStylesHost.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSharedStylesHost, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nfunction removeStyle(styleNode) {\n    ɵgetDOM().remove(styleNode);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction flattenStyles(compId, styles, target) {\n    for (let i = 0; i < styles.length; i++) {\n        let style = styles[i];\n        if (Array.isArray(style)) {\n            flattenStyles(compId, style, target);\n        }\n        else {\n            style = style.replace(COMPONENT_REGEX, compId);\n            target.push(style);\n        }\n    }\n    return target;\n}\nfunction decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n    // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n    // the listener (see below).\n    return (event) => {\n        // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n        // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n        // can inspect the listener toString contents for the existence of this special token. Because\n        // the token is a string literal, it is ensured to not be modified by compiled code.\n        if (event === '__ngUnwrap__') {\n            return eventHandler;\n        }\n        const allowDefaultBehavior = eventHandler(event);\n        if (allowDefaultBehavior === false) {\n            // TODO(tbosch): move preventDefault into event plugins...\n            event.preventDefault();\n            event.returnValue = false;\n        }\n        return undefined;\n    };\n}\nlet hasLoggedNativeEncapsulationWarning = false;\nclass DomRendererFactory2 {\n    constructor(eventManager, sharedStylesHost, appId) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.rendererByCompId = new Map();\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        switch (type.encapsulation) {\n            case ViewEncapsulation.Emulated: {\n                let renderer = this.rendererByCompId.get(type.id);\n                if (!renderer) {\n                    renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n                    this.rendererByCompId.set(type.id, renderer);\n                }\n                renderer.applyToHost(element);\n                return renderer;\n            }\n            // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an enum\n            // value that is not known (but previously was the value for ViewEncapsulation.Native)\n            case 1:\n            case ViewEncapsulation.ShadowDom:\n                // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n                if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an\n                    // enum value that is not known (but previously was the value for\n                    // ViewEncapsulation.Native)\n                    !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n                    hasLoggedNativeEncapsulationWarning = true;\n                    console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n                }\n                return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n            default: {\n                if (!this.rendererByCompId.has(type.id)) {\n                    const styles = flattenStyles(type.id, type.styles, []);\n                    this.sharedStylesHost.addStyles(styles);\n                    this.rendererByCompId.set(type.id, this.defaultRenderer);\n                }\n                return this.defaultRenderer;\n            }\n        }\n    }\n    begin() { }\n    end() { }\n}\nDomRendererFactory2.ɵfac = function DomRendererFactory2_Factory(t) { return new (t || DomRendererFactory2)(ɵngcc0.ɵɵinject(EventManager), ɵngcc0.ɵɵinject(DomSharedStylesHost), ɵngcc0.ɵɵinject(APP_ID)); };\nDomRendererFactory2.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DomRendererFactory2, factory: DomRendererFactory2.ɵfac });\nDomRendererFactory2.ctorParameters = () => [\n    { type: EventManager },\n    { type: DomSharedStylesHost },\n    { type: String, decorators: [{ type: Inject, args: [APP_ID,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomRendererFactory2, [{\n        type: Injectable\n    }], function () { return [{ type: EventManager }, { type: DomSharedStylesHost }, { type: String, decorators: [{\n                type: Inject,\n                args: [APP_ID]\n            }] }]; }, null); })();\nclass DefaultDomRenderer2 {\n    constructor(eventManager) {\n        this.eventManager = eventManager;\n        this.data = Object.create(null);\n    }\n    destroy() { }\n    createElement(name, namespace) {\n        if (namespace) {\n            // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n            // will result in undefined, so we just return the namespace here.\n            return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return document.createElement(name);\n    }\n    createComment(value) {\n        return document.createComment(value);\n    }\n    createText(value) {\n        return document.createTextNode(value);\n    }\n    appendChild(parent, newChild) {\n        parent.appendChild(newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            parent.insertBefore(newChild, refChild);\n        }\n    }\n    removeChild(parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        let el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    }\n    parentNode(node) {\n        return node.parentNode;\n    }\n    nextSibling(node) {\n        return node.nextSibling;\n    }\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            // TODO(FW-811): Ivy may cause issues here because it's passing around\n            // full URIs for namespaces, therefore this lookup will fail.\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            // TODO(FW-811): Ivy may cause issues here because it's passing around\n            // full URIs for namespaces, therefore this lookup will fail.\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                // TODO(FW-811): Since ivy is passing around full URIs for namespaces\n                // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n                // which is wrong.\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    addClass(el, name) {\n        el.classList.add(name);\n    }\n    removeClass(el, name) {\n        el.classList.remove(name);\n    }\n    setStyle(el, style, value, flags) {\n        if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n            el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.removeProperty(style);\n        }\n        else {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            el.style[style] = '';\n        }\n    }\n    setProperty(el, name, value) {\n        NG_DEV_MODE && checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    setValue(node, value) {\n        node.nodeValue = value;\n    }\n    listen(target, event, callback) {\n        NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n        }\n        return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    }\n}\nconst ɵ0$1 = () => '@'.charCodeAt(0);\nconst AT_CHARCODE = (ɵ0$1)();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new Error(`Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n    }\n}\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, component, appId) {\n        super(eventManager);\n        this.component = component;\n        const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n        sharedStylesHost.addStyles(styles);\n        this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n        this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    }\n    applyToHost(element) {\n        super.setAttribute(element, this.hostAttr, '');\n    }\n    createElement(parent, name) {\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, hostEl, component) {\n        super(eventManager);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        const styles = flattenStyles(component.id, component.styles, []);\n        for (let i = 0; i < styles.length; i++) {\n            const styleEl = document.createElement('style');\n            styleEl.textContent = styles[i];\n            this.shadowRoot.appendChild(styleEl);\n        }\n    }\n    nodeOrShadowRoot(node) {\n        return node === this.hostEl ? this.shadowRoot : node;\n    }\n    destroy() {\n        this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    removeChild(parent, oldChild) {\n        return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n    }\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        element.addEventListener(eventName, handler, false);\n        return () => this.removeEventListener(element, eventName, handler);\n    }\n    removeEventListener(target, eventName, callback) {\n        return target.removeEventListener(eventName, callback);\n    }\n}\nDomEventsPlugin.ɵfac = function DomEventsPlugin_Factory(t) { return new (t || DomEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nDomEventsPlugin.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DomEventsPlugin, factory: DomEventsPlugin.ɵfac });\nDomEventsPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomEventsPlugin, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n    'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n    constructor() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n         * Maps gesture event names to a set of configuration options\n         * that specify overrides to the default values for specific properties.\n         *\n         * The key is a supported event name to be configured,\n         * and the options object contains a set of properties, with override values\n         * to be applied to the named recognizer event.\n         * For example, to disable recognition of the rotate event, specify\n         *  `{\"rotate\": {\"enable\": false}}`.\n         *\n         * Properties that are not present take the HammerJS default values.\n         * For information about which properties are supported for which events,\n         * and their allowed and default values, see\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         *\n         */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        const mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n}\nHammerGestureConfig.ɵfac = function HammerGestureConfig_Factory(t) { return new (t || HammerGestureConfig)(); };\nHammerGestureConfig.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: HammerGestureConfig, factory: HammerGestureConfig.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGestureConfig, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    constructor(doc, _config, console, loader) {\n        super(doc);\n        this._config = _config;\n        this.console = console;\n        this.loader = loader;\n        this._loaderPromise = null;\n    }\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                    `loaded and no custom loader has been specified.`);\n            }\n            return false;\n        }\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            this._loaderPromise = this._loaderPromise || this.loader();\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            let cancelRegistration = false;\n            let deregister = () => {\n                cancelRegistration = true;\n            };\n            this._loaderPromise\n                .then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    }\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(() => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                        `Hammer.JS loader failed.`);\n                }\n                deregister = () => { };\n            });\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => {\n                deregister();\n            };\n        }\n        return zone.runOutsideAngular(() => {\n            // Creating the manager bind events, must be done outside of angular\n            const mc = this._config.buildHammer(element);\n            const callback = function (eventObj) {\n                zone.runGuarded(function () {\n                    handler(eventObj);\n                });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n    }\n}\nHammerGesturesPlugin.ɵfac = function HammerGesturesPlugin_Factory(t) { return new (t || HammerGesturesPlugin)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(HAMMER_GESTURE_CONFIG), ɵngcc0.ɵɵinject(ɵngcc0.ɵConsole), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8)); };\nHammerGesturesPlugin.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: HammerGesturesPlugin, factory: HammerGesturesPlugin.ɵfac });\nHammerGesturesPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: HammerGestureConfig, decorators: [{ type: Inject, args: [HAMMER_GESTURE_CONFIG,] }] },\n    { type: ɵConsole },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HAMMER_LOADER,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: HammerGestureConfig, decorators: [{\n                type: Inject,\n                args: [HAMMER_GESTURE_CONFIG]\n            }] }, { type: ɵngcc0.ɵConsole }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [HAMMER_LOADER]\n            }] }]; }, null); })();\n/**\n * In Ivy, support for Hammer gestures is optional, so applications must\n * import the `HammerModule` at root to turn on support. This means that\n * Hammer-specific code can be tree-shaken away if not needed.\n */\nconst HAMMER_PROVIDERS__POST_R3__ = [];\n/**\n * In View Engine, support for Hammer gestures is built-in by default.\n */\nconst HAMMER_PROVIDERS__PRE_R3__ = [\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n    },\n    { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n];\nconst HAMMER_PROVIDERS = HAMMER_PROVIDERS__POST_R3__;\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\nclass HammerModule {\n}\nHammerModule.ɵfac = function HammerModule_Factory(t) { return new (t || HammerModule)(); };\nHammerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: HammerModule });\nHammerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: HAMMER_PROVIDERS__PRE_R3__ });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerModule, [{\n        type: NgModule,\n        args: [{ providers: HAMMER_PROVIDERS__PRE_R3__ }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nconst DOM_KEY_LOCATION_NUMPAD = 3;\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nconst _keyMap = {\n    // The following values are here for cross-browser compatibility and to match the W3C standard\n    // cf https://www.w3.org/TR/DOM-Level-3-Events-key/\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nconst _chromeNumKeyPadMap = {\n    'A': '1',\n    'B': '2',\n    'C': '3',\n    'D': '4',\n    'E': '5',\n    'F': '6',\n    'G': '7',\n    'H': '8',\n    'I': '9',\n    'J': '*',\n    'K': '+',\n    'M': '-',\n    'N': '.',\n    'O': '/',\n    '\\x60': '0',\n    '\\x90': 'NumLock'\n};\nconst ɵ0$2 = (event) => event.altKey, ɵ1 = (event) => event.ctrlKey, ɵ2 = (event) => event.metaKey, ɵ3 = (event) => event.shiftKey;\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': ɵ0$2,\n    'control': ɵ1,\n    'meta': ɵ2,\n    'shift': ɵ3\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n        super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n        const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    }\n    static parseEventName(eventName) {\n        const parts = eventName.toLowerCase().split('.');\n        const domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        const key = KeyEventsPlugin._normalizeKey(parts.pop());\n        let fullKey = '';\n        MODIFIER_KEYS.forEach(modifierName => {\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    static getEventFullKey(event) {\n        let fullKey = '';\n        let key = getEventKey(event);\n        key = key.toLowerCase();\n        if (key === ' ') {\n            key = 'space'; // for readability\n        }\n        else if (key === '.') {\n            key = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            if (modifierName != key) {\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    fullKey += modifierName + '.';\n                }\n            }\n        });\n        fullKey += key;\n        return fullKey;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event /** TODO #9100 */) => {\n            if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    }\n}\nKeyEventsPlugin.ɵfac = function KeyEventsPlugin_Factory(t) { return new (t || KeyEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nKeyEventsPlugin.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: KeyEventsPlugin, factory: KeyEventsPlugin.ɵfac });\nKeyEventsPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyEventsPlugin, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nfunction getEventKey(event) {\n    let key = event.key;\n    if (key == null) {\n        key = event.keyIdentifier;\n        // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n        // Safari cf\n        // https://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n        if (key == null) {\n            return 'Unidentified';\n        }\n        if (key.startsWith('U+')) {\n            key = String.fromCharCode(parseInt(key.substring(2), 16));\n            if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n                // There is a bug in Chrome for numeric keypad keys:\n                // https://code.google.com/p/chromium/issues/detail?id=155654\n                // 1, 2, 3 ... are reported as A, B, C ...\n                key = _chromeNumKeyPadMap[key];\n            }\n        }\n    }\n    return _keyMap[key] || key;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n}\nDomSanitizer.ɵfac = function DomSanitizer_Factory(t) { return new (t || DomSanitizer)(); };\nDomSanitizer.ɵprov = ɵɵdefineInjectable({ factory: function DomSanitizer_Factory() { return ɵɵinject(DomSanitizerImpl); }, token: DomSanitizer, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl) }]\n    }], null, null); })();\nfunction domSanitizerImplFactory(injector) {\n    return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nclass DomSanitizerImpl extends DomSanitizer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* Html */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n            case SecurityContext.STYLE:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* Style */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return value;\n            case SecurityContext.SCRIPT:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* Script */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a script context');\n            case SecurityContext.URL:\n                const type = ɵgetSanitizationBypassType(value);\n                if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* Url */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* ResourceUrl */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n            default:\n                throw new Error(`Unexpected SecurityContext ${ctx} (see https://g.co/ng/security#xss)`);\n        }\n    }\n    bypassSecurityTrustHtml(value) {\n        return ɵbypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n        return ɵbypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n        return ɵbypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n        return ɵbypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n        return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n}\nDomSanitizerImpl.ɵfac = function DomSanitizerImpl_Factory(t) { return new (t || DomSanitizerImpl)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nDomSanitizerImpl.ɵprov = ɵɵdefineInjectable({ factory: function DomSanitizerImpl_Factory() { return domSanitizerImplFactory(ɵɵinject(INJECTOR)); }, token: DomSanitizerImpl, providedIn: \"root\" });\nDomSanitizerImpl.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizerImpl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    // Tell ivy about the global document\n    ɵsetDocument(document);\n    return document;\n}\nconst ɵ0$3 = ɵPLATFORM_BROWSER_ID;\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ɵ0$3 },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\nconst BROWSER_SANITIZATION_PROVIDERS__PRE_R3__ = [\n    { provide: Sanitizer, useExisting: DomSanitizer },\n    { provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT] },\n];\nconst BROWSER_SANITIZATION_PROVIDERS__POST_R3__ = [];\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](https://g.co/ng/security).\n * @publicApi\n */\nconst BROWSER_SANITIZATION_PROVIDERS = BROWSER_SANITIZATION_PROVIDERS__POST_R3__;\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\nconst BROWSER_MODULE_PROVIDERS = [\n    BROWSER_SANITIZATION_PROVIDERS,\n    { provide: ɵINJECTOR_SCOPE, useValue: 'root' },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] },\n    HAMMER_PROVIDERS,\n    {\n        provide: DomRendererFactory2,\n        useClass: DomRendererFactory2,\n        deps: [EventManager, DomSharedStylesHost, APP_ID]\n    },\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n    { provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT] },\n    { provide: Testability, useClass: Testability, deps: [NgZone] },\n    { provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone] },\n    { provide: XhrFactory, useClass: BrowserXhr, deps: [] },\n    ELEMENT_PROBE_PROVIDERS,\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n    constructor(parentModule) {\n        if (parentModule) {\n            throw new Error(`BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n        }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     */\n    static withServerTransition(params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n                { provide: TRANSITION_ID, useExisting: APP_ID },\n                SERVER_TRANSITION_PROVIDERS,\n            ],\n        };\n    }\n}\nBrowserModule.ɵfac = function BrowserModule_Factory(t) { return new (t || BrowserModule)(ɵngcc0.ɵɵinject(BrowserModule, 12)); };\nBrowserModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BrowserModule });\nBrowserModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: BROWSER_MODULE_PROVIDERS, imports: [CommonModule, ApplicationModule] });\nBrowserModule.ctorParameters = () => [\n    { type: BrowserModule, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [BrowserModule,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserModule, [{\n        type: NgModule,\n        args: [{ providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule] }]\n    }], function () { return [{ type: BrowserModule, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [BrowserModule]\n            }] }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BrowserModule, { exports: function () { return [CommonModule, ApplicationModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n    return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = ɵgetDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        const meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            const selector = this._parseSelector(meta);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n            if (elem !== undefined)\n                return elem;\n        }\n        const element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        const head = this._doc.getElementsByTagName('head')[0];\n        head.appendChild(element);\n        return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n        return el;\n    }\n    _parseSelector(tag) {\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n        return META_KEYS_MAP[prop] || prop;\n    }\n}\nMeta.ɵfac = function Meta_Factory(t) { return new (t || Meta)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nMeta.ɵprov = ɵɵdefineInjectable({ factory: createMeta, token: Meta, providedIn: \"root\" });\nMeta.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Meta, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: createMeta, deps: [] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n    httpEquiv: 'http-equiv'\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n    return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n        return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n    }\n}\nTitle.ɵfac = function Title_Factory(t) { return new (t || Title)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nTitle.ɵprov = ɵɵdefineInjectable({ factory: createTitle, token: Title, providedIn: \"root\" });\nTitle.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Title, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: createTitle, deps: [] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst win = typeof window !== 'undefined' && window || {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ChangeDetectionPerfRecord {\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    constructor(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    timeChangeDetection(config) {\n        const record = config && config['record'];\n        const profileName = 'Change Detection';\n        // Profiler is not available in Android browsers without dev tools opened\n        const isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        const start = performanceNow();\n        let numTicks = 0;\n        while (numTicks < 5 || (performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        const end = performanceNow();\n        if (record && isProfilerAvailable) {\n            win.console.profileEnd(profileName);\n        }\n        const msPerTick = (end - start) / numTicks;\n        win.console.log(`ran ${numTicks} change detection cycles`);\n        win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\nfunction performanceNow() {\n    return win.performance && win.performance.now ? win.performance.now() :\n        new Date().getTime();\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction escapeHtml(text) {\n    const escapedText = {\n        '&': '&a;',\n        '\"': '&q;',\n        '\\'': '&s;',\n        '<': '&l;',\n        '>': '&g;',\n    };\n    return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\nfunction unescapeHtml(text) {\n    const unescapedText = {\n        '&a;': '&',\n        '&q;': '\"',\n        '&s;': '\\'',\n        '&l;': '<',\n        '&g;': '>',\n    };\n    return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nfunction makeStateKey(key) {\n    return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\nclass TransferState {\n    constructor() {\n        this.store = {};\n        this.onSerializeCallbacks = {};\n    }\n    /** @internal */\n    static init(initState) {\n        const transferState = new TransferState();\n        transferState.store = initState;\n        return transferState;\n    }\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     */\n    get(key, defaultValue) {\n        return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     */\n    set(key, value) {\n        this.store[key] = value;\n    }\n    /**\n     * Remove a key from the store.\n     */\n    remove(key) {\n        delete this.store[key];\n    }\n    /**\n     * Test whether a key exists in the store.\n     */\n    hasKey(key) {\n        return this.store.hasOwnProperty(key);\n    }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n    onSerialize(key, callback) {\n        this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n    toJson() {\n        // Call the onSerialize callbacks and put those values into the store.\n        for (const key in this.onSerializeCallbacks) {\n            if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n                try {\n                    this.store[key] = this.onSerializeCallbacks[key]();\n                }\n                catch (e) {\n                    console.warn('Exception in onSerialize callback: ', e);\n                }\n            }\n        }\n        return JSON.stringify(this.store);\n    }\n}\nTransferState.ɵfac = function TransferState_Factory(t) { return new (t || TransferState)(); };\nTransferState.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TransferState, factory: TransferState.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TransferState, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\nfunction initTransferState(doc, appId) {\n    // Locate the script tag with the JSON data transferred from the server.\n    // The id of the script tag is set to the Angular appId + 'state'.\n    const script = doc.getElementById(appId + '-state');\n    let initialState = {};\n    if (script && script.textContent) {\n        try {\n            // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n            initialState = JSON.parse(unescapeHtml(script.textContent));\n        }\n        catch (e) {\n            console.warn('Exception while restoring TransferState for app ' + appId, e);\n        }\n    }\n    return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\nclass BrowserTransferStateModule {\n}\nBrowserTransferStateModule.ɵfac = function BrowserTransferStateModule_Factory(t) { return new (t || BrowserTransferStateModule)(); };\nBrowserTransferStateModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BrowserTransferStateModule });\nBrowserTransferStateModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [{ provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID] }] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserTransferStateModule, [{\n        type: NgModule,\n        args: [{\n                providers: [{ provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID] }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    static all() {\n        return () => true;\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null ?\n                elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    static directive(type) {\n        return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n    }\n}\nfunction elementMatches(n, selector) {\n    if (ɵgetDOM().isElementNode(n)) {\n        return n.matches && n.matches(selector) ||\n            n.msMatchesSelector && n.msMatchesSelector(selector) ||\n            n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('12.2.16');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, BROWSER_SANITIZATION_PROVIDERS as ɵBROWSER_SANITIZATION_PROVIDERS, BROWSER_SANITIZATION_PROVIDERS__POST_R3__ as ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, ELEMENT_PROBE_PROVIDERS as ɵELEMENT_PROBE_PROVIDERS, ELEMENT_PROBE_PROVIDERS__POST_R3__ as ɵELEMENT_PROBE_PROVIDERS__POST_R3__, HAMMER_PROVIDERS__POST_R3__ as ɵHAMMER_PROVIDERS__POST_R3__, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, errorHandler as ɵangular_packages_platform_browser_platform_browser_a, _document as ɵangular_packages_platform_browser_platform_browser_b, BROWSER_MODULE_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_c, createMeta as ɵangular_packages_platform_browser_platform_browser_d, createTitle as ɵangular_packages_platform_browser_platform_browser_e, initTransferState as ɵangular_packages_platform_browser_platform_browser_f, EventManagerPlugin as ɵangular_packages_platform_browser_platform_browser_g, HAMMER_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_h, HAMMER_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_i, domSanitizerImplFactory as ɵangular_packages_platform_browser_platform_browser_j, appInitializerFactory as ɵangular_packages_platform_browser_platform_browser_k, SERVER_TRANSITION_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_l, _createNgProbeR2 as ɵangular_packages_platform_browser_platform_browser_m, ELEMENT_PROBE_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_n, BrowserXhr as ɵangular_packages_platform_browser_platform_browser_o, GenericBrowserDomAdapter as ɵangular_packages_platform_browser_platform_browser_p, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}