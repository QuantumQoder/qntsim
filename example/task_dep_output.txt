start a
Virtual neighbor s1 ['a', 's1', 's2'] {}
request src , resp , curr node a s2 a INITIATED
self to middel {'s1': 'middle_a_s1'}
self to middel {'s2': 'middle_s2_b'}
start s1
request src , resp , curr node a s2 s1 INITIATED
start s2
destination s2
setting dependencies
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
last_virtual_index -1
----------Enatanglement Generation Task----------
Current node in Entanglement generation s2
Path-------- ['a', 's1', 's2']
Reservation------ a s2 0
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_s2_s1   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x14559e8b0>
depedencies for task:   TaskPurifyLefts2s1   are   ['TaskEntGen_s2_s1']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x145617970>: []}
Swap at node: s1 left: a and right: s2
order of swaps:  [(('a', 's2', 's1'), 2)]
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x14559e9d0>
depedencies for task:   TaskSwapRightEnds2a   are   ['TaskPurifyLefts2s1']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x1456179a0>: []}
ENT_SWAP_RIGHT at:  s2
tasks created at s2
setting dependencies
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
last_virtual_index -1
----------Enatanglement Generation Task----------
Current node in Entanglement generation s1
Path-------- ['a', 's1', 's2']
Reservation------ a s2 0
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_s1_a   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_s1_s2   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x14559ec10>
depedencies for task:   TaskPurifyLefts1a   are   ['TaskEntGen_s1_a']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x14561f8b0>: []}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x14559ed30>
depedencies for task:   TaskPurifyRights1s2   are   ['TaskEntGen_s1_s2']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x14561f880>: []}
Swap at node: s1 left: a and right: s2
order of swaps:  [(('a', 's2', 's1'), 2)]
while setting task action: left :a right: s2 and mid: s1 and self.owner.name: s1
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle at 0x14559ee50>
depedencies for task:   TaskSwapMiddles2a   are   ['TaskPurifyRights1s2', 'TaskPurifyLefts1a']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x14561f940>: [], <qntsim.resource_management.task_manager.Task object at 0x14561f910>: []}
ENT_SWAP_MIDDLE at:  s1
last_left_task   :  TaskPurifyRights1s2
last_right_task   :  TaskPurifyLefts1a
tasks created at  a
setting dependencies
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s2
res.isvirtual True
len of res 1
inside has virtual reservation a s2
res.isvirtual True
Another virtual request arrived
last_virtual_index -1
----------Enatanglement Generation Task----------
Current node in Entanglement generation a
Path-------- ['a', 's1', 's2']
Reservation------ a s2 0
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_a_s1   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x14559ef70>
depedencies for task:   TaskPurifyRightas1   are   ['TaskEntGen_a_s1']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x1456220d0>: []}
Swap at node: s1 left: a and right: s2
order of swaps:  [(('a', 's2', 's1'), 2)]
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x14559e940>
depedencies for task:   TaskSwapLeftEndas2   are   ['TaskPurifyRightas1']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x145622100>: []}
ENT_SWAP_LEFT at:  a
initiate_tasks running for node:  a
inside EG right task action:   TaskEntGen_a_s1
len(subtasks):	 5
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14559eca0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14559edc0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1456290d0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x145629160>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1456291f0>
initiate_tasks running for node:  s2
task name in action:  TaskEntGen_s2_s1
len(subtasks):	 5
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 0
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 1
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 2
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 3
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 4
dst, req_func:	 None None
initiate_tasks running for node:  s1
task name in action:  TaskEntGen_s1_a
len(subtasks):	 5
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 0
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 1
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 2
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 3
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 4
dst, req_func:	 None None
inside EG right task action:   TaskEntGen_s1_s2
len(subtasks):	 5
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x145629430>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1456294c0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x145629550>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1456295e0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x145629670>
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[0] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[1] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[2] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[3] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[4] middle_a_s1
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[0] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[1] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[2] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[3] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[4] middle_s1_s2
a Generation protocol start with partner s1 EGA.a.MemoryArray[0] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[1] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[2] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[3] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[4] middle_a_s1
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[5] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[6] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[7] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[8] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[9] middle_s1_s2
flip circuit 20
flip circuit 5
flip circuit 0
flip circuit 40
flip circuit 6
flip circuit 21
flip circuit 1
flip circuit 41
flip circuit 2
flip circuit 22
flip circuit 7
flip circuit 42
flip circuit 3
flip circuit 23
flip circuit 8
flip circuit 43
flip circuit 4
flip circuit 44
flip circuit 9
flip circuit 24
s1 entanglement fail   s2 EGA.s1.MemoryArray[5] EGA.s2.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[5]
subtask failed:	 EGA.s1.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[5]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2002250175040
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x145629040>
s1 entanglement fail   s2 EGA.s1.MemoryArray[6] EGA.s2.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[6]
subtask failed:	 EGA.s1.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[6]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2002250175040
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x147e5f430>
s1 entanglement fail   s2 EGA.s1.MemoryArray[7] EGA.s2.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[7]
subtask failed:	 EGA.s1.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[7]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2002250175040
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14559ea60>
s1 entanglement fail   s2 EGA.s1.MemoryArray[8] EGA.s2.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[8]
subtask failed:	 EGA.s1.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[8]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2002250175040
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854a550>
s1 entanglement fail   s2 EGA.s1.MemoryArray[9] EGA.s2.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[9]
subtask failed:	 EGA.s1.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[9]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2002250175040
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854a3a0>
s2 entanglement fail   s1 EGA.s2.MemoryArray[0] EGA.s1.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[0]
subtask failed:	 EGA.s2.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[0]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 0
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[1] EGA.s1.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[1]
subtask failed:	 EGA.s2.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[1]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 1
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[2] EGA.s1.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[2]
subtask failed:	 EGA.s2.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[2]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 2
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[3] EGA.s1.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[3]
subtask failed:	 EGA.s2.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[3]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 3
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[4] EGA.s1.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[4]
subtask failed:	 EGA.s2.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[4]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 4
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[0] EGA.s1.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[0]
subtask failed:	 EGA.a.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[0]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2002250175040
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854a5e0>
a entanglement fail   s1 EGA.a.MemoryArray[1] EGA.s1.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[1]
subtask failed:	 EGA.a.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[1]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2002250175040
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854a4c0>
a entanglement fail   s1 EGA.a.MemoryArray[2] EGA.s1.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[2]
subtask failed:	 EGA.a.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[2]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2002250175040
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854a670>
a entanglement fail   s1 EGA.a.MemoryArray[3] EGA.s1.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[3]
subtask failed:	 EGA.a.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[3]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2002250175040
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854a700>
a entanglement fail   s1 EGA.a.MemoryArray[4] EGA.s1.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[4]
subtask failed:	 EGA.a.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[4]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2002250175040
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854a790>
s1 entanglement fail   a EGA.s1.MemoryArray[0] EGA.a.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[0]
subtask failed:	 EGA.s1.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[0]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 0
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[1] EGA.a.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[1]
subtask failed:	 EGA.s1.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[1]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 1
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[2] EGA.a.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[2]
subtask failed:	 EGA.s1.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[2]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 2
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[3] EGA.a.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[3]
subtask failed:	 EGA.s1.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[3]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 3
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[4] EGA.a.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[4]
subtask failed:	 EGA.s1.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[4]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 4
dst, req_func:	 None None
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[0] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[1] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[2] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[3] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[4] middle_s1_s2
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[0] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[1] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[2] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[3] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[4] middle_a_s1
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[5] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[6] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[7] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[8] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[9] middle_s1_s2
a Generation protocol start with partner s1 EGA.a.MemoryArray[0] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[1] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[2] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[3] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[4] middle_a_s1
flip circuit 0
flip circuit 40
flip circuit 20
flip circuit 5
flip circuit 6
flip circuit 21
flip circuit 41
flip circuit 1
flip circuit 22
flip circuit 42
flip circuit 2
flip circuit 7
flip circuit 43
flip circuit 3
flip circuit 23
flip circuit 8
flip circuit 24
flip circuit 44
flip circuit 4
flip circuit 9
a entanglement fail   s1 EGA.a.MemoryArray[0] EGA.s1.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[0]
subtask failed:	 EGA.a.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[0]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2004000350050
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854aa60>
a entanglement fail   s1 EGA.a.MemoryArray[1] EGA.s1.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[1]
subtask failed:	 EGA.a.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[1]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2004000350050
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854a820>
a entanglement fail   s1 EGA.a.MemoryArray[2] EGA.s1.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[2]
subtask failed:	 EGA.a.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[2]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2004000350050
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854a9d0>
a entanglement fail   s1 EGA.a.MemoryArray[3] EGA.s1.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[3]
subtask failed:	 EGA.a.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[3]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2004000350050
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854a940>
s1 entanglement fail   a EGA.s1.MemoryArray[0] EGA.a.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[0]
subtask failed:	 EGA.s1.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[0]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 0
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[1] EGA.a.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[1]
subtask failed:	 EGA.s1.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[1]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 1
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[2] EGA.a.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[2]
subtask failed:	 EGA.s1.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[2]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 2
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[3] EGA.a.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[3]
subtask failed:	 EGA.s1.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[3]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 3
dst, req_func:	 None None
s1 entanglement fail   s2 EGA.s1.MemoryArray[5] EGA.s2.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[5]
subtask failed:	 EGA.s1.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[5]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2004000350080
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854aaf0>
s1 entanglement fail   s2 EGA.s1.MemoryArray[6] EGA.s2.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[6]
subtask failed:	 EGA.s1.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[6]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2004000350080
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854ac10>
s1 entanglement fail   s2 EGA.s1.MemoryArray[7] EGA.s2.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[7]
subtask failed:	 EGA.s1.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[7]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2004000350080
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854a8b0>
s1 entanglement fail   s2 EGA.s1.MemoryArray[8] EGA.s2.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[8]
subtask failed:	 EGA.s1.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[8]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2004000350080
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854aca0>
s2 entanglement fail   s1 EGA.s2.MemoryArray[0] EGA.s1.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[0]
subtask failed:	 EGA.s2.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[0]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 0
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[1] EGA.s1.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[1]
subtask failed:	 EGA.s2.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[1]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 1
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[2] EGA.s1.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[2]
subtask failed:	 EGA.s2.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[2]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 2
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[3] EGA.s1.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[3]
subtask failed:	 EGA.s2.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[3]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 3
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[4] EGA.s1.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[4]
subtask failed:	 EGA.s2.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[4]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 4
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[4] EGA.a.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[4]
subtask failed:	 EGA.s1.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[4]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 4
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[4] EGA.s1.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[4]
subtask failed:	 EGA.a.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[4]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2004000362590
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1484b7280>
s1 entanglement fail   s2 EGA.s1.MemoryArray[9] EGA.s2.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[9]
subtask failed:	 EGA.s1.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[9]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2004000362590
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854ad30>
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[0] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[1] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[2] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[3] middle_a_s1
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[0] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[1] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[2] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[3] middle_s1_s2
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[4] middle_a_s1
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[4] middle_s1_s2
a Generation protocol start with partner s1 EGA.a.MemoryArray[0] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[1] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[2] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[3] middle_a_s1
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[5] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[6] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[7] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[8] middle_s1_s2
a Generation protocol start with partner s1 EGA.a.MemoryArray[4] middle_a_s1
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[9] middle_s1_s2
flip circuit 40
flip circuit 0
flip circuit 1
flip circuit 41
flip circuit 2
flip circuit 42
flip circuit 3
flip circuit 5
flip circuit 43
flip circuit 20
flip circuit 21
flip circuit 6
flip circuit 7
flip circuit 22
flip circuit 8
flip circuit 23
flip circuit 24
flip circuit 9
flip circuit 4
flip circuit 44
a entanglement fail   s1 EGA.a.MemoryArray[0] EGA.s1.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[0]
subtask failed:	 EGA.a.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[0]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2005750525060
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854aee0>
a entanglement fail   s1 EGA.a.MemoryArray[1] EGA.s1.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[1]
subtask failed:	 EGA.a.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[1]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2005750525060
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854af70>
a entanglement fail   s1 EGA.a.MemoryArray[2] EGA.s1.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[2]
subtask failed:	 EGA.a.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[2]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2005750525060
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854a430>
s1 entanglement fail   a EGA.s1.MemoryArray[0] EGA.a.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[0]
subtask failed:	 EGA.s1.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[0]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 0
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[1] EGA.a.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[1]
subtask failed:	 EGA.s1.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[1]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 1
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[2] EGA.a.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[2]
subtask failed:	 EGA.s1.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[2]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 2
dst, req_func:	 None None
s1 entanglement fail   s2 EGA.s1.MemoryArray[5] EGA.s2.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[5]
subtask failed:	 EGA.s1.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[5]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2005750525090
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489db040>
s1 entanglement fail   s2 EGA.s1.MemoryArray[6] EGA.s2.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[6]
subtask failed:	 EGA.s1.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[6]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2005750525090
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489db160>
s1 entanglement fail   s2 EGA.s1.MemoryArray[7] EGA.s2.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[7]
subtask failed:	 EGA.s1.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[7]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2005750525090
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489db1f0>
s1 entanglement fail   s2 EGA.s1.MemoryArray[8] EGA.s2.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[8]
subtask failed:	 EGA.s1.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[8]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2005750525090
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489db280>
s2 entanglement fail   s1 EGA.s2.MemoryArray[0] EGA.s1.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[0]
subtask failed:	 EGA.s2.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[0]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 0
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[1] EGA.s1.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[1]
subtask failed:	 EGA.s2.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[1]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 1
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[2] EGA.s1.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[2]
subtask failed:	 EGA.s2.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[2]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 2
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[3] EGA.s1.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[3]
subtask failed:	 EGA.s2.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[3]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 3
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[3] EGA.s1.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[3]
subtask failed:	 EGA.a.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[3]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2005750537590
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14854ae50>
s1 entanglement fail   a EGA.s1.MemoryArray[3] EGA.a.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[3]
subtask failed:	 EGA.s1.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[3]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 3
dst, req_func:	 None None
s1 entanglement fail   s2 EGA.s1.MemoryArray[9] EGA.s2.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[9]
subtask failed:	 EGA.s1.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[9]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2005750550100
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489db0d0>
s1 entanglement fail   a EGA.s1.MemoryArray[4] EGA.a.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[4]
subtask failed:	 EGA.s1.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[4]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 4
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[4] EGA.s1.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[4]
subtask failed:	 EGA.a.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[4]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2005750550100
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489db310>
s2 entanglement fail   s1 EGA.s2.MemoryArray[4] EGA.s1.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[4]
subtask failed:	 EGA.s2.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[4]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 4
dst, req_func:	 None None
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[0] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[1] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[2] middle_a_s1
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[0] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[1] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[2] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[3] middle_s1_s2
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[3] middle_a_s1
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[4] middle_s1_s2
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[4] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[0] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[1] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[2] middle_a_s1
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[5] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[6] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[7] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[8] middle_s1_s2
a Generation protocol start with partner s1 EGA.a.MemoryArray[3] middle_a_s1
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[9] middle_s1_s2
a Generation protocol start with partner s1 EGA.a.MemoryArray[4] middle_a_s1
flip circuit 40
flip circuit 0
flip circuit 41
flip circuit 1
flip circuit 2
flip circuit 42
flip circuit 20
flip circuit 5
flip circuit 21
flip circuit 6
flip circuit 22
flip circuit 7
flip circuit 23
flip circuit 8
flip circuit 3
flip circuit 43
flip circuit 4
flip circuit 44
flip circuit 24
flip circuit 9
s1 entanglement fail   s2 EGA.s1.MemoryArray[5] EGA.s2.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[5]
subtask failed:	 EGA.s1.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[5]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2007500700120
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489db5e0>
s1 entanglement fail   s2 EGA.s1.MemoryArray[6] EGA.s2.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[6]
subtask failed:	 EGA.s1.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[6]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2007500700120
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489db550>
s1 entanglement fail   s2 EGA.s1.MemoryArray[7] EGA.s2.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[7]
subtask failed:	 EGA.s1.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[7]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2007500700120
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489db790>
s1 entanglement fail   s2 EGA.s1.MemoryArray[8] EGA.s2.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[8]
subtask failed:	 EGA.s1.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[8]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2007500700120
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489db670>
s2 entanglement fail   s1 EGA.s2.MemoryArray[0] EGA.s1.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[0]
subtask failed:	 EGA.s2.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[0]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 0
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[1] EGA.s1.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[1]
subtask failed:	 EGA.s2.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[1]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 1
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[2] EGA.s1.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[2]
subtask failed:	 EGA.s2.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[2]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 2
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[3] EGA.s1.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[3]
subtask failed:	 EGA.s2.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[3]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 3
dst, req_func:	 None None
s1 successful entanglement of memory with the node:  a  <qntsim.components.bk_memory.Memory object at 0x145598ca0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts1a
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_a', ['EGA.s1.MemoryArray[0]'])]
checking eligibility of:	 TaskPurifyLefts1a
subtasks_available:	 ['EGA.s1.MemoryArray[0]']
dependency_subtasks name:	 EGA.s1.MemoryArray[0]
inside ent_purify_action1
ReservationProtocol_s1_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s1.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[0]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', []), ('TaskPurifyLefts1a', ['EP_EGA.s1.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapMiddles2a
Not eligible yet because TaskPurifyRights1s2 does not have an instance to allocate
a successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x1455ef850> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.a.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightas1
added a subtask to dependency  and map status is:	 [('TaskEntGen_a_s1', ['EGA.a.MemoryArray[0]'])]
checking eligibility of:	 TaskPurifyRightas1
subtasks_available:	 ['EGA.a.MemoryArray[0]']
dependency_subtasks name:	 EGA.a.MemoryArray[0]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.a.MemoryArray[0]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.a.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndas2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightas1', ['EP_EGA.a.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapLeftEndas2
subtasks_available:	 ['EP_EGA.a.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.a.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.a.MemoryArray[0]']
True
task.name: TaskSwapLeftEndas2  for node: a and memory returned for this: 0
dst, req_func:	 None None
a successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x1455ef9d0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.a.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightas1
added a subtask to dependency  and map status is:	 [('TaskEntGen_a_s1', ['EGA.a.MemoryArray[1]'])]
checking eligibility of:	 TaskPurifyRightas1
subtasks_available:	 ['EGA.a.MemoryArray[1]']
dependency_subtasks name:	 EGA.a.MemoryArray[1]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.a.MemoryArray[1]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.a.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndas2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightas1', ['EP_EGA.a.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapLeftEndas2
subtasks_available:	 ['EP_EGA.a.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.a.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.a.MemoryArray[1]']
True
task.name: TaskSwapLeftEndas2  for node: a and memory returned for this: 1
dst, req_func:	 None None
s1 successful entanglement of memory with the node:  a  <qntsim.components.bk_memory.Memory object at 0x145598bb0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts1a
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_a', ['EGA.s1.MemoryArray[1]'])]
checking eligibility of:	 TaskPurifyLefts1a
subtasks_available:	 ['EGA.s1.MemoryArray[1]']
dependency_subtasks name:	 EGA.s1.MemoryArray[1]
inside ent_purify_action1
ReservationProtocol_s1_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s1.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[1]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', []), ('TaskPurifyLefts1a', ['EP_EGA.s1.MemoryArray[0]', 'EP_EGA.s1.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapMiddles2a
Not eligible yet because TaskPurifyRights1s2 does not have an instance to allocate
s1 successful entanglement of memory with the node:  a  <qntsim.components.bk_memory.Memory object at 0x145598b20> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts1a
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_a', ['EGA.s1.MemoryArray[2]'])]
checking eligibility of:	 TaskPurifyLefts1a
subtasks_available:	 ['EGA.s1.MemoryArray[2]']
dependency_subtasks name:	 EGA.s1.MemoryArray[2]
inside ent_purify_action1
ReservationProtocol_s1_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s1.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[2]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', []), ('TaskPurifyLefts1a', ['EP_EGA.s1.MemoryArray[0]', 'EP_EGA.s1.MemoryArray[1]', 'EP_EGA.s1.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapMiddles2a
Not eligible yet because TaskPurifyRights1s2 does not have an instance to allocate
a successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x1455efa90> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.a.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightas1
added a subtask to dependency  and map status is:	 [('TaskEntGen_a_s1', ['EGA.a.MemoryArray[2]'])]
checking eligibility of:	 TaskPurifyRightas1
subtasks_available:	 ['EGA.a.MemoryArray[2]']
dependency_subtasks name:	 EGA.a.MemoryArray[2]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.a.MemoryArray[2]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.a.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndas2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightas1', ['EP_EGA.a.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapLeftEndas2
subtasks_available:	 ['EP_EGA.a.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.a.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.a.MemoryArray[2]']
True
task.name: TaskSwapLeftEndas2  for node: a and memory returned for this: 2
dst, req_func:	 None None
s1 entanglement fail   s2 EGA.s1.MemoryArray[9] EGA.s2.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[9]
subtask failed:	 EGA.s1.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[9]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2007500725100
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489dbd30>
s2 entanglement fail   s1 EGA.s2.MemoryArray[4] EGA.s1.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[4]
subtask failed:	 EGA.s2.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[4]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 4
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[3] EGA.s1.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[3]
subtask failed:	 EGA.a.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[3]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2007500725100
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489dbdc0>
s1 entanglement fail   a EGA.s1.MemoryArray[3] EGA.a.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[3]
subtask failed:	 EGA.s1.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[3]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 3
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[4] EGA.s1.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[4]
subtask failed:	 EGA.a.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[4]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2007500737610
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489db9d0>
s1 entanglement fail   a EGA.s1.MemoryArray[4] EGA.a.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[4]
subtask failed:	 EGA.s1.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[4]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 4
dst, req_func:	 None None
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[0] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[1] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[2] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[3] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[4] middle_s1_s2
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[3] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[4] middle_a_s1
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[5] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[6] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[7] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[8] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[9] middle_s1_s2
a Generation protocol start with partner s1 EGA.a.MemoryArray[3] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[4] middle_a_s1
flip circuit 5
flip circuit 20
flip circuit 21
flip circuit 6
flip circuit 22
flip circuit 7
flip circuit 8
flip circuit 23
flip circuit 24
flip circuit 9
flip circuit 43
flip circuit 3
flip circuit 4
flip circuit 44
s1 entanglement fail   s2 EGA.s1.MemoryArray[5] EGA.s2.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[5]
subtask failed:	 EGA.s1.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[5]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2009250875130
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489db8b0>
s1 entanglement fail   s2 EGA.s1.MemoryArray[6] EGA.s2.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[6]
subtask failed:	 EGA.s1.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[6]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2009250875130
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489dbc10>
s1 entanglement fail   s2 EGA.s1.MemoryArray[7] EGA.s2.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[7]
subtask failed:	 EGA.s1.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[7]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2009250875130
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489dbee0>
s1 entanglement fail   s2 EGA.s1.MemoryArray[8] EGA.s2.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[8]
subtask failed:	 EGA.s1.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[8]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2009250875130
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489dbf70>
s2 entanglement fail   s1 EGA.s2.MemoryArray[0] EGA.s1.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[0]
subtask failed:	 EGA.s2.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[0]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 0
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[1] EGA.s1.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[1]
subtask failed:	 EGA.s2.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[1]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 1
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[2] EGA.s1.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[2]
subtask failed:	 EGA.s2.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[2]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 2
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[3] EGA.s1.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[3]
subtask failed:	 EGA.s2.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[3]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 3
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[3] EGA.a.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[3]
subtask failed:	 EGA.s1.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[3]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 3
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[3] EGA.s1.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[3]
subtask failed:	 EGA.a.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[3]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2009250912610
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489dbca0>
s1 successful entanglement of memory with the node:  s2  <qntsim.components.bk_memory.Memory object at 0x1455b0550> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[9]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights1s2
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_s2', ['EGA.s1.MemoryArray[9]'])]
checking eligibility of:	 TaskPurifyRights1s2
subtasks_available:	 ['EGA.s1.MemoryArray[9]']
dependency_subtasks name:	 EGA.s1.MemoryArray[9]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[9]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[9]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', ['EP_EGA.s1.MemoryArray[9]']), ('TaskPurifyLefts1a', ['EP_EGA.s1.MemoryArray[0]', 'EP_EGA.s1.MemoryArray[1]', 'EP_EGA.s1.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapMiddles2a
subtasks_available:	 ['EP_EGA.s1.MemoryArray[9]', 'EP_EGA.s1.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[9]
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[0]
inside task actin: left :a right: s2 and mid: s1 and self.owner.name: s1
inside task actin: left_m :a right_m: s2 and mid: s1 and self.owner.name: s1
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s1.MemoryArray[9]
purify_subtask_right:  EP_EGA.s1.MemoryArray[0]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s1.MemoryArray[9]', 'EP_EGA.s1.MemoryArray[0]']
True
Make use of newly created swap subtask :  ESA.s1.MemoryArray[0].s1.MemoryArray[9]
task.name: TaskSwapMiddles2a  for node: s1 and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  a  delay:  500000000.0 and expected message recv time:  2009250912610
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x148a4c0d0>
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2009250912610
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x148a4c160>
s2 successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x1455d67c0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s2.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts2s1
added a subtask to dependency  and map status is:	 [('TaskEntGen_s2_s1', ['EGA.s2.MemoryArray[4]'])]
checking eligibility of:	 TaskPurifyLefts2s1
subtasks_available:	 ['EGA.s2.MemoryArray[4]']
dependency_subtasks name:	 EGA.s2.MemoryArray[4]
inside ent_purify_action1
ReservationProtocol_s2_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s2.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s2.MemoryArray[4]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s2.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds2a
added a subtask to dependency  and map status is:	 [('TaskPurifyLefts2s1', ['EP_EGA.s2.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapRightEnds2a
subtasks_available:	 ['EP_EGA.s2.MemoryArray[4]']
dependency_subtasks name:	 EP_EGA.s2.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s2.MemoryArray[4]']
True
task.name: TaskSwapRightEnds2a  for node: s2 and memory returned for this: 4
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[4] EGA.s1.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[4]
subtask failed:	 EGA.a.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[4]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2009250925120
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a4c3a0>
s1 entanglement fail   a EGA.s1.MemoryArray[4] EGA.a.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[4]
subtask failed:	 EGA.s1.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[4]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 4
dst, req_func:	 None None
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[0] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[1] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[2] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[3] middle_s1_s2
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[3] middle_a_s1
REQ_FUNC_RECV_TIME:  2009250912610  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s1
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 SWAPPING end protocol start with partner s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[4] middle_a_s1
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[5] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[6] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[7] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[8] middle_s1_s2
a Generation protocol start with partner s1 EGA.a.MemoryArray[3] middle_a_s1
s1 SWAPPING middle protocol start with ends a, s2
Updated to raw after swapping
a Generation protocol start with partner s1 EGA.a.MemoryArray[4] middle_a_s1
flip circuit 5
flip circuit 20
flip circuit 21
flip circuit 6
flip circuit 7
flip circuit 22
flip circuit 23
flip circuit 8
flip circuit 43
flip circuit 3
flip circuit 4
flip circuit 44
s1 entanglement fail   s2 EGA.s1.MemoryArray[5] EGA.s2.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[5]
subtask failed:	 EGA.s1.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[5]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2011001050140
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a4c700>
s1 entanglement fail   s2 EGA.s1.MemoryArray[6] EGA.s2.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[6]
subtask failed:	 EGA.s1.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[6]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2011001050140
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a4c4c0>
s1 entanglement fail   s2 EGA.s1.MemoryArray[7] EGA.s2.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[7]
subtask failed:	 EGA.s1.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[7]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2011001050140
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a4c550>
s1 entanglement fail   s2 EGA.s1.MemoryArray[8] EGA.s2.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[8]
subtask failed:	 EGA.s1.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[8]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2011001050140
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a4c8b0>
s2 entanglement fail   s1 EGA.s2.MemoryArray[0] EGA.s1.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[0]
subtask failed:	 EGA.s2.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[0]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 0
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[1] EGA.s1.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[1]
subtask failed:	 EGA.s2.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[1]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 1
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[2] EGA.s1.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[2]
subtask failed:	 EGA.s2.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[2]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 2
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[3] EGA.s1.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[3]
subtask failed:	 EGA.s2.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[3]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 3
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[3] EGA.s1.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[3]
subtask failed:	 EGA.a.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[3]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2011001100120
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a4c310>
s1 entanglement fail   a EGA.s1.MemoryArray[3] EGA.a.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[3]
subtask failed:	 EGA.s1.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[3]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 3
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[4] EGA.s1.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[4]
subtask failed:	 EGA.a.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[4]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2011001112630
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a4c940>
s1 entanglement fail   a EGA.s1.MemoryArray[4] EGA.a.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[4]
subtask failed:	 EGA.s1.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[4]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 4
dst, req_func:	 None None
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[0] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[1] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[2] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[3] middle_s1_s2
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[3] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[4] middle_a_s1
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[5] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[6] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[7] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[8] middle_s1_s2
a Generation protocol start with partner s1 EGA.a.MemoryArray[3] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[4] middle_a_s1
flip circuit 5
flip circuit 20
flip circuit 21
flip circuit 6
flip circuit 22
flip circuit 7
flip circuit 23
flip circuit 8
flip circuit 43
flip circuit 3
flip circuit 4
flip circuit 44
s1 entanglement fail   s2 EGA.s1.MemoryArray[5] EGA.s2.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[5]
subtask failed:	 EGA.s1.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[5]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2012751225150
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a4c670>
s1 entanglement fail   s2 EGA.s1.MemoryArray[6] EGA.s2.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[6]
subtask failed:	 EGA.s1.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[6]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2012751225150
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a4c430>
s1 entanglement fail   s2 EGA.s1.MemoryArray[7] EGA.s2.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[7]
subtask failed:	 EGA.s1.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[7]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2012751225150
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a4c820>
s1 entanglement fail   s2 EGA.s1.MemoryArray[8] EGA.s2.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[8]
subtask failed:	 EGA.s1.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[8]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2012751225150
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a4c790>
s2 entanglement fail   s1 EGA.s2.MemoryArray[0] EGA.s1.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[0]
subtask failed:	 EGA.s2.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[0]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 0
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[1] EGA.s1.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[1]
subtask failed:	 EGA.s2.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[1]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 1
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[2] EGA.s1.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[2]
subtask failed:	 EGA.s2.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[2]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 2
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[3] EGA.s1.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[3]
subtask failed:	 EGA.s2.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[3]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 3
dst, req_func:	 None None
s1 successful entanglement of memory with the node:  a  <qntsim.components.bk_memory.Memory object at 0x1455989a0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts1a
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_a', ['EGA.s1.MemoryArray[3]'])]
checking eligibility of:	 TaskPurifyLefts1a
subtasks_available:	 ['EGA.s1.MemoryArray[3]']
dependency_subtasks name:	 EGA.s1.MemoryArray[3]
inside ent_purify_action1
ReservationProtocol_s1_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s1.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[3]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', []), ('TaskPurifyLefts1a', ['EP_EGA.s1.MemoryArray[1]', 'EP_EGA.s1.MemoryArray[2]', 'EP_EGA.s1.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapMiddles2a
Not eligible yet because TaskPurifyRights1s2 does not have an instance to allocate
a successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x1455efb80> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.a.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightas1
added a subtask to dependency  and map status is:	 [('TaskEntGen_a_s1', ['EGA.a.MemoryArray[3]'])]
checking eligibility of:	 TaskPurifyRightas1
subtasks_available:	 ['EGA.a.MemoryArray[3]']
dependency_subtasks name:	 EGA.a.MemoryArray[3]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.a.MemoryArray[3]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.a.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndas2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightas1', ['EP_EGA.a.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapLeftEndas2
subtasks_available:	 ['EP_EGA.a.MemoryArray[3]']
dependency_subtasks name:	 EP_EGA.a.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.a.MemoryArray[3]']
True
task.name: TaskSwapLeftEndas2  for node: a and memory returned for this: 3
dst, req_func:	 None None
a successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x1455efca0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.a.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightas1
added a subtask to dependency  and map status is:	 [('TaskEntGen_a_s1', ['EGA.a.MemoryArray[4]'])]
checking eligibility of:	 TaskPurifyRightas1
subtasks_available:	 ['EGA.a.MemoryArray[4]']
dependency_subtasks name:	 EGA.a.MemoryArray[4]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.a.MemoryArray[4]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.a.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndas2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightas1', ['EP_EGA.a.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapLeftEndas2
subtasks_available:	 ['EP_EGA.a.MemoryArray[4]']
dependency_subtasks name:	 EP_EGA.a.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.a.MemoryArray[4]']
True
task.name: TaskSwapLeftEndas2  for node: a and memory returned for this: 4
dst, req_func:	 None None
s1 successful entanglement of memory with the node:  a  <qntsim.components.bk_memory.Memory object at 0x1455985e0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts1a
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_a', ['EGA.s1.MemoryArray[4]'])]
checking eligibility of:	 TaskPurifyLefts1a
subtasks_available:	 ['EGA.s1.MemoryArray[4]']
dependency_subtasks name:	 EGA.s1.MemoryArray[4]
inside ent_purify_action1
ReservationProtocol_s1_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s1.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[4]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', []), ('TaskPurifyLefts1a', ['EP_EGA.s1.MemoryArray[1]', 'EP_EGA.s1.MemoryArray[2]', 'EP_EGA.s1.MemoryArray[3]', 'EP_EGA.s1.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddles2a
Not eligible yet because TaskPurifyRights1s2 does not have an instance to allocate
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[0] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[1] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[2] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[3] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[5] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[6] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[7] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[8] middle_s1_s2
flip circuit 5
flip circuit 20
flip circuit 21
flip circuit 6
flip circuit 22
flip circuit 7
flip circuit 23
flip circuit 8
s1 entanglement fail   s2 EGA.s1.MemoryArray[5] EGA.s2.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[5]
subtask failed:	 EGA.s1.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[5]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2014501400160
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a4ce50>
s1 entanglement fail   s2 EGA.s1.MemoryArray[6] EGA.s2.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[6]
subtask failed:	 EGA.s1.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[6]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2014501400160
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a4cee0>
s1 entanglement fail   s2 EGA.s1.MemoryArray[7] EGA.s2.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[7]
subtask failed:	 EGA.s1.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[7]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2014501400160
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a4cf70>
s1 entanglement fail   s2 EGA.s1.MemoryArray[8] EGA.s2.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[8]
subtask failed:	 EGA.s1.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[8]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2014501400160
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a4cdc0>
s2 entanglement fail   s1 EGA.s2.MemoryArray[0] EGA.s1.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[0]
subtask failed:	 EGA.s2.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[0]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 0
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[1] EGA.s1.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[1]
subtask failed:	 EGA.s2.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[1]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 1
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[2] EGA.s1.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[2]
subtask failed:	 EGA.s2.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[2]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 2
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[3] EGA.s1.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[3]
subtask failed:	 EGA.s2.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[3]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 3
dst, req_func:	 None None
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[0] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[1] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[2] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[3] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[5] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[6] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[7] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[8] middle_s1_s2
flip circuit 5
flip circuit 20
flip circuit 21
flip circuit 6
flip circuit 22
flip circuit 7
flip circuit 23
flip circuit 8
s1 successful entanglement of memory with the node:  s2  <qntsim.components.bk_memory.Memory object at 0x145598190> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights1s2
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_s2', ['EGA.s1.MemoryArray[5]'])]
checking eligibility of:	 TaskPurifyRights1s2
subtasks_available:	 ['EGA.s1.MemoryArray[5]']
dependency_subtasks name:	 EGA.s1.MemoryArray[5]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[5]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', ['EP_EGA.s1.MemoryArray[5]']), ('TaskPurifyLefts1a', ['EP_EGA.s1.MemoryArray[1]', 'EP_EGA.s1.MemoryArray[2]', 'EP_EGA.s1.MemoryArray[3]', 'EP_EGA.s1.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddles2a
subtasks_available:	 ['EP_EGA.s1.MemoryArray[5]', 'EP_EGA.s1.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[5]
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[1]
inside task actin: left :a right: s2 and mid: s1 and self.owner.name: s1
inside task actin: left_m :a right_m: s2 and mid: s1 and self.owner.name: s1
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s1.MemoryArray[5]
purify_subtask_right:  EP_EGA.s1.MemoryArray[1]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s1.MemoryArray[5]', 'EP_EGA.s1.MemoryArray[1]']
True
Make use of newly created swap subtask :  ESA.s1.MemoryArray[1].s1.MemoryArray[5]
task.name: TaskSwapMiddles2a  for node: s1 and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  a  delay:  500000000.0 and expected message recv time:  2016251587670
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x148ad6040>
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2016251587670
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x148ad60d0>
s2 successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x1455d62e0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s2.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts2s1
added a subtask to dependency  and map status is:	 [('TaskEntGen_s2_s1', ['EGA.s2.MemoryArray[0]'])]
checking eligibility of:	 TaskPurifyLefts2s1
subtasks_available:	 ['EGA.s2.MemoryArray[0]']
dependency_subtasks name:	 EGA.s2.MemoryArray[0]
inside ent_purify_action1
ReservationProtocol_s2_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s2.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s2.MemoryArray[0]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s2.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds2a
added a subtask to dependency  and map status is:	 [('TaskPurifyLefts2s1', ['EP_EGA.s2.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapRightEnds2a
subtasks_available:	 ['EP_EGA.s2.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.s2.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s2.MemoryArray[0]']
True
task.name: TaskSwapRightEnds2a  for node: s2 and memory returned for this: 0
dst, req_func:	 None None
s1 successful entanglement of memory with the node:  s2  <qntsim.components.bk_memory.Memory object at 0x145598fd0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[6]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights1s2
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_s2', ['EGA.s1.MemoryArray[6]'])]
checking eligibility of:	 TaskPurifyRights1s2
subtasks_available:	 ['EGA.s1.MemoryArray[6]']
dependency_subtasks name:	 EGA.s1.MemoryArray[6]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[6]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[6]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', ['EP_EGA.s1.MemoryArray[6]']), ('TaskPurifyLefts1a', ['EP_EGA.s1.MemoryArray[2]', 'EP_EGA.s1.MemoryArray[3]', 'EP_EGA.s1.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddles2a
subtasks_available:	 ['EP_EGA.s1.MemoryArray[6]', 'EP_EGA.s1.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[6]
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[2]
inside task actin: left :a right: s2 and mid: s1 and self.owner.name: s1
inside task actin: left_m :a right_m: s2 and mid: s1 and self.owner.name: s1
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s1.MemoryArray[6]
purify_subtask_right:  EP_EGA.s1.MemoryArray[2]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s1.MemoryArray[6]', 'EP_EGA.s1.MemoryArray[2]']
True
Make use of newly created swap subtask :  ESA.s1.MemoryArray[2].s1.MemoryArray[6]
task.name: TaskSwapMiddles2a  for node: s1 and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  a  delay:  500000000.0 and expected message recv time:  2016251587680
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x148ad63a0>
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2016251587680
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x148ad6430>
s2 successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x1455d6460> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s2.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts2s1
added a subtask to dependency  and map status is:	 [('TaskEntGen_s2_s1', ['EGA.s2.MemoryArray[1]'])]
checking eligibility of:	 TaskPurifyLefts2s1
subtasks_available:	 ['EGA.s2.MemoryArray[1]']
dependency_subtasks name:	 EGA.s2.MemoryArray[1]
inside ent_purify_action1
ReservationProtocol_s2_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s2.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s2.MemoryArray[1]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s2.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds2a
added a subtask to dependency  and map status is:	 [('TaskPurifyLefts2s1', ['EP_EGA.s2.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapRightEnds2a
subtasks_available:	 ['EP_EGA.s2.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.s2.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s2.MemoryArray[1]']
True
task.name: TaskSwapRightEnds2a  for node: s2 and memory returned for this: 1
dst, req_func:	 None None
s2 successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x1455d6580> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s2.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts2s1
added a subtask to dependency  and map status is:	 [('TaskEntGen_s2_s1', ['EGA.s2.MemoryArray[2]'])]
checking eligibility of:	 TaskPurifyLefts2s1
subtasks_available:	 ['EGA.s2.MemoryArray[2]']
dependency_subtasks name:	 EGA.s2.MemoryArray[2]
inside ent_purify_action1
ReservationProtocol_s2_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s2.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s2.MemoryArray[2]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s2.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds2a
added a subtask to dependency  and map status is:	 [('TaskPurifyLefts2s1', ['EP_EGA.s2.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapRightEnds2a
subtasks_available:	 ['EP_EGA.s2.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.s2.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s2.MemoryArray[2]']
True
task.name: TaskSwapRightEnds2a  for node: s2 and memory returned for this: 2
dst, req_func:	 None None
s1 successful entanglement of memory with the node:  s2  <qntsim.components.bk_memory.Memory object at 0x1455b0190> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights1s2
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_s2', ['EGA.s1.MemoryArray[7]'])]
checking eligibility of:	 TaskPurifyRights1s2
subtasks_available:	 ['EGA.s1.MemoryArray[7]']
dependency_subtasks name:	 EGA.s1.MemoryArray[7]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[7]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', ['EP_EGA.s1.MemoryArray[7]']), ('TaskPurifyLefts1a', ['EP_EGA.s1.MemoryArray[3]', 'EP_EGA.s1.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddles2a
subtasks_available:	 ['EP_EGA.s1.MemoryArray[7]', 'EP_EGA.s1.MemoryArray[3]']
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[7]
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[3]
inside task actin: left :a right: s2 and mid: s1 and self.owner.name: s1
inside task actin: left_m :a right_m: s2 and mid: s1 and self.owner.name: s1
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s1.MemoryArray[7]
purify_subtask_right:  EP_EGA.s1.MemoryArray[3]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s1.MemoryArray[7]', 'EP_EGA.s1.MemoryArray[3]']
True
Make use of newly created swap subtask :  ESA.s1.MemoryArray[3].s1.MemoryArray[7]
task.name: TaskSwapMiddles2a  for node: s1 and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  a  delay:  500000000.0 and expected message recv time:  2016251587690
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x148ad6820>
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2016251587690
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x148ad68b0>
s1 successful entanglement of memory with the node:  s2  <qntsim.components.bk_memory.Memory object at 0x1455b0310> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[8]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights1s2
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_s2', ['EGA.s1.MemoryArray[8]'])]
checking eligibility of:	 TaskPurifyRights1s2
subtasks_available:	 ['EGA.s1.MemoryArray[8]']
dependency_subtasks name:	 EGA.s1.MemoryArray[8]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[8]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[8]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', ['EP_EGA.s1.MemoryArray[8]']), ('TaskPurifyLefts1a', ['EP_EGA.s1.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddles2a
subtasks_available:	 ['EP_EGA.s1.MemoryArray[8]', 'EP_EGA.s1.MemoryArray[4]']
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[8]
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[4]
inside task actin: left :a right: s2 and mid: s1 and self.owner.name: s1
inside task actin: left_m :a right_m: s2 and mid: s1 and self.owner.name: s1
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s1.MemoryArray[8]
purify_subtask_right:  EP_EGA.s1.MemoryArray[4]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s1.MemoryArray[8]', 'EP_EGA.s1.MemoryArray[4]']
True
Make use of newly created swap subtask :  ESA.s1.MemoryArray[4].s1.MemoryArray[8]
task.name: TaskSwapMiddles2a  for node: s1 and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  a  delay:  500000000.0 and expected message recv time:  2016251587700
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x148ad6a60>
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2016251587700
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x148ad6af0>
s2 successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x1455d66a0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s2.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts2s1
added a subtask to dependency  and map status is:	 [('TaskEntGen_s2_s1', ['EGA.s2.MemoryArray[3]'])]
checking eligibility of:	 TaskPurifyLefts2s1
subtasks_available:	 ['EGA.s2.MemoryArray[3]']
dependency_subtasks name:	 EGA.s2.MemoryArray[3]
inside ent_purify_action1
ReservationProtocol_s2_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s2.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s2.MemoryArray[3]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s2.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds2a
added a subtask to dependency  and map status is:	 [('TaskPurifyLefts2s1', ['EP_EGA.s2.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapRightEnds2a
subtasks_available:	 ['EP_EGA.s2.MemoryArray[3]']
dependency_subtasks name:	 EP_EGA.s2.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s2.MemoryArray[3]']
True
task.name: TaskSwapRightEnds2a  for node: s2 and memory returned for this: 3
dst, req_func:	 None None
REQ_FUNC_RECV_TIME:  2016251587670  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s1
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 SWAPPING end protocol start with partner s1
REQ_FUNC_RECV_TIME:  2016251587680  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s1
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 SWAPPING end protocol start with partner s1
REQ_FUNC_RECV_TIME:  2016251587690  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s1
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 SWAPPING end protocol start with partner s1
REQ_FUNC_RECV_TIME:  2016251587700  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s1
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 SWAPPING end protocol start with partner s1
s1 SWAPPING middle protocol start with ends a, s2
Updated to raw after swapping
s1 SWAPPING middle protocol start with ends a, s2
Updated to raw after swapping
s1 SWAPPING middle protocol start with ends a, s2
Updated to raw after swapping
s1 SWAPPING middle protocol start with ends a, s2
Updated to raw after swapping
a memories
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|   Index | Source node   | Entangled Node   |   Fidelity |   Entanglement Time |   Expire Time | State     |
+=========+===============+==================+============+=====================+===============+===========+
|       0 | a             | s2               |   0.686375 |             2.01025 |       1.01025 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       1 | a             | s2               |   0.686375 |             2.01725 |       1.01725 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       2 | a             | s2               |   0.686375 |             2.01725 |       1.01725 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       3 | a             | s2               |   0.686375 |             2.01725 |       1.01725 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       4 | a             | s2               |   0.686375 |             2.01725 |       1.01725 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
b memories
+---------+---------------+------------------+------------+---------------------+---------------+---------+
| Index   | Source node   | Entangled Node   | Fidelity   | Entanglement Time   | Expire Time   | State   |
+=========+===============+==================+============+=====================+===============+=========+
+---------+---------------+------------------+------------+---------------------+---------------+---------+
s1 memories
+---------+---------------+------------------+------------+---------------------+---------------+---------+
| Index   | Source node   | Entangled Node   | Fidelity   | Entanglement Time   | Expire Time   | State   |
+=========+===============+==================+============+=====================+===============+=========+
+---------+---------------+------------------+------------+---------------------+---------------+---------+
s2 memories
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|   Index | Source node   | Entangled Node   |   Fidelity |   Entanglement Time |   Expire Time | State     |
+=========+===============+==================+============+=====================+===============+===========+
|       0 | s2            | a                |   0.686375 |             2.01725 |       1.01725 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       1 | s2            | a                |   0.686375 |             2.01725 |       1.01725 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       2 | s2            | a                |   0.686375 |             2.01725 |       1.01725 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       3 | s2            | a                |   0.686375 |             2.01725 |       1.01725 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       4 | s2            | a                |   0.686375 |             2.01025 |       1.01025 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
