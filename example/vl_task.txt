start a
Virtual neighbor s1 ['a', 's1', 's2', 's3', 's4'] {}
request src , resp , curr node a s4 a INITIATED
self to middel {'s1': 'middle_a_s1'}
self to middel {'s4': 'middle_s4_b'}
start s1
request src , resp , curr node a s4 s1 INITIATED
start s2
request src , resp , curr node a s4 s2 INITIATED
start s3
request src , resp , curr node a s4 s3 INITIATED
start s4
destination s4
setting dependencies
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
last_virtual_index -1
----------Enatanglement Generation Task----------
Current node in Entanglement generation s4
Path-------- ['a', 's1', 's2', 's3', 's4']
Reservation------ a s4 0
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_s4_s3   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142eedaf0>
depedencies for task:   TaskPurifyLefts4s3   are   ['TaskEntGen_s4_s3']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fab7c0>: []}
Swap at node: s1 left: a and right: s2
Swap at node: s2 left: a and right: s4
Swap at node: s3 left: s2 and right: s4
order of swaps:  [(('a', 's2', 's1'), 2), (('s2', 's4', 's3'), 2), (('a', 's4', 's2'), 4)]
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142eedca0>
depedencies for task:   TaskSwapRightEnds4s2   are   ['TaskPurifyLefts4s3']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fab7f0>: []}
ENT_SWAP_RIGHT at:  s4
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142eeddc0>
final swap flagged to true
depedencies for task:   TaskSwapRightEnds4a   are   ['TaskSwapRightEnds4s2']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fab850>: []}
ENT_SWAP_RIGHT at:  s4
tasks created at s4
setting dependencies
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
last_virtual_index -1
----------Enatanglement Generation Task----------
Current node in Entanglement generation s3
Path-------- ['a', 's1', 's2', 's3', 's4']
Reservation------ a s4 0
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_s3_s2   are   []
Initialized the dependencies_subtask_map
current status:	 {}
current node, mem_indices, available_memory_indices:  s3 [5, 6, 7, 8, 9] [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_s3_s4   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142fba040>
depedencies for task:   TaskPurifyLefts3s2   are   ['TaskEntGen_s3_s2']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fb75e0>: []}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142fba160>
depedencies for task:   TaskPurifyRights3s4   are   ['TaskEntGen_s3_s4']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fb75b0>: []}
Swap at node: s1 left: a and right: s2
Swap at node: s2 left: a and right: s4
Swap at node: s3 left: s2 and right: s4
order of swaps:  [(('a', 's2', 's1'), 2), (('s2', 's4', 's3'), 2), (('a', 's4', 's2'), 4)]
while setting task action: left :s2 right: s4 and mid: s3 and self.own.name: s3
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle at 0x142fba310>
depedencies for task:   TaskSwapMiddles4s2   are   ['TaskPurifyRights3s4', 'TaskPurifyLefts3s2']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fb7670>: [], <qntsim.resource_management.task_manager.Task object at 0x142fb7640>: []}
ENT_SWAP_MIDDLE at:  s3
last_left_task   :  TaskPurifyRights3s4
last_right_task   :  TaskPurifyLefts3s2
setting dependencies
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
last_virtual_index -1
----------Enatanglement Generation Task----------
Current node in Entanglement generation s2
Path-------- ['a', 's1', 's2', 's3', 's4']
Reservation------ a s4 0
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_s2_s1   are   []
Initialized the dependencies_subtask_map
current status:	 {}
current node, mem_indices, available_memory_indices:  s2 [5, 6, 7, 8, 9] [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_s2_s3   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142eedd30>
depedencies for task:   TaskPurifyLefts2s1   are   ['TaskEntGen_s2_s1']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fb7df0>: []}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142fba0d0>
depedencies for task:   TaskPurifyRights2s3   are   ['TaskEntGen_s2_s3']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fb7dc0>: []}
Swap at node: s1 left: a and right: s2
Swap at node: s2 left: a and right: s4
Swap at node: s3 left: s2 and right: s4
order of swaps:  [(('a', 's2', 's1'), 2), (('s2', 's4', 's3'), 2), (('a', 's4', 's2'), 4)]
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142fba3a0>
depedencies for task:   TaskSwapRightEnds2a   are   ['TaskPurifyLefts2s1']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fb7e50>: []}
ENT_SWAP_RIGHT at:  s2
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142fba4c0>
depedencies for task:   TaskSwapLeftEnds2s4   are   ['TaskPurifyRights2s3']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fb7e80>: []}
ENT_SWAP_LEFT at:  s2
while setting task action: left :a right: s4 and mid: s2 and self.own.name: s2
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle at 0x142fba5e0>
depedencies for task:   TaskSwapMiddles4a   are   ['TaskSwapLeftEnds2s4', 'TaskSwapRightEnds2a']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fb7f40>: [], <qntsim.resource_management.task_manager.Task object at 0x142fb7ee0>: []}
ENT_SWAP_MIDDLE at:  s2
last_left_task   :  TaskSwapLeftEnds2s4
last_right_task   :  TaskSwapRightEnds2a
setting dependencies
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
last_virtual_index -1
----------Enatanglement Generation Task----------
Current node in Entanglement generation s1
Path-------- ['a', 's1', 's2', 's3', 's4']
Reservation------ a s4 0
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_s1_a   are   []
Initialized the dependencies_subtask_map
current status:	 {}
current node, mem_indices, available_memory_indices:  s1 [5, 6, 7, 8, 9] [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_s1_s2   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142fba790>
depedencies for task:   TaskPurifyLefts1a   are   ['TaskEntGen_s1_a']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fc6fa0>: []}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142fba8b0>
depedencies for task:   TaskPurifyRights1s2   are   ['TaskEntGen_s1_s2']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fc6f70>: []}
Swap at node: s1 left: a and right: s2
Swap at node: s2 left: a and right: s4
Swap at node: s3 left: s2 and right: s4
order of swaps:  [(('a', 's2', 's1'), 2), (('s2', 's4', 's3'), 2), (('a', 's4', 's2'), 4)]
while setting task action: left :a right: s2 and mid: s1 and self.own.name: s1
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle at 0x142fbaa60>
depedencies for task:   TaskSwapMiddles2a   are   ['TaskPurifyRights1s2', 'TaskPurifyLefts1a']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fcb070>: [], <qntsim.resource_management.task_manager.Task object at 0x142fcb040>: []}
ENT_SWAP_MIDDLE at:  s1
last_left_task   :  TaskPurifyRights1s2
last_right_task   :  TaskPurifyLefts1a
tasks created at  a
setting dependencies
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
To maintain the virtual link indices
len of res 1
inside has virtual reservation a s4
res.isvirtual True
len of res 1
inside has virtual reservation a s4
res.isvirtual True
Another virtual request arrived
last_virtual_index -1
----------Enatanglement Generation Task----------
Current node in Entanglement generation a
Path-------- ['a', 's1', 's2', 's3', 's4']
Reservation------ a s4 0
current node, mem_indices, available_memory_indices:  a [0, 1, 2, 3, 4] [0, 1, 2, 3, 4]
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_a_s1   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142fba1f0>
depedencies for task:   TaskPurifyRightas1   are   ['TaskEntGen_a_s1']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fcb7c0>: []}
Swap at node: s1 left: a and right: s2
Swap at node: s2 left: a and right: s4
Swap at node: s3 left: s2 and right: s4
order of swaps:  [(('a', 's2', 's1'), 2), (('s2', 's4', 's3'), 2), (('a', 's4', 's2'), 4)]
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142fba550>
depedencies for task:   TaskSwapLeftEndas2   are   ['TaskPurifyRightas1']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fcb7f0>: []}
ENT_SWAP_LEFT at:  a
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142fba940>
final swap flagged to true
depedencies for task:   TaskSwapLeftEndas4   are   ['TaskSwapLeftEndas2']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fcb850>: []}
ENT_SWAP_LEFT at:  a
initiate_tasks running for node:  s1
Trying to initiate task:  TaskEntGen_s1_a and its already run flag is:  False
task name in action:  TaskEntGen_s1_a
len(subtasks):	 5
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 0
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 1
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 2
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 3
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 4
dst, req_func:	 None None
Trying to initiate task:  TaskEntGen_s1_s2 and its already run flag is:  False
inside EG right task action:   TaskEntGen_s1_s2
len(subtasks):	 5
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142fbab80>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142fbac10>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142fbaca0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142fbad30>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142fbadc0>
initiate_tasks running for node:  a
Trying to initiate task:  TaskEntGen_a_s1 and its already run flag is:  False
inside EG right task action:   TaskEntGen_a_s1
len(subtasks):	 5
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142fbaee0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142fbaf70>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x146f06040>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x146f060d0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x146f06160>
initiate_tasks running for node:  s2
Trying to initiate task:  TaskEntGen_s2_s1 and its already run flag is:  False
task name in action:  TaskEntGen_s2_s1
len(subtasks):	 5
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 0
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 1
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 2
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 3
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 4
dst, req_func:	 None None
Trying to initiate task:  TaskEntGen_s2_s3 and its already run flag is:  False
inside EG right task action:   TaskEntGen_s2_s3
len(subtasks):	 5
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142fba820>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142fba9d0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x146f061f0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x146f06280>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x146f06310>
initiate_tasks running for node:  s4
Trying to initiate task:  TaskEntGen_s4_s3 and its already run flag is:  False
task name in action:  TaskEntGen_s4_s3
len(subtasks):	 5
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 0
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 1
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 2
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 3
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
initiate_tasks running for node:  s3
Trying to initiate task:  TaskEntGen_s3_s2 and its already run flag is:  False
task name in action:  TaskEntGen_s3_s2
len(subtasks):	 5
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 0
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 1
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 2
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 3
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 4
dst, req_func:	 None None
Trying to initiate task:  TaskEntGen_s3_s4 and its already run flag is:  False
inside EG right task action:   TaskEntGen_s3_s4
len(subtasks):	 5
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x146f06550>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x146f065e0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x146f06670>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x146f06700>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2000500000000
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x146f06790>
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[0] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[1] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[2] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[3] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[4] middle_s1_s2
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[0] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[1] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[2] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[3] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[4] middle_a_s1
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[0] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[1] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[2] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[3] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[4] middle_s2_s3
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[0] middle_s3_s4
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[1] middle_s3_s4
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[2] middle_s3_s4
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[3] middle_s3_s4
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[4] middle_s3_s4
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[5] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[6] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[7] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[8] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[9] middle_s1_s2
a Generation protocol start with partner s1 EGA.a.MemoryArray[0] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[1] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[2] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[3] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[4] middle_a_s1
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[5] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[6] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[7] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[8] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[9] middle_s2_s3
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[5] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[6] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[7] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[8] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[9] middle_s3_s4
flip circuit 5
flip circuit 45
flip circuit 80
flip circuit 60
flip circuit 0
flip circuit 40
flip circuit 20
flip circuit 25
flip circuit 46
flip circuit 26
flip circuit 21
flip circuit 1
flip circuit 61
flip circuit 6
flip circuit 41
flip circuit 81
flip circuit 27
flip circuit 47
flip circuit 82
flip circuit 22
flip circuit 7
flip circuit 2
flip circuit 42
flip circuit 62
flip circuit 63
flip circuit 8
flip circuit 23
flip circuit 83
flip circuit 3
flip circuit 28
flip circuit 43
flip circuit 48
flip circuit 9
flip circuit 44
flip circuit 84
flip circuit 49
flip circuit 4
flip circuit 29
flip circuit 24
flip circuit 64
s2 entanglement fail   s3 EGA.s2.MemoryArray[5] EGA.s3.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[5]
subtask failed:	 EGA.s2.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[5]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2002250175000
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x146f06820>
s2 entanglement fail   s3 EGA.s2.MemoryArray[6] EGA.s3.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[6]
subtask failed:	 EGA.s2.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[6]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2002250175000
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1473b8670>
s2 entanglement fail   s3 EGA.s2.MemoryArray[7] EGA.s3.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[7]
subtask failed:	 EGA.s2.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[7]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2002250175000
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148382820>
s2 entanglement fail   s3 EGA.s2.MemoryArray[8] EGA.s3.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[8]
subtask failed:	 EGA.s2.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[8]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2002250175000
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148382790>
s2 entanglement fail   s3 EGA.s2.MemoryArray[9] EGA.s3.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[9]
subtask failed:	 EGA.s2.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[9]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2002250175000
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1483825e0>
s3 entanglement fail   s2 EGA.s3.MemoryArray[0] EGA.s2.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[0]
subtask failed:	 EGA.s3.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[0]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 0
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[1] EGA.s2.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[1]
subtask failed:	 EGA.s3.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[1]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 1
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[2] EGA.s2.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[2]
subtask failed:	 EGA.s3.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[2]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 2
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[3] EGA.s2.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[3]
subtask failed:	 EGA.s3.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[3]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 3
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[4] EGA.s2.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[4]
subtask failed:	 EGA.s3.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[4]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 4
dst, req_func:	 None None
s1 entanglement fail   s2 EGA.s1.MemoryArray[5] EGA.s2.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[5]
subtask failed:	 EGA.s1.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[5]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2002250175000
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1483828b0>
s1 entanglement fail   s2 EGA.s1.MemoryArray[6] EGA.s2.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[6]
subtask failed:	 EGA.s1.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[6]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2002250175000
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148382700>
s1 entanglement fail   s2 EGA.s1.MemoryArray[7] EGA.s2.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[7]
subtask failed:	 EGA.s1.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[7]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2002250175000
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148382940>
s1 entanglement fail   s2 EGA.s1.MemoryArray[8] EGA.s2.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[8]
subtask failed:	 EGA.s1.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[8]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2002250175000
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1483829d0>
s1 entanglement fail   s2 EGA.s1.MemoryArray[9] EGA.s2.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[9]
subtask failed:	 EGA.s1.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[9]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2002250175000
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148382a60>
s2 entanglement fail   s1 EGA.s2.MemoryArray[0] EGA.s1.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[0]
subtask failed:	 EGA.s2.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[0]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 0
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[1] EGA.s1.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[1]
subtask failed:	 EGA.s2.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[1]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 1
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[2] EGA.s1.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[2]
subtask failed:	 EGA.s2.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[2]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 2
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[3] EGA.s1.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[3]
subtask failed:	 EGA.s2.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[3]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 3
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[4] EGA.s1.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[4]
subtask failed:	 EGA.s2.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[4]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 4
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[0] EGA.s1.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[0]
subtask failed:	 EGA.a.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[0]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2002250175030
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148382670>
a entanglement fail   s1 EGA.a.MemoryArray[1] EGA.s1.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[1]
subtask failed:	 EGA.a.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[1]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2002250175030
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148382b80>
a entanglement fail   s1 EGA.a.MemoryArray[2] EGA.s1.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[2]
subtask failed:	 EGA.a.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[2]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2002250175030
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148382c10>
a entanglement fail   s1 EGA.a.MemoryArray[3] EGA.s1.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[3]
subtask failed:	 EGA.a.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[3]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2002250175030
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148382ca0>
a entanglement fail   s1 EGA.a.MemoryArray[4] EGA.s1.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[4]
subtask failed:	 EGA.a.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[4]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2002250175030
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148382d30>
s1 entanglement fail   a EGA.s1.MemoryArray[0] EGA.a.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[0]
subtask failed:	 EGA.s1.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[0]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 0
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[1] EGA.a.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[1]
subtask failed:	 EGA.s1.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[1]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 1
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[2] EGA.a.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[2]
subtask failed:	 EGA.s1.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[2]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 2
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[3] EGA.a.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[3]
subtask failed:	 EGA.s1.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[3]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 3
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[4] EGA.a.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[4]
subtask failed:	 EGA.s1.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[4]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 4
dst, req_func:	 None None
s3 entanglement fail   s4 EGA.s3.MemoryArray[5] EGA.s4.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[5]
subtask failed:	 EGA.s3.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[5]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2002250175040
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148382af0>
s3 entanglement fail   s4 EGA.s3.MemoryArray[6] EGA.s4.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[6]
subtask failed:	 EGA.s3.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[6]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2002250175040
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148382e50>
s3 entanglement fail   s4 EGA.s3.MemoryArray[7] EGA.s4.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[7]
subtask failed:	 EGA.s3.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[7]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2002250175040
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148382ee0>
s3 entanglement fail   s4 EGA.s3.MemoryArray[8] EGA.s4.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[8]
subtask failed:	 EGA.s3.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[8]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2002250175040
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148382f70>
s3 entanglement fail   s4 EGA.s3.MemoryArray[9] EGA.s4.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[9]
subtask failed:	 EGA.s3.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[9]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2002250175040
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x146f068b0>
s4 entanglement fail   s3 EGA.s4.MemoryArray[0] EGA.s3.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[0]
subtask failed:	 EGA.s4.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[0]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 0
dst, req_func:	 None None
s4 entanglement fail   s3 EGA.s4.MemoryArray[1] EGA.s3.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[1]
subtask failed:	 EGA.s4.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[1]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 1
dst, req_func:	 None None
s4 entanglement fail   s3 EGA.s4.MemoryArray[2] EGA.s3.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[2]
subtask failed:	 EGA.s4.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[2]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 2
dst, req_func:	 None None
s4 entanglement fail   s3 EGA.s4.MemoryArray[3] EGA.s3.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[3]
subtask failed:	 EGA.s4.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[3]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 3
dst, req_func:	 None None
s4 entanglement fail   s3 EGA.s4.MemoryArray[4] EGA.s3.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[4]
subtask failed:	 EGA.s4.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[4]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[0] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[1] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[2] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[3] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[4] middle_s2_s3
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[0] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[1] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[2] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[3] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[4] middle_s1_s2
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[0] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[1] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[2] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[3] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[4] middle_a_s1
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[0] middle_s3_s4
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[1] middle_s3_s4
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[2] middle_s3_s4
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[3] middle_s3_s4
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[4] middle_s3_s4
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[5] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[6] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[7] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[8] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[9] middle_s2_s3
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[5] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[6] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[7] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[8] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[9] middle_s1_s2
a Generation protocol start with partner s1 EGA.a.MemoryArray[0] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[1] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[2] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[3] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[4] middle_a_s1
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[5] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[6] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[7] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[8] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[9] middle_s3_s4
flip circuit 20
flip circuit 40
flip circuit 25
flip circuit 5
flip circuit 6
flip circuit 41
flip circuit 21
flip circuit 26
flip circuit 42
flip circuit 22
flip circuit 27
flip circuit 7
flip circuit 28
flip circuit 23
flip circuit 0
flip circuit 80
flip circuit 43
flip circuit 8
flip circuit 60
flip circuit 1
flip circuit 9
flip circuit 81
flip circuit 24
flip circuit 44
flip circuit 29
flip circuit 45
flip circuit 61
flip circuit 82
flip circuit 2
flip circuit 46
flip circuit 62
flip circuit 47
flip circuit 3
flip circuit 83
flip circuit 63
flip circuit 4
flip circuit 84
flip circuit 48
flip circuit 49
flip circuit 64
s1 entanglement fail   s2 EGA.s1.MemoryArray[5] EGA.s2.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[5]
subtask failed:	 EGA.s1.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[5]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2004000350010
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880a040>
s1 entanglement fail   s2 EGA.s1.MemoryArray[6] EGA.s2.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[6]
subtask failed:	 EGA.s1.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[6]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2004000350010
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880a280>
s1 entanglement fail   s2 EGA.s1.MemoryArray[7] EGA.s2.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[7]
subtask failed:	 EGA.s1.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[7]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2004000350010
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880a0d0>
s1 entanglement fail   s2 EGA.s1.MemoryArray[8] EGA.s2.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[8]
subtask failed:	 EGA.s1.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[8]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2004000350010
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880a160>
s1 entanglement fail   s2 EGA.s1.MemoryArray[9] EGA.s2.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[9]
subtask failed:	 EGA.s1.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[9]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2004000350010
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880a310>
s2 entanglement fail   s1 EGA.s2.MemoryArray[0] EGA.s1.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[0]
subtask failed:	 EGA.s2.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[0]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 0
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[1] EGA.s1.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[1]
subtask failed:	 EGA.s2.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[1]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 1
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[2] EGA.s1.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[2]
subtask failed:	 EGA.s2.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[2]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 2
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[3] EGA.s1.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[3]
subtask failed:	 EGA.s2.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[3]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 3
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[4] EGA.s1.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[4]
subtask failed:	 EGA.s2.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[4]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 4
dst, req_func:	 None None
s2 entanglement fail   s3 EGA.s2.MemoryArray[5] EGA.s3.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[5]
subtask failed:	 EGA.s2.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[5]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2004000350020
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880a4c0>
s2 entanglement fail   s3 EGA.s2.MemoryArray[6] EGA.s3.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[6]
subtask failed:	 EGA.s2.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[6]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2004000350020
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880a3a0>
s2 entanglement fail   s3 EGA.s2.MemoryArray[7] EGA.s3.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[7]
subtask failed:	 EGA.s2.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[7]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2004000350020
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880a550>
s2 entanglement fail   s3 EGA.s2.MemoryArray[8] EGA.s3.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[8]
subtask failed:	 EGA.s2.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[8]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2004000350020
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880a5e0>
s2 entanglement fail   s3 EGA.s2.MemoryArray[9] EGA.s3.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[9]
subtask failed:	 EGA.s2.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[9]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2004000350020
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880a670>
s3 entanglement fail   s2 EGA.s3.MemoryArray[0] EGA.s2.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[0]
subtask failed:	 EGA.s3.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[0]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 0
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[1] EGA.s2.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[1]
subtask failed:	 EGA.s3.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[1]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 1
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[2] EGA.s2.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[2]
subtask failed:	 EGA.s3.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[2]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 2
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[3] EGA.s2.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[3]
subtask failed:	 EGA.s3.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[3]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 3
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[4] EGA.s2.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[4]
subtask failed:	 EGA.s3.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[4]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 4
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[0] EGA.s1.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[0]
subtask failed:	 EGA.a.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[0]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2004000350050
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880a1f0>
a entanglement fail   s1 EGA.a.MemoryArray[1] EGA.s1.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[1]
subtask failed:	 EGA.a.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[1]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2004000350050
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880a790>
a entanglement fail   s1 EGA.a.MemoryArray[2] EGA.s1.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[2]
subtask failed:	 EGA.a.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[2]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2004000350050
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880a820>
a entanglement fail   s1 EGA.a.MemoryArray[3] EGA.s1.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[3]
subtask failed:	 EGA.a.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[3]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2004000350050
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880a8b0>
a entanglement fail   s1 EGA.a.MemoryArray[4] EGA.s1.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[4]
subtask failed:	 EGA.a.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[4]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2004000350050
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880a940>
s1 entanglement fail   a EGA.s1.MemoryArray[0] EGA.a.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[0]
subtask failed:	 EGA.s1.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[0]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 0
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[1] EGA.a.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[1]
subtask failed:	 EGA.s1.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[1]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 1
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[2] EGA.a.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[2]
subtask failed:	 EGA.s1.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[2]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 2
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[3] EGA.a.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[3]
subtask failed:	 EGA.s1.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[3]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 3
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[4] EGA.a.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[4]
subtask failed:	 EGA.s1.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[4]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 4
dst, req_func:	 None None
s3 entanglement fail   s4 EGA.s3.MemoryArray[5] EGA.s4.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[5]
subtask failed:	 EGA.s3.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[5]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2004000350060
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880a700>
s3 entanglement fail   s4 EGA.s3.MemoryArray[6] EGA.s4.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[6]
subtask failed:	 EGA.s3.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[6]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2004000350060
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880aa60>
s3 entanglement fail   s4 EGA.s3.MemoryArray[7] EGA.s4.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[7]
subtask failed:	 EGA.s3.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[7]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2004000350060
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880aaf0>
s3 entanglement fail   s4 EGA.s3.MemoryArray[8] EGA.s4.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[8]
subtask failed:	 EGA.s3.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[8]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2004000350060
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880ab80>
s4 entanglement fail   s3 EGA.s4.MemoryArray[0] EGA.s3.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[0]
subtask failed:	 EGA.s4.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[0]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 0
dst, req_func:	 None None
s4 entanglement fail   s3 EGA.s4.MemoryArray[1] EGA.s3.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[1]
subtask failed:	 EGA.s4.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[1]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 1
dst, req_func:	 None None
s4 entanglement fail   s3 EGA.s4.MemoryArray[2] EGA.s3.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[2]
subtask failed:	 EGA.s4.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[2]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 2
dst, req_func:	 None None
s4 entanglement fail   s3 EGA.s4.MemoryArray[3] EGA.s3.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[3]
subtask failed:	 EGA.s4.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[3]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 3
dst, req_func:	 None None
s3 entanglement fail   s4 EGA.s3.MemoryArray[9] EGA.s4.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[9]
subtask failed:	 EGA.s3.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[9]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2004000362590
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148382dc0>
s4 entanglement fail   s3 EGA.s4.MemoryArray[4] EGA.s3.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[4]
subtask failed:	 EGA.s4.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[4]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[0] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[1] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[2] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[3] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[4] middle_s1_s2
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[0] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[1] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[2] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[3] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[4] middle_s2_s3
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[0] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[1] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[2] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[3] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[4] middle_a_s1
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[0] middle_s3_s4
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[1] middle_s3_s4
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[2] middle_s3_s4
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[3] middle_s3_s4
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[4] middle_s3_s4
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[5] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[6] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[7] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[8] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[9] middle_s1_s2
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[5] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[6] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[7] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[8] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[9] middle_s2_s3
a Generation protocol start with partner s1 EGA.a.MemoryArray[0] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[1] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[2] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[3] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[4] middle_a_s1
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[5] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[6] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[7] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[8] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[9] middle_s3_s4
flip circuit 5
flip circuit 20
flip circuit 40
flip circuit 21
flip circuit 6
flip circuit 25
flip circuit 22
flip circuit 26
flip circuit 41
flip circuit 7
flip circuit 23
flip circuit 8
flip circuit 42
flip circuit 27
flip circuit 24
flip circuit 28
flip circuit 80
flip circuit 0
flip circuit 43
flip circuit 9
flip circuit 29
flip circuit 81
flip circuit 60
flip circuit 1
flip circuit 44
flip circuit 45
flip circuit 46
flip circuit 61
flip circuit 82
flip circuit 2
flip circuit 83
flip circuit 62
flip circuit 3
flip circuit 47
flip circuit 4
flip circuit 84
flip circuit 48
flip circuit 63
flip circuit 49
flip circuit 64
s1 entanglement fail   s2 EGA.s1.MemoryArray[5] EGA.s2.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[5]
subtask failed:	 EGA.s1.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[5]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2005750525010
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880ae50>
s1 entanglement fail   s2 EGA.s1.MemoryArray[6] EGA.s2.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[6]
subtask failed:	 EGA.s1.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[6]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2005750525010
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880a9d0>
s1 entanglement fail   s2 EGA.s1.MemoryArray[7] EGA.s2.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[7]
subtask failed:	 EGA.s1.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[7]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2005750525010
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880ac10>
s1 entanglement fail   s2 EGA.s1.MemoryArray[8] EGA.s2.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[8]
subtask failed:	 EGA.s1.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[8]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2005750525010
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880af70>
s1 entanglement fail   s2 EGA.s1.MemoryArray[9] EGA.s2.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[9]
subtask failed:	 EGA.s1.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[9]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2005750525010
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880adc0>
s2 entanglement fail   s1 EGA.s2.MemoryArray[0] EGA.s1.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[0]
subtask failed:	 EGA.s2.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[0]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 0
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[1] EGA.s1.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[1]
subtask failed:	 EGA.s2.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[1]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 1
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[2] EGA.s1.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[2]
subtask failed:	 EGA.s2.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[2]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 2
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[3] EGA.s1.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[3]
subtask failed:	 EGA.s2.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[3]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 3
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[4] EGA.s1.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[4]
subtask failed:	 EGA.s2.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[4]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 4
dst, req_func:	 None None
s2 entanglement fail   s3 EGA.s2.MemoryArray[5] EGA.s3.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[5]
subtask failed:	 EGA.s2.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[5]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2005750525040
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880aee0>
s2 entanglement fail   s3 EGA.s2.MemoryArray[6] EGA.s3.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[6]
subtask failed:	 EGA.s2.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[6]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2005750525040
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880aca0>
s2 entanglement fail   s3 EGA.s2.MemoryArray[7] EGA.s3.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[7]
subtask failed:	 EGA.s2.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[7]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2005750525040
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd0d0>
s2 entanglement fail   s3 EGA.s2.MemoryArray[8] EGA.s3.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[8]
subtask failed:	 EGA.s2.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[8]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2005750525040
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd160>
s2 entanglement fail   s3 EGA.s2.MemoryArray[9] EGA.s3.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[9]
subtask failed:	 EGA.s2.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[9]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2005750525040
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd1f0>
s3 entanglement fail   s2 EGA.s3.MemoryArray[0] EGA.s2.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[0]
subtask failed:	 EGA.s3.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[0]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 0
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[1] EGA.s2.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[1]
subtask failed:	 EGA.s3.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[1]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 1
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[2] EGA.s2.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[2]
subtask failed:	 EGA.s3.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[2]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 2
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[3] EGA.s2.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[3]
subtask failed:	 EGA.s3.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[3]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 3
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[4] EGA.s2.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[4]
subtask failed:	 EGA.s3.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[4]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 4
dst, req_func:	 None None
s3 entanglement fail   s4 EGA.s3.MemoryArray[5] EGA.s4.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[5]
subtask failed:	 EGA.s3.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[5]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2005750525060
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd040>
s3 entanglement fail   s4 EGA.s3.MemoryArray[6] EGA.s4.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[6]
subtask failed:	 EGA.s3.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[6]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2005750525060
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd310>
s3 entanglement fail   s4 EGA.s3.MemoryArray[7] EGA.s4.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[7]
subtask failed:	 EGA.s3.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[7]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2005750525060
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd3a0>
s3 entanglement fail   s4 EGA.s3.MemoryArray[8] EGA.s4.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[8]
subtask failed:	 EGA.s3.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[8]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2005750525060
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd430>
s4 entanglement fail   s3 EGA.s4.MemoryArray[0] EGA.s3.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[0]
subtask failed:	 EGA.s4.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[0]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 0
dst, req_func:	 None None
s4 entanglement fail   s3 EGA.s4.MemoryArray[1] EGA.s3.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[1]
subtask failed:	 EGA.s4.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[1]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 1
dst, req_func:	 None None
s4 entanglement fail   s3 EGA.s4.MemoryArray[2] EGA.s3.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[2]
subtask failed:	 EGA.s4.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[2]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 2
dst, req_func:	 None None
s4 entanglement fail   s3 EGA.s4.MemoryArray[3] EGA.s3.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[3]
subtask failed:	 EGA.s4.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[3]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 3
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[0] EGA.s1.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[0]
subtask failed:	 EGA.a.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[0]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2005750525070
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd4c0>
a entanglement fail   s1 EGA.a.MemoryArray[1] EGA.s1.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[1]
subtask failed:	 EGA.a.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[1]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2005750525070
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd550>
a entanglement fail   s1 EGA.a.MemoryArray[2] EGA.s1.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[2]
subtask failed:	 EGA.a.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[2]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2005750525070
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd5e0>
s1 entanglement fail   a EGA.s1.MemoryArray[0] EGA.a.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[0]
subtask failed:	 EGA.s1.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[0]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 0
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[1] EGA.a.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[1]
subtask failed:	 EGA.s1.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[1]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 1
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[2] EGA.a.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[2]
subtask failed:	 EGA.s1.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[2]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 2
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[3] EGA.s1.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[3]
subtask failed:	 EGA.a.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[3]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2005750537590
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14880ad30>
s1 entanglement fail   a EGA.s1.MemoryArray[3] EGA.a.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[3]
subtask failed:	 EGA.s1.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[3]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 3
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[4] EGA.a.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[4]
subtask failed:	 EGA.s1.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[4]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 4
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[4] EGA.s1.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[4]
subtask failed:	 EGA.a.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[4]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2005750537600
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd280>
s3 entanglement fail   s4 EGA.s3.MemoryArray[9] EGA.s4.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[9]
subtask failed:	 EGA.s3.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[9]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2005750550100
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd700>
s4 entanglement fail   s3 EGA.s4.MemoryArray[4] EGA.s3.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[4]
subtask failed:	 EGA.s4.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[4]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[0] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[1] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[2] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[3] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[4] middle_s1_s2
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[0] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[1] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[2] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[3] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[4] middle_s2_s3
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[0] middle_s3_s4
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[1] middle_s3_s4
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[2] middle_s3_s4
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[3] middle_s3_s4
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[0] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[1] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[2] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[3] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[4] middle_a_s1
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[4] middle_s3_s4
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[5] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[6] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[7] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[8] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[9] middle_s1_s2
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[5] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[6] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[7] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[8] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[9] middle_s2_s3
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[5] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[6] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[7] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[8] middle_s3_s4
a Generation protocol start with partner s1 EGA.a.MemoryArray[0] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[1] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[2] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[3] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[4] middle_a_s1
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[9] middle_s3_s4
flip circuit 5
flip circuit 20
flip circuit 21
flip circuit 6
flip circuit 7
flip circuit 22
flip circuit 23
flip circuit 40
flip circuit 8
flip circuit 25
flip circuit 9
flip circuit 41
flip circuit 24
flip circuit 26
flip circuit 60
flip circuit 42
flip circuit 45
flip circuit 27
flip circuit 80
flip circuit 28
flip circuit 46
flip circuit 61
flip circuit 43
flip circuit 0
flip circuit 81
flip circuit 29
flip circuit 47
flip circuit 62
flip circuit 1
flip circuit 44
flip circuit 82
flip circuit 2
flip circuit 63
flip circuit 48
flip circuit 83
flip circuit 3
flip circuit 84
flip circuit 4
flip circuit 64
flip circuit 49
s1 entanglement fail   s2 EGA.s1.MemoryArray[5] EGA.s2.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[5]
subtask failed:	 EGA.s1.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[5]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2007500700020
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd670>
s1 entanglement fail   s2 EGA.s1.MemoryArray[6] EGA.s2.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[6]
subtask failed:	 EGA.s1.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[6]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2007500700020
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd790>
s1 entanglement fail   s2 EGA.s1.MemoryArray[7] EGA.s2.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[7]
subtask failed:	 EGA.s1.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[7]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2007500700020
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd940>
s1 entanglement fail   s2 EGA.s1.MemoryArray[8] EGA.s2.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[8]
subtask failed:	 EGA.s1.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[8]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2007500700020
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd9d0>
s1 entanglement fail   s2 EGA.s1.MemoryArray[9] EGA.s2.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[9]
subtask failed:	 EGA.s1.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[9]']
task.name: TaskEntGen_s1_s2  for node: s1 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2007500700020
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd8b0>
s2 entanglement fail   s1 EGA.s2.MemoryArray[0] EGA.s1.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[0]
subtask failed:	 EGA.s2.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[0]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 0
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[1] EGA.s1.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[1]
subtask failed:	 EGA.s2.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[1]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 1
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[2] EGA.s1.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[2]
subtask failed:	 EGA.s2.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[2]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 2
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[3] EGA.s1.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[3]
subtask failed:	 EGA.s2.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[3]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 3
dst, req_func:	 None None
s2 entanglement fail   s1 EGA.s2.MemoryArray[4] EGA.s1.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[4]
subtask failed:	 EGA.s2.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[4]']
task.name: TaskEntGen_s2_s1  for node: s2 and memory returned for this: 4
dst, req_func:	 None None
s2 entanglement fail   s3 EGA.s2.MemoryArray[5] EGA.s3.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[5]
subtask failed:	 EGA.s2.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[5]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2007500700050
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bd820>
s2 entanglement fail   s3 EGA.s2.MemoryArray[6] EGA.s3.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[6]
subtask failed:	 EGA.s2.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[6]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2007500700050
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bdb80>
s2 entanglement fail   s3 EGA.s2.MemoryArray[7] EGA.s3.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[7]
subtask failed:	 EGA.s2.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[7]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2007500700050
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bdc10>
s2 entanglement fail   s3 EGA.s2.MemoryArray[8] EGA.s3.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[8]
subtask failed:	 EGA.s2.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[8]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2007500700050
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bdca0>
s3 entanglement fail   s2 EGA.s3.MemoryArray[0] EGA.s2.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[0]
subtask failed:	 EGA.s3.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[0]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 0
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[1] EGA.s2.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[1]
subtask failed:	 EGA.s3.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[1]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 1
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[2] EGA.s2.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[2]
subtask failed:	 EGA.s3.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[2]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 2
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[3] EGA.s2.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[3]
subtask failed:	 EGA.s3.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[3]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 3
dst, req_func:	 None None
s3 successful entanglement of memory with the node:  s4  <qntsim.components.bk_memory.Memory object at 0x142f430a0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s3.MemoryArray[5]
TaskEntGen_s3_s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights3s4
added a subtask to dependency  and map status is:	 [('TaskEntGen_s3_s4', ['EGA.s3.MemoryArray[5]'])]
checking eligibility of:	 TaskPurifyRights3s4
subtasks_available:	 ['EGA.s3.MemoryArray[5]']
dependency_subtasks name:	 EGA.s3.MemoryArray[5]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s3.MemoryArray[5]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s3.MemoryArray[5]
TaskPurifyRights3s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4s2
added a subtask to dependency  and map status is:	 [('TaskPurifyRights3s4', ['EP_EGA.s3.MemoryArray[5]']), ('TaskPurifyLefts3s2', [])]
checking eligibility of:	 TaskSwapMiddles4s2
Not eligible yet because TaskPurifyLefts3s2 does not have an instance to allocate
s4 successful entanglement of memory with the node:  s3  <qntsim.components.bk_memory.Memory object at 0x142f51f70> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s4.MemoryArray[0]
TaskEntGen_s4_s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts4s3
added a subtask to dependency  and map status is:	 [('TaskEntGen_s4_s3', ['EGA.s4.MemoryArray[0]'])]
checking eligibility of:	 TaskPurifyLefts4s3
subtasks_available:	 ['EGA.s4.MemoryArray[0]']
dependency_subtasks name:	 EGA.s4.MemoryArray[0]
inside ent_purify_action1
ReservationProtocol_s4_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s4.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s4.MemoryArray[0]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s4.MemoryArray[0]
TaskPurifyLefts4s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds4s2
added a subtask to dependency  and map status is:	 [('TaskPurifyLefts4s3', ['EP_EGA.s4.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapRightEnds4s2
subtasks_available:	 ['EP_EGA.s4.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.s4.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s4.MemoryArray[0]']
True
task.name: TaskSwapRightEnds4s2  for node: s4 and memory returned for this: 0
dst, req_func:	 None None
s3 successful entanglement of memory with the node:  s4  <qntsim.components.bk_memory.Memory object at 0x142f431c0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s3.MemoryArray[6]
TaskEntGen_s3_s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights3s4
added a subtask to dependency  and map status is:	 [('TaskEntGen_s3_s4', ['EGA.s3.MemoryArray[6]'])]
checking eligibility of:	 TaskPurifyRights3s4
subtasks_available:	 ['EGA.s3.MemoryArray[6]']
dependency_subtasks name:	 EGA.s3.MemoryArray[6]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s3.MemoryArray[6]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s3.MemoryArray[6]
TaskPurifyRights3s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4s2
added a subtask to dependency  and map status is:	 [('TaskPurifyRights3s4', ['EP_EGA.s3.MemoryArray[5]', 'EP_EGA.s3.MemoryArray[6]']), ('TaskPurifyLefts3s2', [])]
checking eligibility of:	 TaskSwapMiddles4s2
Not eligible yet because TaskPurifyLefts3s2 does not have an instance to allocate
a entanglement fail   s1 EGA.a.MemoryArray[0] EGA.s1.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[0]
subtask failed:	 EGA.a.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[0]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2007500712580
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bdf70>
s1 entanglement fail   a EGA.s1.MemoryArray[0] EGA.a.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[0]
subtask failed:	 EGA.s1.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[0]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 0
dst, req_func:	 None None
s4 successful entanglement of memory with the node:  s3  <qntsim.components.bk_memory.Memory object at 0x142f55100> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s4.MemoryArray[1]
TaskEntGen_s4_s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts4s3
added a subtask to dependency  and map status is:	 [('TaskEntGen_s4_s3', ['EGA.s4.MemoryArray[1]'])]
checking eligibility of:	 TaskPurifyLefts4s3
subtasks_available:	 ['EGA.s4.MemoryArray[1]']
dependency_subtasks name:	 EGA.s4.MemoryArray[1]
inside ent_purify_action1
ReservationProtocol_s4_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s4.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s4.MemoryArray[1]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s4.MemoryArray[1]
TaskPurifyLefts4s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds4s2
added a subtask to dependency  and map status is:	 [('TaskPurifyLefts4s3', ['EP_EGA.s4.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapRightEnds4s2
subtasks_available:	 ['EP_EGA.s4.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.s4.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s4.MemoryArray[1]']
True
task.name: TaskSwapRightEnds4s2  for node: s4 and memory returned for this: 1
dst, req_func:	 None None
s4 successful entanglement of memory with the node:  s3  <qntsim.components.bk_memory.Memory object at 0x142f551f0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s4.MemoryArray[2]
TaskEntGen_s4_s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts4s3
added a subtask to dependency  and map status is:	 [('TaskEntGen_s4_s3', ['EGA.s4.MemoryArray[2]'])]
checking eligibility of:	 TaskPurifyLefts4s3
subtasks_available:	 ['EGA.s4.MemoryArray[2]']
dependency_subtasks name:	 EGA.s4.MemoryArray[2]
inside ent_purify_action1
ReservationProtocol_s4_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s4.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s4.MemoryArray[2]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s4.MemoryArray[2]
TaskPurifyLefts4s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds4s2
added a subtask to dependency  and map status is:	 [('TaskPurifyLefts4s3', ['EP_EGA.s4.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapRightEnds4s2
subtasks_available:	 ['EP_EGA.s4.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.s4.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s4.MemoryArray[2]']
True
task.name: TaskSwapRightEnds4s2  for node: s4 and memory returned for this: 2
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[4] EGA.s2.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[4]
subtask failed:	 EGA.s3.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[4]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 4
dst, req_func:	 None None
s3 successful entanglement of memory with the node:  s4  <qntsim.components.bk_memory.Memory object at 0x142f432e0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s3.MemoryArray[7]
TaskEntGen_s3_s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights3s4
added a subtask to dependency  and map status is:	 [('TaskEntGen_s3_s4', ['EGA.s3.MemoryArray[7]'])]
checking eligibility of:	 TaskPurifyRights3s4
subtasks_available:	 ['EGA.s3.MemoryArray[7]']
dependency_subtasks name:	 EGA.s3.MemoryArray[7]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s3.MemoryArray[7]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s3.MemoryArray[7]
TaskPurifyRights3s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4s2
added a subtask to dependency  and map status is:	 [('TaskPurifyRights3s4', ['EP_EGA.s3.MemoryArray[5]', 'EP_EGA.s3.MemoryArray[6]', 'EP_EGA.s3.MemoryArray[7]']), ('TaskPurifyLefts3s2', [])]
checking eligibility of:	 TaskSwapMiddles4s2
Not eligible yet because TaskPurifyLefts3s2 does not have an instance to allocate
a entanglement fail   s1 EGA.a.MemoryArray[1] EGA.s1.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[1]
subtask failed:	 EGA.a.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[1]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2007500712590
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148936310>
s2 entanglement fail   s3 EGA.s2.MemoryArray[9] EGA.s3.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[9]
subtask failed:	 EGA.s2.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[9]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2007500712590
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489363a0>
s1 entanglement fail   a EGA.s1.MemoryArray[1] EGA.a.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[1]
subtask failed:	 EGA.s1.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[1]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 1
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[2] EGA.s1.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[2]
subtask failed:	 EGA.a.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[2]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2007500712600
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148936280>
s4 successful entanglement of memory with the node:  s3  <qntsim.components.bk_memory.Memory object at 0x142f55310> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s4.MemoryArray[3]
TaskEntGen_s4_s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts4s3
added a subtask to dependency  and map status is:	 [('TaskEntGen_s4_s3', ['EGA.s4.MemoryArray[3]'])]
checking eligibility of:	 TaskPurifyLefts4s3
subtasks_available:	 ['EGA.s4.MemoryArray[3]']
dependency_subtasks name:	 EGA.s4.MemoryArray[3]
inside ent_purify_action1
ReservationProtocol_s4_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s4.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s4.MemoryArray[3]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s4.MemoryArray[3]
TaskPurifyLefts4s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds4s2
added a subtask to dependency  and map status is:	 [('TaskPurifyLefts4s3', ['EP_EGA.s4.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapRightEnds4s2
subtasks_available:	 ['EP_EGA.s4.MemoryArray[3]']
dependency_subtasks name:	 EP_EGA.s4.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s4.MemoryArray[3]']
True
task.name: TaskSwapRightEnds4s2  for node: s4 and memory returned for this: 3
dst, req_func:	 None None
s3 successful entanglement of memory with the node:  s4  <qntsim.components.bk_memory.Memory object at 0x142f43400> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s3.MemoryArray[8]
TaskEntGen_s3_s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights3s4
added a subtask to dependency  and map status is:	 [('TaskEntGen_s3_s4', ['EGA.s3.MemoryArray[8]'])]
checking eligibility of:	 TaskPurifyRights3s4
subtasks_available:	 ['EGA.s3.MemoryArray[8]']
dependency_subtasks name:	 EGA.s3.MemoryArray[8]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s3.MemoryArray[8]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s3.MemoryArray[8]
TaskPurifyRights3s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4s2
added a subtask to dependency  and map status is:	 [('TaskPurifyRights3s4', ['EP_EGA.s3.MemoryArray[5]', 'EP_EGA.s3.MemoryArray[6]', 'EP_EGA.s3.MemoryArray[7]', 'EP_EGA.s3.MemoryArray[8]']), ('TaskPurifyLefts3s2', [])]
checking eligibility of:	 TaskSwapMiddles4s2
Not eligible yet because TaskPurifyLefts3s2 does not have an instance to allocate
s1 entanglement fail   a EGA.s1.MemoryArray[2] EGA.a.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[2]
subtask failed:	 EGA.s1.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[2]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 2
dst, req_func:	 None None
s1 entanglement fail   a EGA.s1.MemoryArray[3] EGA.a.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[3]
subtask failed:	 EGA.s1.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[3]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 3
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[3] EGA.s1.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[3]
subtask failed:	 EGA.a.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[3]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2007500725100
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1488bde50>
s1 entanglement fail   a EGA.s1.MemoryArray[4] EGA.a.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[4]
subtask failed:	 EGA.s1.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[4]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 4
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[4] EGA.s1.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[4]
subtask failed:	 EGA.a.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[4]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2007500725110
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148936550>
s4 entanglement fail   s3 EGA.s4.MemoryArray[4] EGA.s3.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[4]
subtask failed:	 EGA.s4.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[4]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
s3 entanglement fail   s4 EGA.s3.MemoryArray[9] EGA.s4.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[9]
subtask failed:	 EGA.s3.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[9]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2007500737610
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148936670>
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[0] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[1] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[2] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[3] middle_s1_s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 Generation protocol start with partner s1 EGA.s2.MemoryArray[4] middle_s1_s2
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[0] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[1] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[2] middle_s2_s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[3] middle_s2_s3
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[0] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[1] middle_a_s1
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[4] middle_s2_s3
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[2] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[3] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[4] middle_a_s1
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[4] middle_s3_s4
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[5] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[6] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[7] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[8] middle_s1_s2
s1 Generation protocol start with partner s2 EGA.s1.MemoryArray[9] middle_s1_s2
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[5] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[6] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[7] middle_s2_s3
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[8] middle_s2_s3
a Generation protocol start with partner s1 EGA.a.MemoryArray[0] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[1] middle_a_s1
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[9] middle_s2_s3
a Generation protocol start with partner s1 EGA.a.MemoryArray[2] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[3] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[4] middle_a_s1
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[9] middle_s3_s4
flip circuit 20
flip circuit 5
flip circuit 21
flip circuit 6
flip circuit 7
flip circuit 22
flip circuit 25
flip circuit 23
flip circuit 8
flip circuit 40
flip circuit 41
flip circuit 9
flip circuit 24
flip circuit 26
flip circuit 27
flip circuit 42
flip circuit 28
flip circuit 43
flip circuit 80
flip circuit 0
flip circuit 44
flip circuit 1
flip circuit 29
flip circuit 81
flip circuit 82
flip circuit 2
flip circuit 83
flip circuit 3
flip circuit 4
flip circuit 84
flip circuit 64
flip circuit 49
s2 successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x142f285b0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s2.MemoryArray[0]
TaskEntGen_s2_s1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts2s1
added a subtask to dependency  and map status is:	 [('TaskEntGen_s2_s1', ['EGA.s2.MemoryArray[0]'])]
checking eligibility of:	 TaskPurifyLefts2s1
subtasks_available:	 ['EGA.s2.MemoryArray[0]']
dependency_subtasks name:	 EGA.s2.MemoryArray[0]
inside ent_purify_action1
ReservationProtocol_s2_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s2.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s2.MemoryArray[0]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s2.MemoryArray[0]
TaskPurifyLefts2s1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds2a
added a subtask to dependency  and map status is:	 [('TaskPurifyLefts2s1', ['EP_EGA.s2.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapRightEnds2a
subtasks_available:	 ['EP_EGA.s2.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.s2.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s2.MemoryArray[0]']
True
task.name: TaskSwapRightEnds2a  for node: s2 and memory returned for this: 0
dst, req_func:	 None None
s1 successful entanglement of memory with the node:  s2  <qntsim.components.bk_memory.Memory object at 0x142ee63d0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[5]
TaskEntGen_s1_s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights1s2
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_s2', ['EGA.s1.MemoryArray[5]'])]
checking eligibility of:	 TaskPurifyRights1s2
subtasks_available:	 ['EGA.s1.MemoryArray[5]']
dependency_subtasks name:	 EGA.s1.MemoryArray[5]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[5]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[5]
TaskPurifyRights1s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', ['EP_EGA.s1.MemoryArray[5]']), ('TaskPurifyLefts1a', [])]
checking eligibility of:	 TaskSwapMiddles2a
Not eligible yet because TaskPurifyLefts1a does not have an instance to allocate
s1 successful entanglement of memory with the node:  s2  <qntsim.components.bk_memory.Memory object at 0x142efc730> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[6]
TaskEntGen_s1_s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights1s2
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_s2', ['EGA.s1.MemoryArray[6]'])]
checking eligibility of:	 TaskPurifyRights1s2
subtasks_available:	 ['EGA.s1.MemoryArray[6]']
dependency_subtasks name:	 EGA.s1.MemoryArray[6]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[6]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[6]
TaskPurifyRights1s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', ['EP_EGA.s1.MemoryArray[5]', 'EP_EGA.s1.MemoryArray[6]']), ('TaskPurifyLefts1a', [])]
checking eligibility of:	 TaskSwapMiddles2a
Not eligible yet because TaskPurifyLefts1a does not have an instance to allocate
s2 successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x142f28700> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s2.MemoryArray[1]
TaskEntGen_s2_s1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts2s1
added a subtask to dependency  and map status is:	 [('TaskEntGen_s2_s1', ['EGA.s2.MemoryArray[1]'])]
checking eligibility of:	 TaskPurifyLefts2s1
subtasks_available:	 ['EGA.s2.MemoryArray[1]']
dependency_subtasks name:	 EGA.s2.MemoryArray[1]
inside ent_purify_action1
ReservationProtocol_s2_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s2.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s2.MemoryArray[1]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s2.MemoryArray[1]
TaskPurifyLefts2s1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds2a
added a subtask to dependency  and map status is:	 [('TaskPurifyLefts2s1', ['EP_EGA.s2.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapRightEnds2a
subtasks_available:	 ['EP_EGA.s2.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.s2.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s2.MemoryArray[1]']
True
task.name: TaskSwapRightEnds2a  for node: s2 and memory returned for this: 1
dst, req_func:	 None None
s1 successful entanglement of memory with the node:  s2  <qntsim.components.bk_memory.Memory object at 0x142efcd90> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[7]
TaskEntGen_s1_s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights1s2
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_s2', ['EGA.s1.MemoryArray[7]'])]
checking eligibility of:	 TaskPurifyRights1s2
subtasks_available:	 ['EGA.s1.MemoryArray[7]']
dependency_subtasks name:	 EGA.s1.MemoryArray[7]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[7]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[7]
TaskPurifyRights1s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', ['EP_EGA.s1.MemoryArray[5]', 'EP_EGA.s1.MemoryArray[6]', 'EP_EGA.s1.MemoryArray[7]']), ('TaskPurifyLefts1a', [])]
checking eligibility of:	 TaskSwapMiddles2a
Not eligible yet because TaskPurifyLefts1a does not have an instance to allocate
s2 successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x142f28820> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s2.MemoryArray[2]
TaskEntGen_s2_s1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts2s1
added a subtask to dependency  and map status is:	 [('TaskEntGen_s2_s1', ['EGA.s2.MemoryArray[2]'])]
checking eligibility of:	 TaskPurifyLefts2s1
subtasks_available:	 ['EGA.s2.MemoryArray[2]']
dependency_subtasks name:	 EGA.s2.MemoryArray[2]
inside ent_purify_action1
ReservationProtocol_s2_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s2.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s2.MemoryArray[2]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s2.MemoryArray[2]
TaskPurifyLefts2s1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds2a
added a subtask to dependency  and map status is:	 [('TaskPurifyLefts2s1', ['EP_EGA.s2.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapRightEnds2a
subtasks_available:	 ['EP_EGA.s2.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.s2.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s2.MemoryArray[2]']
True
task.name: TaskSwapRightEnds2a  for node: s2 and memory returned for this: 2
dst, req_func:	 None None
s2 entanglement fail   s3 EGA.s2.MemoryArray[5] EGA.s3.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[5]
subtask failed:	 EGA.s2.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[5]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2009250887560
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148936af0>
s1 successful entanglement of memory with the node:  s2  <qntsim.components.bk_memory.Memory object at 0x142efc250> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[8]
TaskEntGen_s1_s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights1s2
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_s2', ['EGA.s1.MemoryArray[8]'])]
checking eligibility of:	 TaskPurifyRights1s2
subtasks_available:	 ['EGA.s1.MemoryArray[8]']
dependency_subtasks name:	 EGA.s1.MemoryArray[8]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[8]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[8]
TaskPurifyRights1s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', ['EP_EGA.s1.MemoryArray[5]', 'EP_EGA.s1.MemoryArray[6]', 'EP_EGA.s1.MemoryArray[7]', 'EP_EGA.s1.MemoryArray[8]']), ('TaskPurifyLefts1a', [])]
checking eligibility of:	 TaskSwapMiddles2a
Not eligible yet because TaskPurifyLefts1a does not have an instance to allocate
s2 successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x142f28940> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s2.MemoryArray[3]
TaskEntGen_s2_s1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts2s1
added a subtask to dependency  and map status is:	 [('TaskEntGen_s2_s1', ['EGA.s2.MemoryArray[3]'])]
checking eligibility of:	 TaskPurifyLefts2s1
subtasks_available:	 ['EGA.s2.MemoryArray[3]']
dependency_subtasks name:	 EGA.s2.MemoryArray[3]
inside ent_purify_action1
ReservationProtocol_s2_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s2.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s2.MemoryArray[3]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s2.MemoryArray[3]
TaskPurifyLefts2s1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds2a
added a subtask to dependency  and map status is:	 [('TaskPurifyLefts2s1', ['EP_EGA.s2.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapRightEnds2a
subtasks_available:	 ['EP_EGA.s2.MemoryArray[3]']
dependency_subtasks name:	 EP_EGA.s2.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s2.MemoryArray[3]']
True
task.name: TaskSwapRightEnds2a  for node: s2 and memory returned for this: 3
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[0] EGA.s2.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[0]
subtask failed:	 EGA.s3.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[0]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 0
dst, req_func:	 None None
s3 successful entanglement of memory with the node:  s2  <qntsim.components.bk_memory.Memory object at 0x142f3cbe0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s3.MemoryArray[1]
TaskEntGen_s3_s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts3s2
added a subtask to dependency  and map status is:	 [('TaskEntGen_s3_s2', ['EGA.s3.MemoryArray[1]'])]
checking eligibility of:	 TaskPurifyLefts3s2
subtasks_available:	 ['EGA.s3.MemoryArray[1]']
dependency_subtasks name:	 EGA.s3.MemoryArray[1]
inside ent_purify_action1
ReservationProtocol_s3_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s3.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s3.MemoryArray[1]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s3.MemoryArray[1]
TaskPurifyLefts3s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4s2
added a subtask to dependency  and map status is:	 [('TaskPurifyRights3s4', ['EP_EGA.s3.MemoryArray[5]', 'EP_EGA.s3.MemoryArray[6]', 'EP_EGA.s3.MemoryArray[7]', 'EP_EGA.s3.MemoryArray[8]']), ('TaskPurifyLefts3s2', ['EP_EGA.s3.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapMiddles4s2
subtasks_available:	 ['EP_EGA.s3.MemoryArray[5]', 'EP_EGA.s3.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.s3.MemoryArray[5]
dependency_subtasks name:	 EP_EGA.s3.MemoryArray[1]
inside task actin: left :a right: s4 and mid: s2 and self.own.name: s3
inside task actin: left_m :s2 right_m: s4 and mid: s2 and self.own.name: s3
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s3.MemoryArray[5]
purify_subtask_right:  EP_EGA.s3.MemoryArray[1]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s3.MemoryArray[5]', 'EP_EGA.s3.MemoryArray[1]']
True
Make use of newly created swap subtask :  ESA.s3.MemoryArray[1].s3.MemoryArray[5]
task.name: TaskSwapMiddles4s2  for node: s3 and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s2  delay:  500000000.0 and expected message recv time:  2009250887570
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x14899c0d0>
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2009250887570
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x14899c160>
s2 successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x142f28a60> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s2.MemoryArray[4]
TaskEntGen_s2_s1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts2s1
added a subtask to dependency  and map status is:	 [('TaskEntGen_s2_s1', ['EGA.s2.MemoryArray[4]'])]
checking eligibility of:	 TaskPurifyLefts2s1
subtasks_available:	 ['EGA.s2.MemoryArray[4]']
dependency_subtasks name:	 EGA.s2.MemoryArray[4]
inside ent_purify_action1
ReservationProtocol_s2_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s2.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s2.MemoryArray[4]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s2.MemoryArray[4]
TaskPurifyLefts2s1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds2a
added a subtask to dependency  and map status is:	 [('TaskPurifyLefts2s1', ['EP_EGA.s2.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapRightEnds2a
subtasks_available:	 ['EP_EGA.s2.MemoryArray[4]']
dependency_subtasks name:	 EP_EGA.s2.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s2.MemoryArray[4]']
True
task.name: TaskSwapRightEnds2a  for node: s2 and memory returned for this: 4
dst, req_func:	 None None
s1 successful entanglement of memory with the node:  s2  <qntsim.components.bk_memory.Memory object at 0x142efc4c0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[9]
TaskEntGen_s1_s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights1s2
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_s2', ['EGA.s1.MemoryArray[9]'])]
checking eligibility of:	 TaskPurifyRights1s2
subtasks_available:	 ['EGA.s1.MemoryArray[9]']
dependency_subtasks name:	 EGA.s1.MemoryArray[9]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[9]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[9]
TaskPurifyRights1s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', ['EP_EGA.s1.MemoryArray[5]', 'EP_EGA.s1.MemoryArray[6]', 'EP_EGA.s1.MemoryArray[7]', 'EP_EGA.s1.MemoryArray[8]', 'EP_EGA.s1.MemoryArray[9]']), ('TaskPurifyLefts1a', [])]
checking eligibility of:	 TaskSwapMiddles2a
Not eligible yet because TaskPurifyLefts1a does not have an instance to allocate
s2 successful entanglement of memory with the node:  s3  <qntsim.components.bk_memory.Memory object at 0x142f28ca0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s2.MemoryArray[6]
TaskEntGen_s2_s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights2s3
added a subtask to dependency  and map status is:	 [('TaskEntGen_s2_s3', ['EGA.s2.MemoryArray[6]'])]
checking eligibility of:	 TaskPurifyRights2s3
subtasks_available:	 ['EGA.s2.MemoryArray[6]']
dependency_subtasks name:	 EGA.s2.MemoryArray[6]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s2.MemoryArray[6]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s2.MemoryArray[6]
TaskPurifyRights2s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEnds2s4
added a subtask to dependency  and map status is:	 [('TaskPurifyRights2s3', ['EP_EGA.s2.MemoryArray[6]'])]
checking eligibility of:	 TaskSwapLeftEnds2s4
subtasks_available:	 ['EP_EGA.s2.MemoryArray[6]']
dependency_subtasks name:	 EP_EGA.s2.MemoryArray[6]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s2.MemoryArray[6]']
True
task.name: TaskSwapLeftEnds2s4  for node: s2 and memory returned for this: 6
dst, req_func:	 None None
s2 successful entanglement of memory with the node:  s3  <qntsim.components.bk_memory.Memory object at 0x142f28dc0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s2.MemoryArray[7]
TaskEntGen_s2_s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights2s3
added a subtask to dependency  and map status is:	 [('TaskEntGen_s2_s3', ['EGA.s2.MemoryArray[7]'])]
checking eligibility of:	 TaskPurifyRights2s3
subtasks_available:	 ['EGA.s2.MemoryArray[7]']
dependency_subtasks name:	 EGA.s2.MemoryArray[7]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s2.MemoryArray[7]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s2.MemoryArray[7]
TaskPurifyRights2s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEnds2s4
added a subtask to dependency  and map status is:	 [('TaskPurifyRights2s3', ['EP_EGA.s2.MemoryArray[7]'])]
checking eligibility of:	 TaskSwapLeftEnds2s4
subtasks_available:	 ['EP_EGA.s2.MemoryArray[7]']
dependency_subtasks name:	 EP_EGA.s2.MemoryArray[7]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s2.MemoryArray[7]']
True
task.name: TaskSwapLeftEnds2s4  for node: s2 and memory returned for this: 7
dst, req_func:	 None None
s3 successful entanglement of memory with the node:  s2  <qntsim.components.bk_memory.Memory object at 0x142f3cd00> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s3.MemoryArray[2]
TaskEntGen_s3_s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts3s2
added a subtask to dependency  and map status is:	 [('TaskEntGen_s3_s2', ['EGA.s3.MemoryArray[2]'])]
checking eligibility of:	 TaskPurifyLefts3s2
subtasks_available:	 ['EGA.s3.MemoryArray[2]']
dependency_subtasks name:	 EGA.s3.MemoryArray[2]
inside ent_purify_action1
ReservationProtocol_s3_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s3.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s3.MemoryArray[2]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s3.MemoryArray[2]
TaskPurifyLefts3s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4s2
added a subtask to dependency  and map status is:	 [('TaskPurifyRights3s4', ['EP_EGA.s3.MemoryArray[6]', 'EP_EGA.s3.MemoryArray[7]', 'EP_EGA.s3.MemoryArray[8]']), ('TaskPurifyLefts3s2', ['EP_EGA.s3.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapMiddles4s2
subtasks_available:	 ['EP_EGA.s3.MemoryArray[6]', 'EP_EGA.s3.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.s3.MemoryArray[6]
dependency_subtasks name:	 EP_EGA.s3.MemoryArray[2]
inside task actin: left :a right: s4 and mid: s2 and self.own.name: s3
inside task actin: left_m :s2 right_m: s4 and mid: s2 and self.own.name: s3
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s3.MemoryArray[6]
purify_subtask_right:  EP_EGA.s3.MemoryArray[2]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s3.MemoryArray[6]', 'EP_EGA.s3.MemoryArray[2]']
True
Make use of newly created swap subtask :  ESA.s3.MemoryArray[2].s3.MemoryArray[6]
task.name: TaskSwapMiddles4s2  for node: s3 and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s2  delay:  500000000.0 and expected message recv time:  2009250887580
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x14899c700>
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2009250887580
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x14899c790>
s3 entanglement fail   s2 EGA.s3.MemoryArray[3] EGA.s2.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[3]
subtask failed:	 EGA.s3.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[3]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 3
dst, req_func:	 None None
s2 entanglement fail   s3 EGA.s2.MemoryArray[8] EGA.s3.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[8]
subtask failed:	 EGA.s2.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[8]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2009250887590
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14899c1f0>
s1 successful entanglement of memory with the node:  a  <qntsim.components.bk_memory.Memory object at 0x142ee6490> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[0]
TaskEntGen_s1_a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts1a
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_a', ['EGA.s1.MemoryArray[0]'])]
checking eligibility of:	 TaskPurifyLefts1a
subtasks_available:	 ['EGA.s1.MemoryArray[0]']
dependency_subtasks name:	 EGA.s1.MemoryArray[0]
inside ent_purify_action1
ReservationProtocol_s1_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s1.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[0]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[0]
TaskPurifyLefts1a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', ['EP_EGA.s1.MemoryArray[5]', 'EP_EGA.s1.MemoryArray[6]', 'EP_EGA.s1.MemoryArray[7]', 'EP_EGA.s1.MemoryArray[8]', 'EP_EGA.s1.MemoryArray[9]']), ('TaskPurifyLefts1a', ['EP_EGA.s1.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapMiddles2a
subtasks_available:	 ['EP_EGA.s1.MemoryArray[5]', 'EP_EGA.s1.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[5]
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[0]
inside task actin: left :a right: s4 and mid: s2 and self.own.name: s1
inside task actin: left_m :a right_m: s2 and mid: s2 and self.own.name: s1
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s1.MemoryArray[5]
purify_subtask_right:  EP_EGA.s1.MemoryArray[0]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s1.MemoryArray[5]', 'EP_EGA.s1.MemoryArray[0]']
True
Make use of newly created swap subtask :  ESA.s1.MemoryArray[0].s1.MemoryArray[5]
task.name: TaskSwapMiddles2a  for node: s1 and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  a  delay:  500000000.0 and expected message recv time:  2009250900090
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x14899c940>
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2009250900090
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x14899c9d0>
a successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x142f6c3d0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.a.MemoryArray[0]
TaskEntGen_a_s1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightas1
added a subtask to dependency  and map status is:	 [('TaskEntGen_a_s1', ['EGA.a.MemoryArray[0]'])]
checking eligibility of:	 TaskPurifyRightas1
subtasks_available:	 ['EGA.a.MemoryArray[0]']
dependency_subtasks name:	 EGA.a.MemoryArray[0]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.a.MemoryArray[0]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.a.MemoryArray[0]
TaskPurifyRightas1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndas2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightas1', ['EP_EGA.a.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapLeftEndas2
subtasks_available:	 ['EP_EGA.a.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.a.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.a.MemoryArray[0]']
True
task.name: TaskSwapLeftEndas2  for node: a and memory returned for this: 0
dst, req_func:	 None None
s3 entanglement fail   s2 EGA.s3.MemoryArray[4] EGA.s2.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[4]
subtask failed:	 EGA.s3.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[4]']
task.name: TaskEntGen_s3_s2  for node: s3 and memory returned for this: 4
dst, req_func:	 None None
a successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x142f6c550> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.a.MemoryArray[1]
TaskEntGen_a_s1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightas1
added a subtask to dependency  and map status is:	 [('TaskEntGen_a_s1', ['EGA.a.MemoryArray[1]'])]
checking eligibility of:	 TaskPurifyRightas1
subtasks_available:	 ['EGA.a.MemoryArray[1]']
dependency_subtasks name:	 EGA.a.MemoryArray[1]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.a.MemoryArray[1]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.a.MemoryArray[1]
TaskPurifyRightas1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndas2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightas1', ['EP_EGA.a.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapLeftEndas2
subtasks_available:	 ['EP_EGA.a.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.a.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.a.MemoryArray[1]']
True
task.name: TaskSwapLeftEndas2  for node: a and memory returned for this: 1
dst, req_func:	 None None
s1 successful entanglement of memory with the node:  a  <qntsim.components.bk_memory.Memory object at 0x142ee6c70> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[1]
TaskEntGen_s1_a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts1a
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_a', ['EGA.s1.MemoryArray[1]'])]
checking eligibility of:	 TaskPurifyLefts1a
subtasks_available:	 ['EGA.s1.MemoryArray[1]']
dependency_subtasks name:	 EGA.s1.MemoryArray[1]
inside ent_purify_action1
ReservationProtocol_s1_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s1.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[1]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[1]
TaskPurifyLefts1a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', ['EP_EGA.s1.MemoryArray[6]', 'EP_EGA.s1.MemoryArray[7]', 'EP_EGA.s1.MemoryArray[8]', 'EP_EGA.s1.MemoryArray[9]']), ('TaskPurifyLefts1a', ['EP_EGA.s1.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapMiddles2a
subtasks_available:	 ['EP_EGA.s1.MemoryArray[6]', 'EP_EGA.s1.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[6]
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[1]
inside task actin: left :a right: s4 and mid: s2 and self.own.name: s1
inside task actin: left_m :a right_m: s2 and mid: s2 and self.own.name: s1
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s1.MemoryArray[6]
purify_subtask_right:  EP_EGA.s1.MemoryArray[1]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s1.MemoryArray[6]', 'EP_EGA.s1.MemoryArray[1]']
True
Make use of newly created swap subtask :  ESA.s1.MemoryArray[1].s1.MemoryArray[6]
task.name: TaskSwapMiddles2a  for node: s1 and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  a  delay:  500000000.0 and expected message recv time:  2009250900100
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x14899cdc0>
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2009250900100
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x14899ce50>
s2 entanglement fail   s3 EGA.s2.MemoryArray[9] EGA.s3.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s2.MemoryArray[9]
subtask failed:	 EGA.s2.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s2.MemoryArray[9]']
task.name: TaskEntGen_s2_s3  for node: s2 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s3  delay:  500000000.0 and expected message recv time:  2009250900100
dst, req_func:	 s3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14899cf70>
a successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x142f6c670> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.a.MemoryArray[2]
TaskEntGen_a_s1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightas1
added a subtask to dependency  and map status is:	 [('TaskEntGen_a_s1', ['EGA.a.MemoryArray[2]'])]
checking eligibility of:	 TaskPurifyRightas1
subtasks_available:	 ['EGA.a.MemoryArray[2]']
dependency_subtasks name:	 EGA.a.MemoryArray[2]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.a.MemoryArray[2]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.a.MemoryArray[2]
TaskPurifyRightas1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndas2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightas1', ['EP_EGA.a.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapLeftEndas2
subtasks_available:	 ['EP_EGA.a.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.a.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.a.MemoryArray[2]']
True
task.name: TaskSwapLeftEndas2  for node: a and memory returned for this: 2
dst, req_func:	 None None
s1 successful entanglement of memory with the node:  a  <qntsim.components.bk_memory.Memory object at 0x142ee6af0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[2]
TaskEntGen_s1_a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts1a
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_a', ['EGA.s1.MemoryArray[2]'])]
checking eligibility of:	 TaskPurifyLefts1a
subtasks_available:	 ['EGA.s1.MemoryArray[2]']
dependency_subtasks name:	 EGA.s1.MemoryArray[2]
inside ent_purify_action1
ReservationProtocol_s1_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s1.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[2]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[2]
TaskPurifyLefts1a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', ['EP_EGA.s1.MemoryArray[7]', 'EP_EGA.s1.MemoryArray[8]', 'EP_EGA.s1.MemoryArray[9]']), ('TaskPurifyLefts1a', ['EP_EGA.s1.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapMiddles2a
subtasks_available:	 ['EP_EGA.s1.MemoryArray[7]', 'EP_EGA.s1.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[7]
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[2]
inside task actin: left :a right: s4 and mid: s2 and self.own.name: s1
inside task actin: left_m :a right_m: s2 and mid: s2 and self.own.name: s1
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s1.MemoryArray[7]
purify_subtask_right:  EP_EGA.s1.MemoryArray[2]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s1.MemoryArray[7]', 'EP_EGA.s1.MemoryArray[2]']
True
Make use of newly created swap subtask :  ESA.s1.MemoryArray[2].s1.MemoryArray[7]
task.name: TaskSwapMiddles2a  for node: s1 and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  a  delay:  500000000.0 and expected message recv time:  2009250900110
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x1489941f0>
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2009250900110
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x148994280>
a entanglement fail   s1 EGA.a.MemoryArray[3] EGA.s1.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[3]
subtask failed:	 EGA.a.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[3]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2009250912610
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489943a0>
s1 entanglement fail   a EGA.s1.MemoryArray[3] EGA.a.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[3]
subtask failed:	 EGA.s1.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[3]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 3
dst, req_func:	 None None
a entanglement fail   s1 EGA.a.MemoryArray[4] EGA.s1.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.a.MemoryArray[4]
subtask failed:	 EGA.a.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.a.MemoryArray[4]']
task.name: TaskEntGen_a_s1  for node: a and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: a  dest:  s1  delay:  500000000.0 and expected message recv time:  2009250912620
dst, req_func:	 s1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148994310>
s1 entanglement fail   a EGA.s1.MemoryArray[4] EGA.a.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s1.MemoryArray[4]
subtask failed:	 EGA.s1.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s1.MemoryArray[4]']
task.name: TaskEntGen_s1_a  for node: s1 and memory returned for this: 4
dst, req_func:	 None None
s4 entanglement fail   s3 EGA.s4.MemoryArray[4] EGA.s3.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[4]
subtask failed:	 EGA.s4.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[4]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
s3 entanglement fail   s4 EGA.s3.MemoryArray[9] EGA.s4.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[9]
subtask failed:	 EGA.s3.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[9]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2009250925120
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489944c0>
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[0] middle_s2_s3
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 SWAPPING end protocol start with partner s3
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 SWAPPING end protocol start with partner s3
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 SWAPPING end protocol start with partner s3
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 SWAPPING end protocol start with partner s3
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[3] middle_s2_s3
REQ_FUNC_RECV_TIME:  2009250900090  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s1
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 SWAPPING end protocol start with partner s1
REQ_FUNC_RECV_TIME:  2009250900100  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s1
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 SWAPPING end protocol start with partner s1
push message at  s3  msg.receiver:  ManagerType.ResourceManager
s3 Generation protocol start with partner s2 EGA.s3.MemoryArray[4] middle_s2_s3
REQ_FUNC_RECV_TIME:  2009250900110  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s1
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 SWAPPING end protocol start with partner s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[3] middle_a_s1
push message at  s1  msg.receiver:  ManagerType.ResourceManager
s1 Generation protocol start with partner a EGA.s1.MemoryArray[4] middle_a_s1
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[4] middle_s3_s4
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[5] middle_s2_s3
s3 SWAPPING middle protocol start with ends s2, s4
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s3.MemoryArray[1].s3.MemoryArray[5]
TaskSwapMiddles4s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
s3 SWAPPING middle protocol start with ends s2, s4
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s3.MemoryArray[2].s3.MemoryArray[6]
TaskSwapMiddles4s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[8] middle_s2_s3
s1 SWAPPING middle protocol start with ends a, s2
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s1.MemoryArray[0].s1.MemoryArray[5]
TaskSwapMiddles2a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Updated to raw after swapping
s1 SWAPPING middle protocol start with ends a, s2
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s1.MemoryArray[1].s1.MemoryArray[6]
TaskSwapMiddles2a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Updated to raw after swapping
s2 Generation protocol start with partner s3 EGA.s2.MemoryArray[9] middle_s2_s3
s1 SWAPPING middle protocol start with ends a, s2
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s1.MemoryArray[2].s1.MemoryArray[7]
TaskSwapMiddles2a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Updated to raw after swapping
a Generation protocol start with partner s1 EGA.a.MemoryArray[3] middle_a_s1
a Generation protocol start with partner s1 EGA.a.MemoryArray[4] middle_a_s1
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[9] middle_s3_s4
Entanglement swap successful between ('s2', 's4.MemoryArray[0]')
########Subtask Succeeded############## subtask.protocol name ESB.s2.MemoryArray[6]
TaskSwapLeftEnds2s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4a
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEnds2s4', ['ESB.s2.MemoryArray[6]']), ('TaskSwapRightEnds2a', [])]
checking eligibility of:	 TaskSwapMiddles4a
Not eligible yet because TaskSwapRightEnds2a does not have an instance to allocate
Entanglement swap successful between ('s4', 's2.MemoryArray[6]')
########Subtask Succeeded############## subtask.protocol name ESB.s4.MemoryArray[0]
TaskSwapRightEnds4s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds4a
added a subtask to dependency  and map status is:	 [('TaskSwapRightEnds4s2', ['ESB.s4.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapRightEnds4a
subtasks_available:	 ['ESB.s4.MemoryArray[0]']
dependency_subtasks name:	 ESB.s4.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.s4.MemoryArray[0]']
True
task.name: TaskSwapRightEnds4a  for node: s4 and memory returned for this: 0
dst, req_func:	 None None
Entanglement swap successful between ('s2', 's4.MemoryArray[1]')
########Subtask Succeeded############## subtask.protocol name ESB.s2.MemoryArray[7]
TaskSwapLeftEnds2s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4a
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEnds2s4', ['ESB.s2.MemoryArray[6]', 'ESB.s2.MemoryArray[7]']), ('TaskSwapRightEnds2a', [])]
checking eligibility of:	 TaskSwapMiddles4a
Not eligible yet because TaskSwapRightEnds2a does not have an instance to allocate
Entanglement swap successful between ('s4', 's2.MemoryArray[7]')
########Subtask Succeeded############## subtask.protocol name ESB.s4.MemoryArray[1]
TaskSwapRightEnds4s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds4a
added a subtask to dependency  and map status is:	 [('TaskSwapRightEnds4s2', ['ESB.s4.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapRightEnds4a
subtasks_available:	 ['ESB.s4.MemoryArray[1]']
dependency_subtasks name:	 ESB.s4.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.s4.MemoryArray[1]']
True
task.name: TaskSwapRightEnds4a  for node: s4 and memory returned for this: 1
dst, req_func:	 None None
flip circuit 40
flip circuit 25
Entanglement swap successful between ('a', 's2.MemoryArray[0]')
########Subtask Succeeded############## subtask.protocol name ESB.a.MemoryArray[0]
TaskSwapLeftEndas2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndas4
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndas2', ['ESB.a.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapLeftEndas4
subtasks_available:	 ['ESB.a.MemoryArray[0]']
dependency_subtasks name:	 ESB.a.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.a.MemoryArray[0]']
True
task.name: TaskSwapLeftEndas4  for node: a and memory returned for this: 0
dst, req_func:	 None None
Entanglement swap successful between ('s2', 'a.MemoryArray[0]')
########Subtask Succeeded############## subtask.protocol name ESB.s2.MemoryArray[0]
TaskSwapRightEnds2a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4a
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEnds2s4', ['ESB.s2.MemoryArray[6]', 'ESB.s2.MemoryArray[7]']), ('TaskSwapRightEnds2a', ['ESB.s2.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapMiddles4a
subtasks_available:	 ['ESB.s2.MemoryArray[6]', 'ESB.s2.MemoryArray[0]']
dependency_subtasks name:	 ESB.s2.MemoryArray[6]
dependency_subtasks name:	 ESB.s2.MemoryArray[0]
inside task actin: left :a right: s4 and mid: s2 and self.own.name: s2
inside task actin: left_m :a right_m: s4 and mid: s2 and self.own.name: s2
inside ent_swap_action_middle
purify_subtask_left:  ESB.s2.MemoryArray[6]
purify_subtask_right:  ESB.s2.MemoryArray[0]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.s2.MemoryArray[6]', 'ESB.s2.MemoryArray[0]']
True
Make use of newly created swap subtask :  ESA.s2.MemoryArray[0].s2.MemoryArray[6]
task.name: TaskSwapMiddles4a  for node: s2 and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  a  delay:  500000000.0 and expected message recv time:  2010750900090
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x148994c10>
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s4  delay:  500000000.0 and expected message recv time:  2010750900090
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x148994af0>
flip circuit 43
flip circuit 28
Entanglement swap successful between ('a', 's2.MemoryArray[1]')
########Subtask Succeeded############## subtask.protocol name ESB.a.MemoryArray[1]
TaskSwapLeftEndas2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndas4
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndas2', ['ESB.a.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapLeftEndas4
subtasks_available:	 ['ESB.a.MemoryArray[1]']
dependency_subtasks name:	 ESB.a.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.a.MemoryArray[1]']
True
task.name: TaskSwapLeftEndas4  for node: a and memory returned for this: 1
dst, req_func:	 None None
Entanglement swap successful between ('s2', 'a.MemoryArray[1]')
########Subtask Succeeded############## subtask.protocol name ESB.s2.MemoryArray[1]
TaskSwapRightEnds2a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4a
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEnds2s4', ['ESB.s2.MemoryArray[7]']), ('TaskSwapRightEnds2a', ['ESB.s2.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapMiddles4a
subtasks_available:	 ['ESB.s2.MemoryArray[7]', 'ESB.s2.MemoryArray[1]']
dependency_subtasks name:	 ESB.s2.MemoryArray[7]
dependency_subtasks name:	 ESB.s2.MemoryArray[1]
inside task actin: left :a right: s4 and mid: s2 and self.own.name: s2
inside task actin: left_m :a right_m: s4 and mid: s2 and self.own.name: s2
inside ent_swap_action_middle
purify_subtask_left:  ESB.s2.MemoryArray[7]
purify_subtask_right:  ESB.s2.MemoryArray[1]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.s2.MemoryArray[7]', 'ESB.s2.MemoryArray[1]']
True
Make use of newly created swap subtask :  ESA.s2.MemoryArray[1].s2.MemoryArray[7]
task.name: TaskSwapMiddles4a  for node: s2 and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  a  delay:  500000000.0 and expected message recv time:  2010750900100
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x148994a60>
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s4  delay:  500000000.0 and expected message recv time:  2010750900100
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x148994e50>
Entanglement swap successful between ('a', 's2.MemoryArray[2]')
########Subtask Succeeded############## subtask.protocol name ESB.a.MemoryArray[2]
TaskSwapLeftEndas2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndas4
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndas2', ['ESB.a.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapLeftEndas4
subtasks_available:	 ['ESB.a.MemoryArray[2]']
dependency_subtasks name:	 ESB.a.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.a.MemoryArray[2]']
True
task.name: TaskSwapLeftEndas4  for node: a and memory returned for this: 2
dst, req_func:	 None None
Entanglement swap successful between ('s2', 'a.MemoryArray[2]')
########Subtask Succeeded############## subtask.protocol name ESB.s2.MemoryArray[2]
TaskSwapRightEnds2a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4a
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEnds2s4', []), ('TaskSwapRightEnds2a', ['ESB.s2.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapMiddles4a
Not eligible yet because TaskSwapLeftEnds2s4 does not have an instance to allocate
flip circuit 29
flip circuit 44
flip circuit 83
flip circuit 3
flip circuit 4
flip circuit 84
flip circuit 64
flip circuit 49
s2 successful entanglement of memory with the node:  s3  <qntsim.components.bk_memory.Memory object at 0x142f28b80> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s2.MemoryArray[5]
TaskEntGen_s2_s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights2s3
added a subtask to dependency  and map status is:	 [('TaskEntGen_s2_s3', ['EGA.s2.MemoryArray[5]'])]
checking eligibility of:	 TaskPurifyRights2s3
subtasks_available:	 ['EGA.s2.MemoryArray[5]']
dependency_subtasks name:	 EGA.s2.MemoryArray[5]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s2.MemoryArray[5]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s2.MemoryArray[5]
TaskPurifyRights2s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEnds2s4
added a subtask to dependency  and map status is:	 [('TaskPurifyRights2s3', ['EP_EGA.s2.MemoryArray[5]'])]
checking eligibility of:	 TaskSwapLeftEnds2s4
subtasks_available:	 ['EP_EGA.s2.MemoryArray[5]']
dependency_subtasks name:	 EP_EGA.s2.MemoryArray[5]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s2.MemoryArray[5]']
True
task.name: TaskSwapLeftEnds2s4  for node: s2 and memory returned for this: 5
dst, req_func:	 None None
s3 successful entanglement of memory with the node:  s2  <qntsim.components.bk_memory.Memory object at 0x142f3ca60> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s3.MemoryArray[0]
TaskEntGen_s3_s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts3s2
added a subtask to dependency  and map status is:	 [('TaskEntGen_s3_s2', ['EGA.s3.MemoryArray[0]'])]
checking eligibility of:	 TaskPurifyLefts3s2
subtasks_available:	 ['EGA.s3.MemoryArray[0]']
dependency_subtasks name:	 EGA.s3.MemoryArray[0]
inside ent_purify_action1
ReservationProtocol_s3_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s3.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s3.MemoryArray[0]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s3.MemoryArray[0]
TaskPurifyLefts3s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4s2
added a subtask to dependency  and map status is:	 [('TaskPurifyRights3s4', ['EP_EGA.s3.MemoryArray[7]', 'EP_EGA.s3.MemoryArray[8]']), ('TaskPurifyLefts3s2', ['EP_EGA.s3.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapMiddles4s2
subtasks_available:	 ['EP_EGA.s3.MemoryArray[7]', 'EP_EGA.s3.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.s3.MemoryArray[7]
dependency_subtasks name:	 EP_EGA.s3.MemoryArray[0]
inside task actin: left :a right: s4 and mid: s2 and self.own.name: s3
inside task actin: left_m :s2 right_m: s4 and mid: s2 and self.own.name: s3
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s3.MemoryArray[7]
purify_subtask_right:  EP_EGA.s3.MemoryArray[0]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s3.MemoryArray[7]', 'EP_EGA.s3.MemoryArray[0]']
True
Make use of newly created swap subtask :  ESA.s3.MemoryArray[0].s3.MemoryArray[7]
task.name: TaskSwapMiddles4s2  for node: s3 and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s2  delay:  500000000.0 and expected message recv time:  2011001075070
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x148994430>
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2011001075070
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x1489945e0>
s2 successful entanglement of memory with the node:  s3  <qntsim.components.bk_memory.Memory object at 0x142f28eb0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s2.MemoryArray[8]
TaskEntGen_s2_s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights2s3
added a subtask to dependency  and map status is:	 [('TaskEntGen_s2_s3', ['EGA.s2.MemoryArray[8]'])]
checking eligibility of:	 TaskPurifyRights2s3
subtasks_available:	 ['EGA.s2.MemoryArray[8]']
dependency_subtasks name:	 EGA.s2.MemoryArray[8]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s2.MemoryArray[8]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s2.MemoryArray[8]
TaskPurifyRights2s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEnds2s4
added a subtask to dependency  and map status is:	 [('TaskPurifyRights2s3', ['EP_EGA.s2.MemoryArray[8]'])]
checking eligibility of:	 TaskSwapLeftEnds2s4
subtasks_available:	 ['EP_EGA.s2.MemoryArray[8]']
dependency_subtasks name:	 EP_EGA.s2.MemoryArray[8]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s2.MemoryArray[8]']
True
task.name: TaskSwapLeftEnds2s4  for node: s2 and memory returned for this: 8
dst, req_func:	 None None
s3 successful entanglement of memory with the node:  s2  <qntsim.components.bk_memory.Memory object at 0x142f3ce20> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s3.MemoryArray[3]
TaskEntGen_s3_s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts3s2
added a subtask to dependency  and map status is:	 [('TaskEntGen_s3_s2', ['EGA.s3.MemoryArray[3]'])]
checking eligibility of:	 TaskPurifyLefts3s2
subtasks_available:	 ['EGA.s3.MemoryArray[3]']
dependency_subtasks name:	 EGA.s3.MemoryArray[3]
inside ent_purify_action1
ReservationProtocol_s3_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s3.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s3.MemoryArray[3]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s3.MemoryArray[3]
TaskPurifyLefts3s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4s2
added a subtask to dependency  and map status is:	 [('TaskPurifyRights3s4', ['EP_EGA.s3.MemoryArray[8]']), ('TaskPurifyLefts3s2', ['EP_EGA.s3.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapMiddles4s2
subtasks_available:	 ['EP_EGA.s3.MemoryArray[8]', 'EP_EGA.s3.MemoryArray[3]']
dependency_subtasks name:	 EP_EGA.s3.MemoryArray[8]
dependency_subtasks name:	 EP_EGA.s3.MemoryArray[3]
inside task actin: left :a right: s4 and mid: s2 and self.own.name: s3
inside task actin: left_m :s2 right_m: s4 and mid: s2 and self.own.name: s3
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s3.MemoryArray[8]
purify_subtask_right:  EP_EGA.s3.MemoryArray[3]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s3.MemoryArray[8]', 'EP_EGA.s3.MemoryArray[3]']
True
Make use of newly created swap subtask :  ESA.s3.MemoryArray[3].s3.MemoryArray[8]
task.name: TaskSwapMiddles4s2  for node: s3 and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s2  delay:  500000000.0 and expected message recv time:  2011001075100
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x1489f80d0>
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2011001075100
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x1489f8160>
s3 successful entanglement of memory with the node:  s2  <qntsim.components.bk_memory.Memory object at 0x142f3cf40> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s3.MemoryArray[4]
TaskEntGen_s3_s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts3s2
added a subtask to dependency  and map status is:	 [('TaskEntGen_s3_s2', ['EGA.s3.MemoryArray[4]'])]
checking eligibility of:	 TaskPurifyLefts3s2
subtasks_available:	 ['EGA.s3.MemoryArray[4]']
dependency_subtasks name:	 EGA.s3.MemoryArray[4]
inside ent_purify_action1
ReservationProtocol_s3_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s3.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s3.MemoryArray[4]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s3.MemoryArray[4]
TaskPurifyLefts3s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4s2
added a subtask to dependency  and map status is:	 [('TaskPurifyRights3s4', []), ('TaskPurifyLefts3s2', ['EP_EGA.s3.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddles4s2
Not eligible yet because TaskPurifyRights3s4 does not have an instance to allocate
s2 successful entanglement of memory with the node:  s3  <qntsim.components.bk_memory.Memory object at 0x142f28fd0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s2.MemoryArray[9]
TaskEntGen_s2_s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights2s3
added a subtask to dependency  and map status is:	 [('TaskEntGen_s2_s3', ['EGA.s2.MemoryArray[9]'])]
checking eligibility of:	 TaskPurifyRights2s3
subtasks_available:	 ['EGA.s2.MemoryArray[9]']
dependency_subtasks name:	 EGA.s2.MemoryArray[9]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s2.MemoryArray[9]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s2.MemoryArray[9]
TaskPurifyRights2s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEnds2s4
added a subtask to dependency  and map status is:	 [('TaskPurifyRights2s3', ['EP_EGA.s2.MemoryArray[9]'])]
checking eligibility of:	 TaskSwapLeftEnds2s4
subtasks_available:	 ['EP_EGA.s2.MemoryArray[9]']
dependency_subtasks name:	 EP_EGA.s2.MemoryArray[9]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s2.MemoryArray[9]']
True
task.name: TaskSwapLeftEnds2s4  for node: s2 and memory returned for this: 9
dst, req_func:	 None None
s1 successful entanglement of memory with the node:  a  <qntsim.components.bk_memory.Memory object at 0x142ee6850> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[3]
TaskEntGen_s1_a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts1a
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_a', ['EGA.s1.MemoryArray[3]'])]
checking eligibility of:	 TaskPurifyLefts1a
subtasks_available:	 ['EGA.s1.MemoryArray[3]']
dependency_subtasks name:	 EGA.s1.MemoryArray[3]
inside ent_purify_action1
ReservationProtocol_s1_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s1.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[3]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[3]
TaskPurifyLefts1a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', ['EP_EGA.s1.MemoryArray[8]', 'EP_EGA.s1.MemoryArray[9]']), ('TaskPurifyLefts1a', ['EP_EGA.s1.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapMiddles2a
subtasks_available:	 ['EP_EGA.s1.MemoryArray[8]', 'EP_EGA.s1.MemoryArray[3]']
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[8]
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[3]
inside task actin: left :a right: s4 and mid: s2 and self.own.name: s1
inside task actin: left_m :a right_m: s2 and mid: s2 and self.own.name: s1
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s1.MemoryArray[8]
purify_subtask_right:  EP_EGA.s1.MemoryArray[3]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s1.MemoryArray[8]', 'EP_EGA.s1.MemoryArray[3]']
True
Make use of newly created swap subtask :  ESA.s1.MemoryArray[3].s1.MemoryArray[8]
task.name: TaskSwapMiddles2a  for node: s1 and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  a  delay:  500000000.0 and expected message recv time:  2011001100120
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x1489f8550>
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2011001100120
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x1489f85e0>
a successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x142f6c790> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.a.MemoryArray[3]
TaskEntGen_a_s1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightas1
added a subtask to dependency  and map status is:	 [('TaskEntGen_a_s1', ['EGA.a.MemoryArray[3]'])]
checking eligibility of:	 TaskPurifyRightas1
subtasks_available:	 ['EGA.a.MemoryArray[3]']
dependency_subtasks name:	 EGA.a.MemoryArray[3]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.a.MemoryArray[3]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.a.MemoryArray[3]
TaskPurifyRightas1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndas2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightas1', ['EP_EGA.a.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapLeftEndas2
subtasks_available:	 ['EP_EGA.a.MemoryArray[3]']
dependency_subtasks name:	 EP_EGA.a.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.a.MemoryArray[3]']
True
task.name: TaskSwapLeftEndas2  for node: a and memory returned for this: 3
dst, req_func:	 None None
s1 successful entanglement of memory with the node:  a  <qntsim.components.bk_memory.Memory object at 0x142ee6160> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s1.MemoryArray[4]
TaskEntGen_s1_a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts1a
added a subtask to dependency  and map status is:	 [('TaskEntGen_s1_a', ['EGA.s1.MemoryArray[4]'])]
checking eligibility of:	 TaskPurifyLefts1a
subtasks_available:	 ['EGA.s1.MemoryArray[4]']
dependency_subtasks name:	 EGA.s1.MemoryArray[4]
inside ent_purify_action1
ReservationProtocol_s1_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s1.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s1.MemoryArray[4]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s1.MemoryArray[4]
TaskPurifyLefts1a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles2a
added a subtask to dependency  and map status is:	 [('TaskPurifyRights1s2', ['EP_EGA.s1.MemoryArray[9]']), ('TaskPurifyLefts1a', ['EP_EGA.s1.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddles2a
subtasks_available:	 ['EP_EGA.s1.MemoryArray[9]', 'EP_EGA.s1.MemoryArray[4]']
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[9]
dependency_subtasks name:	 EP_EGA.s1.MemoryArray[4]
inside task actin: left :a right: s4 and mid: s2 and self.own.name: s1
inside task actin: left_m :a right_m: s2 and mid: s2 and self.own.name: s1
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s1.MemoryArray[9]
purify_subtask_right:  EP_EGA.s1.MemoryArray[4]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s1.MemoryArray[9]', 'EP_EGA.s1.MemoryArray[4]']
True
Make use of newly created swap subtask :  ESA.s1.MemoryArray[4].s1.MemoryArray[9]
task.name: TaskSwapMiddles2a  for node: s1 and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  a  delay:  500000000.0 and expected message recv time:  2011001100130
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x1489f8790>
TASK_MANAGER_REQ_MESG curr_node: s1  dest:  s2  delay:  500000000.0 and expected message recv time:  2011001100130
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x1489f88b0>
a successful entanglement of memory with the node:  s1  <qntsim.components.bk_memory.Memory object at 0x142f6c8b0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.a.MemoryArray[4]
TaskEntGen_a_s1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightas1
added a subtask to dependency  and map status is:	 [('TaskEntGen_a_s1', ['EGA.a.MemoryArray[4]'])]
checking eligibility of:	 TaskPurifyRightas1
subtasks_available:	 ['EGA.a.MemoryArray[4]']
dependency_subtasks name:	 EGA.a.MemoryArray[4]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.a.MemoryArray[4]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.a.MemoryArray[4]
TaskPurifyRightas1  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndas2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightas1', ['EP_EGA.a.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapLeftEndas2
subtasks_available:	 ['EP_EGA.a.MemoryArray[4]']
dependency_subtasks name:	 EP_EGA.a.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.a.MemoryArray[4]']
True
task.name: TaskSwapLeftEndas2  for node: a and memory returned for this: 4
dst, req_func:	 None None
s3 entanglement fail   s4 EGA.s3.MemoryArray[9] EGA.s4.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[9]
subtask failed:	 EGA.s3.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[9]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2011001112620
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489f8b80>
s4 entanglement fail   s3 EGA.s4.MemoryArray[4] EGA.s3.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[4]
subtask failed:	 EGA.s4.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[4]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
REQ_FUNC_RECV_TIME:  2010750900090  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s2
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 SWAPPING end protocol start with partner s2
REQ_FUNC_RECV_TIME:  2010750900100  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s2
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 SWAPPING end protocol start with partner s2
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 SWAPPING end protocol start with partner s3
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 SWAPPING end protocol start with partner s3
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 SWAPPING end protocol start with partner s3
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 SWAPPING end protocol start with partner s3
REQ_FUNC_RECV_TIME:  2011001100120  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s1
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 SWAPPING end protocol start with partner s1
REQ_FUNC_RECV_TIME:  2011001100130  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s1
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 SWAPPING end protocol start with partner s1
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[4] middle_s3_s4
s2 SWAPPING middle protocol start with ends a, s4
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s2.MemoryArray[0].s2.MemoryArray[6]
TaskSwapMiddles4a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
s2 SWAPPING middle protocol start with ends a, s4
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s2.MemoryArray[1].s2.MemoryArray[7]
TaskSwapMiddles4a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
s3 SWAPPING middle protocol start with ends s2, s4
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s3.MemoryArray[0].s3.MemoryArray[7]
TaskSwapMiddles4s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
s3 SWAPPING middle protocol start with ends s2, s4
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s3.MemoryArray[3].s3.MemoryArray[8]
TaskSwapMiddles4s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
s1 SWAPPING middle protocol start with ends a, s2
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s1.MemoryArray[3].s1.MemoryArray[8]
TaskSwapMiddles2a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Updated to raw after swapping
s1 SWAPPING middle protocol start with ends a, s2
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s1.MemoryArray[4].s1.MemoryArray[9]
TaskSwapMiddles2a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Updated to raw after swapping
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[9] middle_s3_s4
Entanglement swap successful between ('a', 's4.MemoryArray[0]')
########Subtask Succeeded############## subtask.protocol name ESB.a.MemoryArray[0]
TaskSwapLeftEndas4  Task flag value:  True
responder:  s4
Virtual links at : a are : {'s4': [<qntsim.resource_management.task_manager.SubTask object at 0x1489c6b80>]}
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('s4', 'a.MemoryArray[0]')
########Subtask Succeeded############## subtask.protocol name ESB.s4.MemoryArray[0]
TaskSwapRightEnds4a  Task flag value:  True
responder:  a
Virtual links at : s4 are : {'a': [<qntsim.resource_management.task_manager.SubTask object at 0x1489d6b80>]}
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('a', 's4.MemoryArray[1]')
########Subtask Succeeded############## subtask.protocol name ESB.a.MemoryArray[1]
TaskSwapLeftEndas4  Task flag value:  True
responder:  s4
Virtual links at : a are : {'s4': [<qntsim.resource_management.task_manager.SubTask object at 0x1489c6b80>, <qntsim.resource_management.task_manager.SubTask object at 0x1489b23a0>]}
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('s4', 'a.MemoryArray[1]')
########Subtask Succeeded############## subtask.protocol name ESB.s4.MemoryArray[1]
TaskSwapRightEnds4a  Task flag value:  True
responder:  a
Virtual links at : s4 are : {'a': [<qntsim.resource_management.task_manager.SubTask object at 0x1489d6b80>, <qntsim.resource_management.task_manager.SubTask object at 0x1489d61f0>]}
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('s2', 's4.MemoryArray[2]')
########Subtask Succeeded############## subtask.protocol name ESB.s2.MemoryArray[5]
TaskSwapLeftEnds2s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4a
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEnds2s4', ['ESB.s2.MemoryArray[5]']), ('TaskSwapRightEnds2a', ['ESB.s2.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapMiddles4a
subtasks_available:	 ['ESB.s2.MemoryArray[5]', 'ESB.s2.MemoryArray[2]']
dependency_subtasks name:	 ESB.s2.MemoryArray[5]
dependency_subtasks name:	 ESB.s2.MemoryArray[2]
inside task actin: left :a right: s4 and mid: s2 and self.own.name: s2
inside task actin: left_m :a right_m: s4 and mid: s2 and self.own.name: s2
inside ent_swap_action_middle
purify_subtask_left:  ESB.s2.MemoryArray[5]
purify_subtask_right:  ESB.s2.MemoryArray[2]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.s2.MemoryArray[5]', 'ESB.s2.MemoryArray[2]']
True
Make use of newly created swap subtask :  ESA.s2.MemoryArray[2].s2.MemoryArray[5]
task.name: TaskSwapMiddles4a  for node: s2 and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  a  delay:  500000000.0 and expected message recv time:  2012501075070
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x1489f8af0>
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s4  delay:  500000000.0 and expected message recv time:  2012501075070
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x1489f8a60>
Entanglement swap successful between ('s4', 's2.MemoryArray[5]')
########Subtask Succeeded############## subtask.protocol name ESB.s4.MemoryArray[2]
TaskSwapRightEnds4s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds4a
added a subtask to dependency  and map status is:	 [('TaskSwapRightEnds4s2', ['ESB.s4.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapRightEnds4a
subtasks_available:	 ['ESB.s4.MemoryArray[2]']
dependency_subtasks name:	 ESB.s4.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.s4.MemoryArray[2]']
True
task.name: TaskSwapRightEnds4a  for node: s4 and memory returned for this: 2
dst, req_func:	 None None
Entanglement swap successful between ('s2', 's4.MemoryArray[3]')
########Subtask Succeeded############## subtask.protocol name ESB.s2.MemoryArray[8]
TaskSwapLeftEnds2s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4a
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEnds2s4', ['ESB.s2.MemoryArray[8]']), ('TaskSwapRightEnds2a', [])]
checking eligibility of:	 TaskSwapMiddles4a
Not eligible yet because TaskSwapRightEnds2a does not have an instance to allocate
Entanglement swap successful between ('s4', 's2.MemoryArray[8]')
########Subtask Succeeded############## subtask.protocol name ESB.s4.MemoryArray[3]
TaskSwapRightEnds4s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds4a
added a subtask to dependency  and map status is:	 [('TaskSwapRightEnds4s2', ['ESB.s4.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapRightEnds4a
subtasks_available:	 ['ESB.s4.MemoryArray[3]']
dependency_subtasks name:	 ESB.s4.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.s4.MemoryArray[3]']
True
task.name: TaskSwapRightEnds4a  for node: s4 and memory returned for this: 3
dst, req_func:	 None None
Entanglement swap successful between ('a', 's2.MemoryArray[3]')
########Subtask Succeeded############## subtask.protocol name ESB.a.MemoryArray[3]
TaskSwapLeftEndas2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndas4
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndas2', ['ESB.a.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapLeftEndas4
subtasks_available:	 ['ESB.a.MemoryArray[3]']
dependency_subtasks name:	 ESB.a.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.a.MemoryArray[3]']
True
task.name: TaskSwapLeftEndas4  for node: a and memory returned for this: 3
dst, req_func:	 None None
Entanglement swap successful between ('s2', 'a.MemoryArray[3]')
########Subtask Succeeded############## subtask.protocol name ESB.s2.MemoryArray[3]
TaskSwapRightEnds2a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4a
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEnds2s4', ['ESB.s2.MemoryArray[8]']), ('TaskSwapRightEnds2a', ['ESB.s2.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapMiddles4a
subtasks_available:	 ['ESB.s2.MemoryArray[8]', 'ESB.s2.MemoryArray[3]']
dependency_subtasks name:	 ESB.s2.MemoryArray[8]
dependency_subtasks name:	 ESB.s2.MemoryArray[3]
inside task actin: left :a right: s4 and mid: s2 and self.own.name: s2
inside task actin: left_m :a right_m: s4 and mid: s2 and self.own.name: s2
inside ent_swap_action_middle
purify_subtask_left:  ESB.s2.MemoryArray[8]
purify_subtask_right:  ESB.s2.MemoryArray[3]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.s2.MemoryArray[8]', 'ESB.s2.MemoryArray[3]']
True
Make use of newly created swap subtask :  ESA.s2.MemoryArray[3].s2.MemoryArray[8]
task.name: TaskSwapMiddles4a  for node: s2 and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  a  delay:  500000000.0 and expected message recv time:  2012501100120
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x1489f8dc0>
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s4  delay:  500000000.0 and expected message recv time:  2012501100120
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x148a2a040>
Entanglement swap successful between ('a', 's2.MemoryArray[4]')
########Subtask Succeeded############## subtask.protocol name ESB.a.MemoryArray[4]
TaskSwapLeftEndas2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndas4
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndas2', ['ESB.a.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapLeftEndas4
subtasks_available:	 ['ESB.a.MemoryArray[4]']
dependency_subtasks name:	 ESB.a.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.a.MemoryArray[4]']
True
task.name: TaskSwapLeftEndas4  for node: a and memory returned for this: 4
dst, req_func:	 None None
Entanglement swap successful between ('s2', 'a.MemoryArray[4]')
########Subtask Succeeded############## subtask.protocol name ESB.s2.MemoryArray[4]
TaskSwapRightEnds2a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4a
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEnds2s4', []), ('TaskSwapRightEnds2a', ['ESB.s2.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddles4a
Not eligible yet because TaskSwapLeftEnds2s4 does not have an instance to allocate
flip circuit 49
flip circuit 64
s3 entanglement fail   s4 EGA.s3.MemoryArray[9] EGA.s4.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[9]
subtask failed:	 EGA.s3.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[9]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2012751287620
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a2a310>
s4 entanglement fail   s3 EGA.s4.MemoryArray[4] EGA.s3.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[4]
subtask failed:	 EGA.s4.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[4]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
REQ_FUNC_RECV_TIME:  2012501075070  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s2
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 SWAPPING end protocol start with partner s2
REQ_FUNC_RECV_TIME:  2012501100120  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s2
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 SWAPPING end protocol start with partner s2
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[4] middle_s3_s4
s2 SWAPPING middle protocol start with ends a, s4
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s2.MemoryArray[2].s2.MemoryArray[5]
TaskSwapMiddles4a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
s2 SWAPPING middle protocol start with ends a, s4
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s2.MemoryArray[3].s2.MemoryArray[8]
TaskSwapMiddles4a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[9] middle_s3_s4
Entanglement swap successful between ('a', 's4.MemoryArray[2]')
########Subtask Succeeded############## subtask.protocol name ESB.a.MemoryArray[2]
TaskSwapLeftEndas4  Task flag value:  True
responder:  s4
Virtual links at : a are : {'s4': [<qntsim.resource_management.task_manager.SubTask object at 0x1489c6b80>, <qntsim.resource_management.task_manager.SubTask object at 0x1489b23a0>, <qntsim.resource_management.task_manager.SubTask object at 0x1489d9550>]}
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('s4', 'a.MemoryArray[2]')
########Subtask Succeeded############## subtask.protocol name ESB.s4.MemoryArray[2]
TaskSwapRightEnds4a  Task flag value:  True
responder:  a
Virtual links at : s4 are : {'a': [<qntsim.resource_management.task_manager.SubTask object at 0x1489d6b80>, <qntsim.resource_management.task_manager.SubTask object at 0x1489d61f0>, <qntsim.resource_management.task_manager.SubTask object at 0x148a0c5e0>]}
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('a', 's4.MemoryArray[3]')
########Subtask Succeeded############## subtask.protocol name ESB.a.MemoryArray[3]
TaskSwapLeftEndas4  Task flag value:  True
responder:  s4
Virtual links at : a are : {'s4': [<qntsim.resource_management.task_manager.SubTask object at 0x1489c6b80>, <qntsim.resource_management.task_manager.SubTask object at 0x1489b23a0>, <qntsim.resource_management.task_manager.SubTask object at 0x1489d9550>, <qntsim.resource_management.task_manager.SubTask object at 0x148a0c640>]}
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('s4', 'a.MemoryArray[3]')
########Subtask Succeeded############## subtask.protocol name ESB.s4.MemoryArray[3]
TaskSwapRightEnds4a  Task flag value:  True
responder:  a
Virtual links at : s4 are : {'a': [<qntsim.resource_management.task_manager.SubTask object at 0x1489d6b80>, <qntsim.resource_management.task_manager.SubTask object at 0x1489d61f0>, <qntsim.resource_management.task_manager.SubTask object at 0x148a0c5e0>, <qntsim.resource_management.task_manager.SubTask object at 0x148a0c370>]}
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
flip circuit 64
flip circuit 49
s4 entanglement fail   s3 EGA.s4.MemoryArray[4] EGA.s3.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[4]
subtask failed:	 EGA.s4.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[4]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
s3 entanglement fail   s4 EGA.s3.MemoryArray[9] EGA.s4.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[9]
subtask failed:	 EGA.s3.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[9]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2014501475130
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a2a430>
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[4] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[9] middle_s3_s4
flip circuit 64
flip circuit 49
s3 entanglement fail   s4 EGA.s3.MemoryArray[9] EGA.s4.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[9]
subtask failed:	 EGA.s3.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[9]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2016251662640
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a2a700>
s4 entanglement fail   s3 EGA.s4.MemoryArray[4] EGA.s3.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[4]
subtask failed:	 EGA.s4.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[4]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[4] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[9] middle_s3_s4
flip circuit 49
flip circuit 64
s3 entanglement fail   s4 EGA.s3.MemoryArray[9] EGA.s4.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[9]
subtask failed:	 EGA.s3.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[9]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2018001850140
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a2a670>
s4 entanglement fail   s3 EGA.s4.MemoryArray[4] EGA.s3.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[4]
subtask failed:	 EGA.s4.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[4]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[4] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[9] middle_s3_s4
flip circuit 49
flip circuit 64
s3 entanglement fail   s4 EGA.s3.MemoryArray[9] EGA.s4.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[9]
subtask failed:	 EGA.s3.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[9]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2019752037650
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1489f8e50>
s4 entanglement fail   s3 EGA.s4.MemoryArray[4] EGA.s3.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[4]
subtask failed:	 EGA.s4.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[4]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[4] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[9] middle_s3_s4
flip circuit 64
flip circuit 49
s3 entanglement fail   s4 EGA.s3.MemoryArray[9] EGA.s4.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[9]
subtask failed:	 EGA.s3.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[9]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2021502225150
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a2a3a0>
s4 entanglement fail   s3 EGA.s4.MemoryArray[4] EGA.s3.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[4]
subtask failed:	 EGA.s4.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[4]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[4] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[9] middle_s3_s4
flip circuit 64
flip circuit 49
s3 entanglement fail   s4 EGA.s3.MemoryArray[9] EGA.s4.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[9]
subtask failed:	 EGA.s3.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[9]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2023252412660
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a2a550>
s4 entanglement fail   s3 EGA.s4.MemoryArray[4] EGA.s3.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[4]
subtask failed:	 EGA.s4.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[4]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[4] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[9] middle_s3_s4
flip circuit 49
flip circuit 64
s3 entanglement fail   s4 EGA.s3.MemoryArray[9] EGA.s4.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[9]
subtask failed:	 EGA.s3.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[9]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2025002587660
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a2a1f0>
s4 entanglement fail   s3 EGA.s4.MemoryArray[4] EGA.s3.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[4]
subtask failed:	 EGA.s4.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[4]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[4] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[9] middle_s3_s4
flip circuit 49
flip circuit 64
s3 entanglement fail   s4 EGA.s3.MemoryArray[9] EGA.s4.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s3.MemoryArray[9]
subtask failed:	 EGA.s3.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s3.MemoryArray[9]']
task.name: TaskEntGen_s3_s4  for node: s3 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2026752775160
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a2a160>
s4 entanglement fail   s3 EGA.s4.MemoryArray[4] EGA.s3.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[4]
subtask failed:	 EGA.s4.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[4]']
task.name: TaskEntGen_s4_s3  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 Generation protocol start with partner s3 EGA.s4.MemoryArray[4] middle_s3_s4
s3 Generation protocol start with partner s4 EGA.s3.MemoryArray[9] middle_s3_s4
flip circuit 64
flip circuit 49
s3 successful entanglement of memory with the node:  s4  <qntsim.components.bk_memory.Memory object at 0x142f43520> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s3.MemoryArray[9]
TaskEntGen_s3_s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights3s4
added a subtask to dependency  and map status is:	 [('TaskEntGen_s3_s4', ['EGA.s3.MemoryArray[9]'])]
checking eligibility of:	 TaskPurifyRights3s4
subtasks_available:	 ['EGA.s3.MemoryArray[9]']
dependency_subtasks name:	 EGA.s3.MemoryArray[9]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s3.MemoryArray[9]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s3.MemoryArray[9]
TaskPurifyRights3s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4s2
added a subtask to dependency  and map status is:	 [('TaskPurifyRights3s4', ['EP_EGA.s3.MemoryArray[9]']), ('TaskPurifyLefts3s2', ['EP_EGA.s3.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddles4s2
subtasks_available:	 ['EP_EGA.s3.MemoryArray[9]', 'EP_EGA.s3.MemoryArray[4]']
dependency_subtasks name:	 EP_EGA.s3.MemoryArray[9]
dependency_subtasks name:	 EP_EGA.s3.MemoryArray[4]
inside task actin: left :a right: s4 and mid: s2 and self.own.name: s3
inside task actin: left_m :s2 right_m: s4 and mid: s2 and self.own.name: s3
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s3.MemoryArray[9]
purify_subtask_right:  EP_EGA.s3.MemoryArray[4]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s3.MemoryArray[9]', 'EP_EGA.s3.MemoryArray[4]']
True
Make use of newly created swap subtask :  ESA.s3.MemoryArray[4].s3.MemoryArray[9]
task.name: TaskSwapMiddles4s2  for node: s3 and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s2  delay:  500000000.0 and expected message recv time:  2028502962670
dst, req_func:	 s2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x148a2a4c0>
TASK_MANAGER_REQ_MESG curr_node: s3  dest:  s4  delay:  500000000.0 and expected message recv time:  2028502962670
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x148a2a280>
s4 successful entanglement of memory with the node:  s3  <qntsim.components.bk_memory.Memory object at 0x142f55430> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s4.MemoryArray[4]
TaskEntGen_s4_s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLefts4s3
added a subtask to dependency  and map status is:	 [('TaskEntGen_s4_s3', ['EGA.s4.MemoryArray[4]'])]
checking eligibility of:	 TaskPurifyLefts4s3
subtasks_available:	 ['EGA.s4.MemoryArray[4]']
dependency_subtasks name:	 EGA.s4.MemoryArray[4]
inside ent_purify_action1
ReservationProtocol_s4_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.s4.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s4.MemoryArray[4]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s4.MemoryArray[4]
TaskPurifyLefts4s3  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds4s2
added a subtask to dependency  and map status is:	 [('TaskPurifyLefts4s3', ['EP_EGA.s4.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapRightEnds4s2
subtasks_available:	 ['EP_EGA.s4.MemoryArray[4]']
dependency_subtasks name:	 EP_EGA.s4.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s4.MemoryArray[4]']
True
task.name: TaskSwapRightEnds4s2  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
push message at  s2  msg.receiver:  ManagerType.ResourceManager
s2 SWAPPING end protocol start with partner s3
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 SWAPPING end protocol start with partner s3
s3 SWAPPING middle protocol start with ends s2, s4
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s3.MemoryArray[4].s3.MemoryArray[9]
TaskSwapMiddles4s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('s2', 's4.MemoryArray[4]')
########Subtask Succeeded############## subtask.protocol name ESB.s2.MemoryArray[9]
TaskSwapLeftEnds2s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddles4a
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEnds2s4', ['ESB.s2.MemoryArray[9]']), ('TaskSwapRightEnds2a', ['ESB.s2.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddles4a
subtasks_available:	 ['ESB.s2.MemoryArray[9]', 'ESB.s2.MemoryArray[4]']
dependency_subtasks name:	 ESB.s2.MemoryArray[9]
dependency_subtasks name:	 ESB.s2.MemoryArray[4]
inside task actin: left :a right: s4 and mid: s2 and self.own.name: s2
inside task actin: left_m :a right_m: s4 and mid: s2 and self.own.name: s2
inside ent_swap_action_middle
purify_subtask_left:  ESB.s2.MemoryArray[9]
purify_subtask_right:  ESB.s2.MemoryArray[4]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.s2.MemoryArray[9]', 'ESB.s2.MemoryArray[4]']
True
Make use of newly created swap subtask :  ESA.s2.MemoryArray[4].s2.MemoryArray[9]
task.name: TaskSwapMiddles4a  for node: s2 and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  a  delay:  500000000.0 and expected message recv time:  2030002962670
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x148a2aa60>
TASK_MANAGER_REQ_MESG curr_node: s2  dest:  s4  delay:  500000000.0 and expected message recv time:  2030002962670
dst, req_func:	 s4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x148a2a9d0>
Entanglement swap successful between ('s4', 's2.MemoryArray[9]')
########Subtask Succeeded############## subtask.protocol name ESB.s4.MemoryArray[4]
TaskSwapRightEnds4s2  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEnds4a
added a subtask to dependency  and map status is:	 [('TaskSwapRightEnds4s2', ['ESB.s4.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapRightEnds4a
subtasks_available:	 ['ESB.s4.MemoryArray[4]']
dependency_subtasks name:	 ESB.s4.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.s4.MemoryArray[4]']
True
task.name: TaskSwapRightEnds4a  for node: s4 and memory returned for this: 4
dst, req_func:	 None None
REQ_FUNC_RECV_TIME:  2030002962670  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s2
push message at  s4  msg.receiver:  ManagerType.ResourceManager
s4 SWAPPING end protocol start with partner s2
s2 SWAPPING middle protocol start with ends a, s4
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s2.MemoryArray[4].s2.MemoryArray[9]
TaskSwapMiddles4a  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('a', 's4.MemoryArray[4]')
########Subtask Succeeded############## subtask.protocol name ESB.a.MemoryArray[4]
TaskSwapLeftEndas4  Task flag value:  True
responder:  s4
Virtual links at : a are : {'s4': [<qntsim.resource_management.task_manager.SubTask object at 0x1489c6b80>, <qntsim.resource_management.task_manager.SubTask object at 0x1489b23a0>, <qntsim.resource_management.task_manager.SubTask object at 0x1489d9550>, <qntsim.resource_management.task_manager.SubTask object at 0x148a0c640>, <qntsim.resource_management.task_manager.SubTask object at 0x148a30040>]}
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('s4', 'a.MemoryArray[4]')
########Subtask Succeeded############## subtask.protocol name ESB.s4.MemoryArray[4]
TaskSwapRightEnds4a  Task flag value:  True
responder:  a
Virtual links at : s4 are : {'a': [<qntsim.resource_management.task_manager.SubTask object at 0x1489d6b80>, <qntsim.resource_management.task_manager.SubTask object at 0x1489d61f0>, <qntsim.resource_management.task_manager.SubTask object at 0x148a0c5e0>, <qntsim.resource_management.task_manager.SubTask object at 0x148a0c370>, <qntsim.resource_management.task_manager.SubTask object at 0x148aa6d90>]}
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
a memories
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|   Index | Source node   | Entangled Node   |   Fidelity |   Entanglement Time |   Expire Time | State     |
+=========+===============+==================+============+=====================+===============+===========+
|       0 | a             | s4               |   0.447555 |             2.01175 |       1.01175 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       1 | a             | s4               |   0.447555 |             2.01175 |       1.01175 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       2 | a             | s4               |   0.447555 |             2.0135  |       1.0135  | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       3 | a             | s4               |   0.447555 |             2.0135  |       1.0135  | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       4 | a             | s4               |   0.447555 |             2.031   |       1.031   | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
b memories
+---------+---------------+------------------+------------+---------------------+---------------+---------+
| Index   | Source node   | Entangled Node   | Fidelity   | Entanglement Time   | Expire Time   | State   |
+=========+===============+==================+============+=====================+===============+=========+
+---------+---------------+------------------+------------+---------------------+---------------+---------+
s1 memories
+---------+---------------+------------------+------------+---------------------+---------------+---------+
| Index   | Source node   | Entangled Node   | Fidelity   | Entanglement Time   | Expire Time   | State   |
+=========+===============+==================+============+=====================+===============+=========+
+---------+---------------+------------------+------------+---------------------+---------------+---------+
s2 memories
+---------+---------------+------------------+------------+---------------------+---------------+---------+
| Index   | Source node   | Entangled Node   | Fidelity   | Entanglement Time   | Expire Time   | State   |
+=========+===============+==================+============+=====================+===============+=========+
+---------+---------------+------------------+------------+---------------------+---------------+---------+
s3 memories
+---------+---------------+------------------+------------+---------------------+---------------+---------+
| Index   | Source node   | Entangled Node   | Fidelity   | Entanglement Time   | Expire Time   | State   |
+=========+===============+==================+============+=====================+===============+=========+
+---------+---------------+------------------+------------+---------------------+---------------+---------+
s4 memories
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|   Index | Source node   | Entangled Node   |   Fidelity |   Entanglement Time |   Expire Time | State     |
+=========+===============+==================+============+=====================+===============+===========+
|       0 | s4            | a                |   0.447555 |             2.01175 |       1.01175 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       1 | s4            | a                |   0.447555 |             2.01175 |       1.01175 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       2 | s4            | a                |   0.447555 |             2.0135  |       1.0135  | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       3 | s4            | a                |   0.447555 |             2.0135  |       1.0135  | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       4 | s4            | a                |   0.447555 |             2.031   |       1.031   | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
create request
user request id ,tp_id ,src,path,des,size  1 0 a [] b 5 5
start a
Virtual neighbor s4 ['a', 's1', 's2', 's3', 's4', 'b'] {'s4': 5}
request src , resp , curr node a b a INITIATED
start s4
request src , resp , curr node a b s4 INITIATED
start b
destination b
setting dependencies
To maintain the virtual link indices
len of res 1
inside has virtual reservation a b
len of res 1
inside has virtual reservation a b
To maintain the virtual link indices
len of res 1
inside has virtual reservation a b
len of res 1
inside has virtual reservation a b
To maintain the virtual link indices
len of res 1
inside has virtual reservation a b
len of res 1
inside has virtual reservation a b
To maintain the virtual link indices
len of res 1
inside has virtual reservation a b
len of res 1
inside has virtual reservation a b
To maintain the virtual link indices
len of res 1
inside has virtual reservation a b
len of res 1
inside has virtual reservation a b
last_virtual_index -1
----------Enatanglement Generation Task----------
Current node in Entanglement generation b
Path-------- ['a', 's4', 'b']
Reservation------ a b 1
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_b_s4   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x1482f0430>
depedencies for task:   TaskPurifyLeftbs4   are   ['TaskEntGen_b_s4']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x154e7ddc0>: []}
Swap at node: s4 left: a and right: b
order of swaps:  [(('a', 'b', 's4'), 2)]
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x148a2ac10>
depedencies for task:   TaskSwapRightEndba   are   ['TaskPurifyLeftbs4']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x154e7ddf0>: []}
ENT_SWAP_RIGHT at:  b
tasks created at b
setting dependencies
To maintain the virtual link indices
len of res 2
inside has virtual reservation a b
inside has virtual reservation a s4
res.isvirtual True
To maintain the virtual link indices
len of res 2
inside has virtual reservation a b
inside has virtual reservation a s4
res.isvirtual True
To maintain the virtual link indices
len of res 2
inside has virtual reservation a b
inside has virtual reservation a s4
res.isvirtual True
To maintain the virtual link indices
len of res 2
inside has virtual reservation a b
inside has virtual reservation a s4
res.isvirtual True
To maintain the virtual link indices
len of res 2
inside has virtual reservation a b
inside has virtual reservation a s4
res.isvirtual True
To maintain the virtual link indices
len of res 1
inside has virtual reservation a b
len of res 1
inside has virtual reservation a b
To maintain the virtual link indices
len of res 1
inside has virtual reservation a b
len of res 1
inside has virtual reservation a b
To maintain the virtual link indices
len of res 1
inside has virtual reservation a b
len of res 1
inside has virtual reservation a b
To maintain the virtual link indices
len of res 1
inside has virtual reservation a b
len of res 1
inside has virtual reservation a b
To maintain the virtual link indices
len of res 1
inside has virtual reservation a b
len of res 1
inside has virtual reservation a b
last_virtual_index 4
----------Enatanglement Generation Task----------
Current node in Entanglement generation s4
Path-------- ['a', 's4', 'b']
Reservation------ a b 1
current node, mem_indices, available_memory_indices:  s4 [5, 6, 7, 8, 9] [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_s4_b   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x148a2af70>
depedencies for task:   TaskPurifyRights4b   are   ['TaskEntGen_s4_b']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x154e88bb0>: []}
Swap at node: s4 left: a and right: b
order of swaps:  [(('a', 'b', 's4'), 2)]
while setting task action: left :a right: b and mid: s4 and self.own.name: s4
at mid of swap node:  s4 self.node.virtual_links:  {'a': [<qntsim.resource_management.task_manager.SubTask object at 0x1489d6b80>, <qntsim.resource_management.task_manager.SubTask object at 0x1489d61f0>, <qntsim.resource_management.task_manager.SubTask object at 0x148a0c5e0>, <qntsim.resource_management.task_manager.SubTask object at 0x148a0c370>, <qntsim.resource_management.task_manager.SubTask object at 0x148aa6d90>]}
right task from VL: TaskPurifyRights4b
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle at 0x148a2a820>
depedencies for task:   TaskSwapMiddleba   are   ['TaskPurifyRights4b', 'TaskSwapRightEnds4a']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x154e88be0>: [], <qntsim.resource_management.task_manager.Task object at 0x142fab8b0>: []}
ENT_SWAP_MIDDLE at:  s4
last_left_task   :  TaskPurifyRights4b
last_right_task   :  TaskSwapRightEnds4a
Task name:	 TaskSwapMiddleba
added a subtask to dependency  and map status is:	 [('TaskPurifyRights4b', []), ('TaskSwapRightEnds4a', ['ESB.s4.MemoryArray[0]'])]
Task name:	 TaskSwapMiddleba
added a subtask to dependency  and map status is:	 [('TaskPurifyRights4b', []), ('TaskSwapRightEnds4a', ['ESB.s4.MemoryArray[0]', 'ESB.s4.MemoryArray[1]'])]
Task name:	 TaskSwapMiddleba
added a subtask to dependency  and map status is:	 [('TaskPurifyRights4b', []), ('TaskSwapRightEnds4a', ['ESB.s4.MemoryArray[0]', 'ESB.s4.MemoryArray[1]', 'ESB.s4.MemoryArray[2]'])]
Task name:	 TaskSwapMiddleba
added a subtask to dependency  and map status is:	 [('TaskPurifyRights4b', []), ('TaskSwapRightEnds4a', ['ESB.s4.MemoryArray[0]', 'ESB.s4.MemoryArray[1]', 'ESB.s4.MemoryArray[2]', 'ESB.s4.MemoryArray[3]'])]
Task name:	 TaskSwapMiddleba
added a subtask to dependency  and map status is:	 [('TaskPurifyRights4b', []), ('TaskSwapRightEnds4a', ['ESB.s4.MemoryArray[0]', 'ESB.s4.MemoryArray[1]', 'ESB.s4.MemoryArray[2]', 'ESB.s4.MemoryArray[3]', 'ESB.s4.MemoryArray[4]'])]
tasks created at  a
setting dependencies
To maintain the virtual link indices
len of res 2
inside has virtual reservation a b
inside has virtual reservation a s4
res.isvirtual True
To maintain the virtual link indices
len of res 2
inside has virtual reservation a b
inside has virtual reservation a s4
res.isvirtual True
To maintain the virtual link indices
len of res 2
inside has virtual reservation a b
inside has virtual reservation a s4
res.isvirtual True
To maintain the virtual link indices
len of res 2
inside has virtual reservation a b
inside has virtual reservation a s4
res.isvirtual True
To maintain the virtual link indices
len of res 2
inside has virtual reservation a b
inside has virtual reservation a s4
res.isvirtual True
last_virtual_index 4
----------Enatanglement Generation Task----------
Current node in Entanglement generation a
Path-------- ['a', 's4', 'b']
Reservation------ a b 1
Swap at node: s4 left: a and right: b
order of swaps:  [(('a', 'b', 's4'), 2)]
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x148a2aca0>
depedencies for task:   TaskSwapLeftEndab   are   ['TaskSwapLeftEndas4']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142fcb8b0>: []}
ENT_SWAP_LEFT at:  a
Task name:	 TaskSwapLeftEndab
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndas4', ['ESB.a.MemoryArray[0]'])]
Task name:	 TaskSwapLeftEndab
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndas4', ['ESB.a.MemoryArray[0]', 'ESB.a.MemoryArray[1]'])]
Task name:	 TaskSwapLeftEndab
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndas4', ['ESB.a.MemoryArray[0]', 'ESB.a.MemoryArray[1]', 'ESB.a.MemoryArray[2]'])]
Task name:	 TaskSwapLeftEndab
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndas4', ['ESB.a.MemoryArray[0]', 'ESB.a.MemoryArray[1]', 'ESB.a.MemoryArray[2]', 'ESB.a.MemoryArray[3]'])]
Task name:	 TaskSwapLeftEndab
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndas4', ['ESB.a.MemoryArray[0]', 'ESB.a.MemoryArray[1]', 'ESB.a.MemoryArray[2]', 'ESB.a.MemoryArray[3]', 'ESB.a.MemoryArray[4]'])]
initiate_tasks running for node:  a
Trying to initiate task:  TaskEntGen_a_s1 and its already run flag is:  True
Trying to initiate task:  TaskSwapLeftEndab and its can_run_on_init flag is:  True
checking eligibility of:	 TaskSwapLeftEndab
subtasks_available:	 ['ESB.a.MemoryArray[0]']
dependency_subtasks name:	 ESB.a.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.a.MemoryArray[0]']
True
task.name: TaskSwapLeftEndab  for node: a and memory returned for this: 0
dst, req_func:	 None None
checking eligibility of:	 TaskSwapLeftEndab
subtasks_available:	 ['ESB.a.MemoryArray[1]']
dependency_subtasks name:	 ESB.a.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.a.MemoryArray[1]']
True
task.name: TaskSwapLeftEndab  for node: a and memory returned for this: 1
dst, req_func:	 None None
checking eligibility of:	 TaskSwapLeftEndab
subtasks_available:	 ['ESB.a.MemoryArray[2]']
dependency_subtasks name:	 ESB.a.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.a.MemoryArray[2]']
True
task.name: TaskSwapLeftEndab  for node: a and memory returned for this: 2
dst, req_func:	 None None
checking eligibility of:	 TaskSwapLeftEndab
subtasks_available:	 ['ESB.a.MemoryArray[3]']
dependency_subtasks name:	 ESB.a.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.a.MemoryArray[3]']
True
task.name: TaskSwapLeftEndab  for node: a and memory returned for this: 3
dst, req_func:	 None None
checking eligibility of:	 TaskSwapLeftEndab
subtasks_available:	 ['ESB.a.MemoryArray[4]']
dependency_subtasks name:	 ESB.a.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.a.MemoryArray[4]']
True
task.name: TaskSwapLeftEndab  for node: a and memory returned for this: 4
dst, req_func:	 None None
checking eligibility of:	 TaskSwapLeftEndab
Not eligible yet because TaskSwapLeftEndas4 does not have an instance to allocate
initiate_tasks running for node:  b
Trying to initiate task:  TaskEntGen_b_s4 and its already run flag is:  False
task name in action:  TaskEntGen_b_s4
len(subtasks):	 5
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 0
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 1
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 2
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 3
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 4
dst, req_func:	 None None
initiate_tasks running for node:  s4
Trying to initiate task:  TaskEntGen_s4_s3 and its already run flag is:  True
Trying to initiate task:  TaskEntGen_s4_b and its already run flag is:  False
inside EG right task action:   TaskEntGen_s4_b
len(subtasks):	 5
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e91310>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e913a0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e91430>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e914c0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e91550>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[0] middle_s4_b
REQ_FUNC_RECV_TIME:  5000500000000  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[1] middle_s4_b
REQ_FUNC_RECV_TIME:  5000500000000  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[2] middle_s4_b
REQ_FUNC_RECV_TIME:  5000500000000  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[3] middle_s4_b
REQ_FUNC_RECV_TIME:  5000500000000  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[4] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[5] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[6] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[7] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[8] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[9] middle_s4_b
flip circuit 65
flip circuit 90
flip circuit 91
flip circuit 66
flip circuit 92
flip circuit 67
flip circuit 68
flip circuit 93
flip circuit 69
flip circuit 94
b entanglement fail   s4 EGA.b.MemoryArray[0] EGA.s4.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[0]
subtask failed:	 EGA.b.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[0]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 0
dst, req_func:	 None None
s4 entanglement fail   b EGA.s4.MemoryArray[5] EGA.b.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[5]
subtask failed:	 EGA.s4.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[5]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5002750187510
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e919d0>
b entanglement fail   s4 EGA.b.MemoryArray[1] EGA.s4.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[1]
subtask failed:	 EGA.b.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[1]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 1
dst, req_func:	 None None
s4 entanglement fail   b EGA.s4.MemoryArray[6] EGA.b.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[6]
subtask failed:	 EGA.s4.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[6]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5002750187520
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e91940>
b entanglement fail   s4 EGA.b.MemoryArray[2] EGA.s4.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[2]
subtask failed:	 EGA.b.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[2]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 2
dst, req_func:	 None None
s4 entanglement fail   b EGA.s4.MemoryArray[7] EGA.b.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[7]
subtask failed:	 EGA.s4.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[7]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5002750187530
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e91790>
s4 entanglement fail   b EGA.s4.MemoryArray[8] EGA.b.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[8]
subtask failed:	 EGA.s4.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[8]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5002750187540
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x148a2ad30>
b entanglement fail   s4 EGA.b.MemoryArray[3] EGA.s4.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[3]
subtask failed:	 EGA.b.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[3]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 3
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[4] EGA.s4.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[4]
subtask failed:	 EGA.b.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[4]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 4
dst, req_func:	 None None
s4 entanglement fail   b EGA.s4.MemoryArray[9] EGA.b.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[9]
subtask failed:	 EGA.s4.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[9]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5002750187550
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e915e0>
REQ_FUNC_RECV_TIME:  5002750187510  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[0] middle_s4_b
REQ_FUNC_RECV_TIME:  5002750187520  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[1] middle_s4_b
REQ_FUNC_RECV_TIME:  5002750187530  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[2] middle_s4_b
REQ_FUNC_RECV_TIME:  5002750187540  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[3] middle_s4_b
REQ_FUNC_RECV_TIME:  5002750187550  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[4] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[5] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[6] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[7] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[8] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[9] middle_s4_b
flip circuit 90
flip circuit 65
flip circuit 66
flip circuit 91
flip circuit 67
flip circuit 92
flip circuit 93
flip circuit 68
flip circuit 69
flip circuit 94
s4 entanglement fail   b EGA.s4.MemoryArray[5] EGA.b.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[5]
subtask failed:	 EGA.s4.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[5]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5005000362520
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e91670>
s4 entanglement fail   b EGA.s4.MemoryArray[6] EGA.b.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[6]
subtask failed:	 EGA.s4.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[6]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5005000362520
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e91a60>
s4 entanglement fail   b EGA.s4.MemoryArray[7] EGA.b.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[7]
subtask failed:	 EGA.s4.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[7]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5005000362520
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e91b80>
s4 entanglement fail   b EGA.s4.MemoryArray[8] EGA.b.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[8]
subtask failed:	 EGA.s4.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[8]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5005000362520
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e91c10>
s4 entanglement fail   b EGA.s4.MemoryArray[9] EGA.b.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[9]
subtask failed:	 EGA.s4.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[9]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5005000362520
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e91af0>
b entanglement fail   s4 EGA.b.MemoryArray[0] EGA.s4.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[0]
subtask failed:	 EGA.b.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[0]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 0
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[1] EGA.s4.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[1]
subtask failed:	 EGA.b.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[1]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 1
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[2] EGA.s4.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[2]
subtask failed:	 EGA.b.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[2]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 2
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[3] EGA.s4.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[3]
subtask failed:	 EGA.b.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[3]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 3
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[4] EGA.s4.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[4]
subtask failed:	 EGA.b.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[4]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 4
dst, req_func:	 None None
REQ_FUNC_RECV_TIME:  5005000362520  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[0] middle_s4_b
REQ_FUNC_RECV_TIME:  5005000362520  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[1] middle_s4_b
REQ_FUNC_RECV_TIME:  5005000362520  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[2] middle_s4_b
REQ_FUNC_RECV_TIME:  5005000362520  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[3] middle_s4_b
REQ_FUNC_RECV_TIME:  5005000362520  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[4] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[5] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[6] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[7] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[8] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[9] middle_s4_b
flip circuit 65
flip circuit 90
flip circuit 66
flip circuit 91
flip circuit 67
flip circuit 92
flip circuit 68
flip circuit 93
flip circuit 94
flip circuit 69
s4 entanglement fail   b EGA.s4.MemoryArray[6] EGA.b.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[6]
subtask failed:	 EGA.s4.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[6]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5007250537550
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e91f70>
s4 entanglement fail   b EGA.s4.MemoryArray[7] EGA.b.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[7]
subtask failed:	 EGA.s4.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[7]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5007250537550
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e91820>
s4 entanglement fail   b EGA.s4.MemoryArray[8] EGA.b.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[8]
subtask failed:	 EGA.s4.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[8]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5007250537550
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e91e50>
s4 entanglement fail   b EGA.s4.MemoryArray[9] EGA.b.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[9]
subtask failed:	 EGA.s4.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[9]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5007250537550
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e91d30>
b entanglement fail   s4 EGA.b.MemoryArray[1] EGA.s4.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[1]
subtask failed:	 EGA.b.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[1]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 1
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[2] EGA.s4.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[2]
subtask failed:	 EGA.b.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[2]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 2
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[3] EGA.s4.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[3]
subtask failed:	 EGA.b.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[3]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 3
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[4] EGA.s4.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[4]
subtask failed:	 EGA.b.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[4]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 4
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[0] EGA.s4.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[0]
subtask failed:	 EGA.b.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[0]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 0
dst, req_func:	 None None
s4 entanglement fail   b EGA.s4.MemoryArray[5] EGA.b.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[5]
subtask failed:	 EGA.s4.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[5]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5007250550030
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e91ee0>
REQ_FUNC_RECV_TIME:  5007250537550  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[1] middle_s4_b
REQ_FUNC_RECV_TIME:  5007250537550  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[2] middle_s4_b
REQ_FUNC_RECV_TIME:  5007250537550  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[3] middle_s4_b
REQ_FUNC_RECV_TIME:  5007250537550  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[4] middle_s4_b
REQ_FUNC_RECV_TIME:  5007250550030  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[0] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[6] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[7] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[8] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[9] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[5] middle_s4_b
flip circuit 66
flip circuit 91
flip circuit 67
flip circuit 92
flip circuit 68
flip circuit 93
flip circuit 94
flip circuit 69
flip circuit 65
flip circuit 90
b entanglement fail   s4 EGA.b.MemoryArray[1] EGA.s4.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[1]
subtask failed:	 EGA.b.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[1]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 1
dst, req_func:	 None None
s4 entanglement fail   b EGA.s4.MemoryArray[6] EGA.b.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[6]
subtask failed:	 EGA.s4.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[6]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5009500725060
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e91dc0>
b entanglement fail   s4 EGA.b.MemoryArray[2] EGA.s4.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[2]
subtask failed:	 EGA.b.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[2]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 2
dst, req_func:	 None None
s4 entanglement fail   b EGA.s4.MemoryArray[7] EGA.b.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[7]
subtask failed:	 EGA.s4.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[7]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5009500725070
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x154e91ca0>
b entanglement fail   s4 EGA.b.MemoryArray[3] EGA.s4.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[3]
subtask failed:	 EGA.b.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[3]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 3
dst, req_func:	 None None
s4 entanglement fail   b EGA.s4.MemoryArray[8] EGA.b.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[8]
subtask failed:	 EGA.s4.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[8]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5009500725080
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156eec0d0>
b entanglement fail   s4 EGA.b.MemoryArray[4] EGA.s4.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[4]
subtask failed:	 EGA.b.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[4]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 4
dst, req_func:	 None None
s4 entanglement fail   b EGA.s4.MemoryArray[9] EGA.b.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[9]
subtask failed:	 EGA.s4.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[9]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5009500725090
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156eec040>
s4 entanglement fail   b EGA.s4.MemoryArray[5] EGA.b.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[5]
subtask failed:	 EGA.s4.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[5]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5009500737540
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156eec1f0>
b entanglement fail   s4 EGA.b.MemoryArray[0] EGA.s4.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[0]
subtask failed:	 EGA.b.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[0]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 0
dst, req_func:	 None None
REQ_FUNC_RECV_TIME:  5009500725060  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[1] middle_s4_b
REQ_FUNC_RECV_TIME:  5009500725070  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[2] middle_s4_b
REQ_FUNC_RECV_TIME:  5009500725080  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[3] middle_s4_b
REQ_FUNC_RECV_TIME:  5009500725090  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[4] middle_s4_b
REQ_FUNC_RECV_TIME:  5009500737540  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[0] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[6] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[7] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[8] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[9] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[5] middle_s4_b
flip circuit 91
flip circuit 66
flip circuit 92
flip circuit 67
flip circuit 68
flip circuit 93
flip circuit 94
flip circuit 69
flip circuit 65
flip circuit 90
s4 entanglement fail   b EGA.s4.MemoryArray[6] EGA.b.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[6]
subtask failed:	 EGA.s4.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[6]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5011750900090
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156eec310>
s4 entanglement fail   b EGA.s4.MemoryArray[7] EGA.b.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[7]
subtask failed:	 EGA.s4.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[7]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5011750900090
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156eec160>
s4 entanglement fail   b EGA.s4.MemoryArray[8] EGA.b.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[8]
subtask failed:	 EGA.s4.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[8]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5011750900090
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156eec430>
s4 entanglement fail   b EGA.s4.MemoryArray[9] EGA.b.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[9]
subtask failed:	 EGA.s4.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[9]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5011750900090
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156eec4c0>
b entanglement fail   s4 EGA.b.MemoryArray[1] EGA.s4.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[1]
subtask failed:	 EGA.b.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[1]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 1
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[2] EGA.s4.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[2]
subtask failed:	 EGA.b.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[2]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 2
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[3] EGA.s4.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[3]
subtask failed:	 EGA.b.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[3]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 3
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[4] EGA.s4.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[4]
subtask failed:	 EGA.b.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[4]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 4
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[0] EGA.s4.MemoryArray[5]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[0]
subtask failed:	 EGA.b.MemoryArray[0]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[0]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 0
dst, req_func:	 None None
s4 entanglement fail   b EGA.s4.MemoryArray[5] EGA.b.MemoryArray[0]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[5]
subtask failed:	 EGA.s4.MemoryArray[5]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[5]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5011750925050
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156eec3a0>
REQ_FUNC_RECV_TIME:  5011750900090  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[1] middle_s4_b
REQ_FUNC_RECV_TIME:  5011750900090  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[2] middle_s4_b
REQ_FUNC_RECV_TIME:  5011750900090  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[3] middle_s4_b
REQ_FUNC_RECV_TIME:  5011750900090  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[4] middle_s4_b
REQ_FUNC_RECV_TIME:  5011750925050  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[0] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[6] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[7] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[8] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[9] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[5] middle_s4_b
flip circuit 91
flip circuit 66
flip circuit 92
flip circuit 67
flip circuit 93
flip circuit 68
flip circuit 69
flip circuit 94
flip circuit 90
flip circuit 65
s4 entanglement fail   b EGA.s4.MemoryArray[6] EGA.b.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[6]
subtask failed:	 EGA.s4.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[6]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5014001075100
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156eec790>
s4 entanglement fail   b EGA.s4.MemoryArray[7] EGA.b.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[7]
subtask failed:	 EGA.s4.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[7]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5014001075100
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156eec670>
s4 entanglement fail   b EGA.s4.MemoryArray[8] EGA.b.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[8]
subtask failed:	 EGA.s4.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[8]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5014001075100
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156eec700>
s4 entanglement fail   b EGA.s4.MemoryArray[9] EGA.b.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[9]
subtask failed:	 EGA.s4.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[9]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5014001075100
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156eec280>
b entanglement fail   s4 EGA.b.MemoryArray[1] EGA.s4.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[1]
subtask failed:	 EGA.b.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[1]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 1
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[2] EGA.s4.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[2]
subtask failed:	 EGA.b.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[2]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 2
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[3] EGA.s4.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[3]
subtask failed:	 EGA.b.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[3]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 3
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[4] EGA.s4.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[4]
subtask failed:	 EGA.b.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[4]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 4
dst, req_func:	 None None
s4 successful entanglement of memory with the node:  b  <qntsim.components.bk_memory.Memory object at 0x142f55520> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s4.MemoryArray[5]
TaskEntGen_s4_b  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights4b
added a subtask to dependency  and map status is:	 [('TaskEntGen_s4_b', ['EGA.s4.MemoryArray[5]'])]
checking eligibility of:	 TaskPurifyRights4b
subtasks_available:	 ['EGA.s4.MemoryArray[5]']
dependency_subtasks name:	 EGA.s4.MemoryArray[5]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s4.MemoryArray[5]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s4.MemoryArray[5]
TaskPurifyRights4b  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddleba
added a subtask to dependency  and map status is:	 [('TaskPurifyRights4b', ['EP_EGA.s4.MemoryArray[5]']), ('TaskSwapRightEnds4a', ['ESB.s4.MemoryArray[0]', 'ESB.s4.MemoryArray[1]', 'ESB.s4.MemoryArray[2]', 'ESB.s4.MemoryArray[3]', 'ESB.s4.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddleba
subtasks_available:	 ['EP_EGA.s4.MemoryArray[5]', 'ESB.s4.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.s4.MemoryArray[5]
dependency_subtasks name:	 ESB.s4.MemoryArray[0]
inside task actin: left :a right: b and mid: s4 and self.own.name: s4
inside task actin: left_m :a right_m: b and mid: s4 and self.own.name: s4
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s4.MemoryArray[5]
purify_subtask_right:  ESB.s4.MemoryArray[0]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s4.MemoryArray[5]', 'ESB.s4.MemoryArray[0]']
True
Make use of newly created swap subtask :  ESA.s4.MemoryArray[0].s4.MemoryArray[5]
task.name: TaskSwapMiddleba  for node: s4 and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  a  delay:  500000000.0 and expected message recv time:  5014001112560
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x156eec5e0>
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5014001112560
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x156eec8b0>
b successful entanglement of memory with the node:  s4  <qntsim.components.bk_memory.Memory object at 0x142f767c0> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.b.MemoryArray[0]
TaskEntGen_b_s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftbs4
added a subtask to dependency  and map status is:	 [('TaskEntGen_b_s4', ['EGA.b.MemoryArray[0]'])]
checking eligibility of:	 TaskPurifyLeftbs4
subtasks_available:	 ['EGA.b.MemoryArray[0]']
dependency_subtasks name:	 EGA.b.MemoryArray[0]
inside ent_purify_action1
ReservationProtocol_b_R1
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.b.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.b.MemoryArray[0]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.b.MemoryArray[0]
TaskPurifyLeftbs4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndba
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftbs4', ['EP_EGA.b.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapRightEndba
subtasks_available:	 ['EP_EGA.b.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.b.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.b.MemoryArray[0]']
True
task.name: TaskSwapRightEndba  for node: b and memory returned for this: 0
dst, req_func:	 None None
REQ_FUNC_RECV_TIME:  5014001075100  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[1] middle_s4_b
REQ_FUNC_RECV_TIME:  5014001075100  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[2] middle_s4_b
REQ_FUNC_RECV_TIME:  5014001075100  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[3] middle_s4_b
REQ_FUNC_RECV_TIME:  5014001075100  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[4] middle_s4_b
REQ_FUNC_RECV_TIME:  5014001112560  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s4
REQ_FUNC_RECV_TIME:  5014001112560  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b SWAPPING end protocol start with partner s4
s4 Generation protocol start with partner b EGA.s4.MemoryArray[6] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[7] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[8] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[9] middle_s4_b
s4 SWAPPING middle protocol start with ends a, b
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s4.MemoryArray[0].s4.MemoryArray[5]
TaskSwapMiddleba  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('a', 'b.MemoryArray[0]')
########Subtask Succeeded############## subtask.protocol name ESB.a.MemoryArray[0]
TaskSwapLeftEndab  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('b', 'a.MemoryArray[0]')
########Subtask Succeeded############## subtask.protocol name ESB.b.MemoryArray[0]
TaskSwapRightEndba  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
flip circuit 66
flip circuit 91
flip circuit 67
flip circuit 92
flip circuit 68
flip circuit 93
flip circuit 69
flip circuit 94
s4 entanglement fail   b EGA.s4.MemoryArray[6] EGA.b.MemoryArray[1]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[6]
subtask failed:	 EGA.s4.MemoryArray[6]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[6]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5016251250110
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156eecee0>
s4 entanglement fail   b EGA.s4.MemoryArray[7] EGA.b.MemoryArray[2]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[7]
subtask failed:	 EGA.s4.MemoryArray[7]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[7]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5016251250110
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156eeca60>
s4 entanglement fail   b EGA.s4.MemoryArray[8] EGA.b.MemoryArray[3]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[8]
subtask failed:	 EGA.s4.MemoryArray[8]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[8]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5016251250110
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156eecd30>
s4 entanglement fail   b EGA.s4.MemoryArray[9] EGA.b.MemoryArray[4]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.s4.MemoryArray[9]
subtask failed:	 EGA.s4.MemoryArray[9]
initial dependencies for this subtask:	 ['EGA.s4.MemoryArray[9]']
task.name: TaskEntGen_s4_b  for node: s4 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5016251250110
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156eecc10>
b entanglement fail   s4 EGA.b.MemoryArray[1] EGA.s4.MemoryArray[6]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[1]
subtask failed:	 EGA.b.MemoryArray[1]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[1]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 1
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[2] EGA.s4.MemoryArray[7]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[2]
subtask failed:	 EGA.b.MemoryArray[2]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[2]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 2
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[3] EGA.s4.MemoryArray[8]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[3]
subtask failed:	 EGA.b.MemoryArray[3]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[3]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 3
dst, req_func:	 None None
b entanglement fail   s4 EGA.b.MemoryArray[4] EGA.s4.MemoryArray[9]
_entanglement_fail:  len(self.subtask.protocols):  0
reached inside on_complete subtask failure section
########Subtask Failed############## : EGA.b.MemoryArray[4]
subtask failed:	 EGA.b.MemoryArray[4]
initial dependencies for this subtask:	 ['EGA.b.MemoryArray[4]']
task.name: TaskEntGen_b_s4  for node: b and memory returned for this: 4
dst, req_func:	 None None
REQ_FUNC_RECV_TIME:  5016251250110  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[1] middle_s4_b
REQ_FUNC_RECV_TIME:  5016251250110  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[2] middle_s4_b
REQ_FUNC_RECV_TIME:  5016251250110  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[3] middle_s4_b
REQ_FUNC_RECV_TIME:  5016251250110  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b Generation protocol start with partner s4 EGA.b.MemoryArray[4] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[6] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[7] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[8] middle_s4_b
s4 Generation protocol start with partner b EGA.s4.MemoryArray[9] middle_s4_b
flip circuit 66
flip circuit 91
flip circuit 67
flip circuit 92
flip circuit 68
flip circuit 93
flip circuit 69
flip circuit 94
s4 successful entanglement of memory with the node:  b  <qntsim.components.bk_memory.Memory object at 0x142f55610> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s4.MemoryArray[6]
TaskEntGen_s4_b  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights4b
added a subtask to dependency  and map status is:	 [('TaskEntGen_s4_b', ['EGA.s4.MemoryArray[6]'])]
checking eligibility of:	 TaskPurifyRights4b
subtasks_available:	 ['EGA.s4.MemoryArray[6]']
dependency_subtasks name:	 EGA.s4.MemoryArray[6]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s4.MemoryArray[6]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s4.MemoryArray[6]
TaskPurifyRights4b  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddleba
added a subtask to dependency  and map status is:	 [('TaskPurifyRights4b', ['EP_EGA.s4.MemoryArray[6]']), ('TaskSwapRightEnds4a', ['ESB.s4.MemoryArray[1]', 'ESB.s4.MemoryArray[2]', 'ESB.s4.MemoryArray[3]', 'ESB.s4.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddleba
subtasks_available:	 ['EP_EGA.s4.MemoryArray[6]', 'ESB.s4.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.s4.MemoryArray[6]
dependency_subtasks name:	 ESB.s4.MemoryArray[1]
inside task actin: left :a right: b and mid: s4 and self.own.name: s4
inside task actin: left_m :a right_m: b and mid: s4 and self.own.name: s4
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s4.MemoryArray[6]
purify_subtask_right:  ESB.s4.MemoryArray[1]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s4.MemoryArray[6]', 'ESB.s4.MemoryArray[1]']
True
Make use of newly created swap subtask :  ESA.s4.MemoryArray[1].s4.MemoryArray[6]
task.name: TaskSwapMiddleba  for node: s4 and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  a  delay:  500000000.0 and expected message recv time:  5018501437620
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x156eecca0>
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5018501437620
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x156eecb80>
b successful entanglement of memory with the node:  s4  <qntsim.components.bk_memory.Memory object at 0x142f76940> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.b.MemoryArray[1]
TaskEntGen_b_s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftbs4
added a subtask to dependency  and map status is:	 [('TaskEntGen_b_s4', ['EGA.b.MemoryArray[1]'])]
checking eligibility of:	 TaskPurifyLeftbs4
subtasks_available:	 ['EGA.b.MemoryArray[1]']
dependency_subtasks name:	 EGA.b.MemoryArray[1]
inside ent_purify_action1
ReservationProtocol_b_R1
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.b.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.b.MemoryArray[1]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.b.MemoryArray[1]
TaskPurifyLeftbs4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndba
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftbs4', ['EP_EGA.b.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapRightEndba
subtasks_available:	 ['EP_EGA.b.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.b.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.b.MemoryArray[1]']
True
task.name: TaskSwapRightEndba  for node: b and memory returned for this: 1
dst, req_func:	 None None
b successful entanglement of memory with the node:  s4  <qntsim.components.bk_memory.Memory object at 0x142f76a30> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.b.MemoryArray[2]
TaskEntGen_b_s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftbs4
added a subtask to dependency  and map status is:	 [('TaskEntGen_b_s4', ['EGA.b.MemoryArray[2]'])]
checking eligibility of:	 TaskPurifyLeftbs4
subtasks_available:	 ['EGA.b.MemoryArray[2]']
dependency_subtasks name:	 EGA.b.MemoryArray[2]
inside ent_purify_action1
ReservationProtocol_b_R1
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.b.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.b.MemoryArray[2]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.b.MemoryArray[2]
TaskPurifyLeftbs4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndba
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftbs4', ['EP_EGA.b.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapRightEndba
subtasks_available:	 ['EP_EGA.b.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.b.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.b.MemoryArray[2]']
True
task.name: TaskSwapRightEndba  for node: b and memory returned for this: 2
dst, req_func:	 None None
s4 successful entanglement of memory with the node:  b  <qntsim.components.bk_memory.Memory object at 0x142f55730> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s4.MemoryArray[7]
TaskEntGen_s4_b  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights4b
added a subtask to dependency  and map status is:	 [('TaskEntGen_s4_b', ['EGA.s4.MemoryArray[7]'])]
checking eligibility of:	 TaskPurifyRights4b
subtasks_available:	 ['EGA.s4.MemoryArray[7]']
dependency_subtasks name:	 EGA.s4.MemoryArray[7]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s4.MemoryArray[7]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s4.MemoryArray[7]
TaskPurifyRights4b  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddleba
added a subtask to dependency  and map status is:	 [('TaskPurifyRights4b', ['EP_EGA.s4.MemoryArray[7]']), ('TaskSwapRightEnds4a', ['ESB.s4.MemoryArray[2]', 'ESB.s4.MemoryArray[3]', 'ESB.s4.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddleba
subtasks_available:	 ['EP_EGA.s4.MemoryArray[7]', 'ESB.s4.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.s4.MemoryArray[7]
dependency_subtasks name:	 ESB.s4.MemoryArray[2]
inside task actin: left :a right: b and mid: s4 and self.own.name: s4
inside task actin: left_m :a right_m: b and mid: s4 and self.own.name: s4
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s4.MemoryArray[7]
purify_subtask_right:  ESB.s4.MemoryArray[2]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s4.MemoryArray[7]', 'ESB.s4.MemoryArray[2]']
True
Make use of newly created swap subtask :  ESA.s4.MemoryArray[2].s4.MemoryArray[7]
task.name: TaskSwapMiddleba  for node: s4 and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  a  delay:  500000000.0 and expected message recv time:  5018501437630
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x156f97280>
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5018501437630
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x156f97310>
s4 successful entanglement of memory with the node:  b  <qntsim.components.bk_memory.Memory object at 0x142f55820> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s4.MemoryArray[8]
TaskEntGen_s4_b  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights4b
added a subtask to dependency  and map status is:	 [('TaskEntGen_s4_b', ['EGA.s4.MemoryArray[8]'])]
checking eligibility of:	 TaskPurifyRights4b
subtasks_available:	 ['EGA.s4.MemoryArray[8]']
dependency_subtasks name:	 EGA.s4.MemoryArray[8]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s4.MemoryArray[8]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s4.MemoryArray[8]
TaskPurifyRights4b  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddleba
added a subtask to dependency  and map status is:	 [('TaskPurifyRights4b', ['EP_EGA.s4.MemoryArray[8]']), ('TaskSwapRightEnds4a', ['ESB.s4.MemoryArray[3]', 'ESB.s4.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddleba
subtasks_available:	 ['EP_EGA.s4.MemoryArray[8]', 'ESB.s4.MemoryArray[3]']
dependency_subtasks name:	 EP_EGA.s4.MemoryArray[8]
dependency_subtasks name:	 ESB.s4.MemoryArray[3]
inside task actin: left :a right: b and mid: s4 and self.own.name: s4
inside task actin: left_m :a right_m: b and mid: s4 and self.own.name: s4
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s4.MemoryArray[8]
purify_subtask_right:  ESB.s4.MemoryArray[3]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s4.MemoryArray[8]', 'ESB.s4.MemoryArray[3]']
True
Make use of newly created swap subtask :  ESA.s4.MemoryArray[3].s4.MemoryArray[8]
task.name: TaskSwapMiddleba  for node: s4 and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  a  delay:  500000000.0 and expected message recv time:  5018501437640
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x156f974c0>
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5018501437640
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x156f97550>
b successful entanglement of memory with the node:  s4  <qntsim.components.bk_memory.Memory object at 0x142f76b50> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.b.MemoryArray[3]
TaskEntGen_b_s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftbs4
added a subtask to dependency  and map status is:	 [('TaskEntGen_b_s4', ['EGA.b.MemoryArray[3]'])]
checking eligibility of:	 TaskPurifyLeftbs4
subtasks_available:	 ['EGA.b.MemoryArray[3]']
dependency_subtasks name:	 EGA.b.MemoryArray[3]
inside ent_purify_action1
ReservationProtocol_b_R1
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.b.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.b.MemoryArray[3]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.b.MemoryArray[3]
TaskPurifyLeftbs4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndba
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftbs4', ['EP_EGA.b.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapRightEndba
subtasks_available:	 ['EP_EGA.b.MemoryArray[3]']
dependency_subtasks name:	 EP_EGA.b.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.b.MemoryArray[3]']
True
task.name: TaskSwapRightEndba  for node: b and memory returned for this: 3
dst, req_func:	 None None
s4 successful entanglement of memory with the node:  b  <qntsim.components.bk_memory.Memory object at 0x142f55940> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.s4.MemoryArray[9]
TaskEntGen_s4_b  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRights4b
added a subtask to dependency  and map status is:	 [('TaskEntGen_s4_b', ['EGA.s4.MemoryArray[9]'])]
checking eligibility of:	 TaskPurifyRights4b
subtasks_available:	 ['EGA.s4.MemoryArray[9]']
dependency_subtasks name:	 EGA.s4.MemoryArray[9]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.s4.MemoryArray[9]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.s4.MemoryArray[9]
TaskPurifyRights4b  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddleba
added a subtask to dependency  and map status is:	 [('TaskPurifyRights4b', ['EP_EGA.s4.MemoryArray[9]']), ('TaskSwapRightEnds4a', ['ESB.s4.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddleba
subtasks_available:	 ['EP_EGA.s4.MemoryArray[9]', 'ESB.s4.MemoryArray[4]']
dependency_subtasks name:	 EP_EGA.s4.MemoryArray[9]
dependency_subtasks name:	 ESB.s4.MemoryArray[4]
inside task actin: left :a right: b and mid: s4 and self.own.name: s4
inside task actin: left_m :a right_m: b and mid: s4 and self.own.name: s4
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.s4.MemoryArray[9]
purify_subtask_right:  ESB.s4.MemoryArray[4]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.s4.MemoryArray[9]', 'ESB.s4.MemoryArray[4]']
True
Make use of newly created swap subtask :  ESA.s4.MemoryArray[4].s4.MemoryArray[9]
task.name: TaskSwapMiddleba  for node: s4 and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  a  delay:  500000000.0 and expected message recv time:  5018501437650
dst, req_func:	 a <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x156f97820>
TASK_MANAGER_REQ_MESG curr_node: s4  dest:  b  delay:  500000000.0 and expected message recv time:  5018501437650
dst, req_func:	 b <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x156f978b0>
b successful entanglement of memory with the node:  s4  <qntsim.components.bk_memory.Memory object at 0x142f76c70> 
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.b.MemoryArray[4]
TaskEntGen_b_s4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftbs4
added a subtask to dependency  and map status is:	 [('TaskEntGen_b_s4', ['EGA.b.MemoryArray[4]'])]
checking eligibility of:	 TaskPurifyLeftbs4
subtasks_available:	 ['EGA.b.MemoryArray[4]']
dependency_subtasks name:	 EGA.b.MemoryArray[4]
inside ent_purify_action1
ReservationProtocol_b_R1
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.b.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.b.MemoryArray[4]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.b.MemoryArray[4]
TaskPurifyLeftbs4  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndba
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftbs4', ['EP_EGA.b.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapRightEndba
subtasks_available:	 ['EP_EGA.b.MemoryArray[4]']
dependency_subtasks name:	 EP_EGA.b.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.b.MemoryArray[4]']
True
task.name: TaskSwapRightEndba  for node: b and memory returned for this: 4
dst, req_func:	 None None
REQ_FUNC_RECV_TIME:  5018501437620  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s4
REQ_FUNC_RECV_TIME:  5018501437620  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b SWAPPING end protocol start with partner s4
REQ_FUNC_RECV_TIME:  5018501437630  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s4
REQ_FUNC_RECV_TIME:  5018501437630  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b SWAPPING end protocol start with partner s4
REQ_FUNC_RECV_TIME:  5018501437640  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s4
REQ_FUNC_RECV_TIME:  5018501437640  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b SWAPPING end protocol start with partner s4
REQ_FUNC_RECV_TIME:  5018501437650  at node:  a
push message at  a  msg.receiver:  ManagerType.ResourceManager
a SWAPPING end protocol start with partner s4
REQ_FUNC_RECV_TIME:  5018501437650  at node:  b
push message at  b  msg.receiver:  ManagerType.ResourceManager
b SWAPPING end protocol start with partner s4
s4 SWAPPING middle protocol start with ends a, b
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s4.MemoryArray[1].s4.MemoryArray[6]
TaskSwapMiddleba  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
s4 SWAPPING middle protocol start with ends a, b
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s4.MemoryArray[2].s4.MemoryArray[7]
TaskSwapMiddleba  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
s4 SWAPPING middle protocol start with ends a, b
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s4.MemoryArray[3].s4.MemoryArray[8]
TaskSwapMiddleba  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
s4 SWAPPING middle protocol start with ends a, b
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.s4.MemoryArray[4].s4.MemoryArray[9]
TaskSwapMiddleba  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('a', 'b.MemoryArray[1]')
########Subtask Succeeded############## subtask.protocol name ESB.a.MemoryArray[1]
TaskSwapLeftEndab  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('b', 'a.MemoryArray[1]')
########Subtask Succeeded############## subtask.protocol name ESB.b.MemoryArray[1]
TaskSwapRightEndba  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('a', 'b.MemoryArray[2]')
########Subtask Succeeded############## subtask.protocol name ESB.a.MemoryArray[2]
TaskSwapLeftEndab  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('b', 'a.MemoryArray[2]')
########Subtask Succeeded############## subtask.protocol name ESB.b.MemoryArray[2]
TaskSwapRightEndba  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('a', 'b.MemoryArray[3]')
########Subtask Succeeded############## subtask.protocol name ESB.a.MemoryArray[3]
TaskSwapLeftEndab  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('b', 'a.MemoryArray[3]')
########Subtask Succeeded############## subtask.protocol name ESB.b.MemoryArray[3]
TaskSwapRightEndba  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('a', 'b.MemoryArray[4]')
########Subtask Succeeded############## subtask.protocol name ESB.a.MemoryArray[4]
TaskSwapLeftEndab  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Entanglement swap successful between ('b', 'a.MemoryArray[4]')
########Subtask Succeeded############## subtask.protocol name ESB.b.MemoryArray[4]
TaskSwapRightEndba  Task flag value:  False
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
a memories
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|   Index | Source node   | Entangled Node   |   Fidelity |   Entanglement Time |   Expire Time | State     |
+=========+===============+==================+============+=====================+===============+===========+
|       0 | a             | b                |   0.361401 |              5.015  |        4.015  | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       1 | a             | b                |   0.361401 |              5.0195 |        4.0195 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       2 | a             | b                |   0.361401 |              5.0195 |        4.0195 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       3 | a             | b                |   0.361401 |              5.0195 |        4.0195 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       4 | a             | b                |   0.361401 |              5.0195 |        4.0195 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
b memories
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|   Index | Source node   | Entangled Node   |   Fidelity |   Entanglement Time |   Expire Time | State     |
+=========+===============+==================+============+=====================+===============+===========+
|       0 | b             | a                |   0.361401 |              5.015  |        4.015  | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       1 | b             | a                |   0.361401 |              5.0195 |        4.0195 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       2 | b             | a                |   0.361401 |              5.0195 |        4.0195 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       3 | b             | a                |   0.361401 |              5.0195 |        4.0195 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
|       4 | b             | a                |   0.361401 |              5.0195 |        4.0195 | ENTANGLED |
+---------+---------------+------------------+------------+---------------------+---------------+-----------+
s1 memories
+---------+---------------+------------------+------------+---------------------+---------------+---------+
| Index   | Source node   | Entangled Node   | Fidelity   | Entanglement Time   | Expire Time   | State   |
+=========+===============+==================+============+=====================+===============+=========+
+---------+---------------+------------------+------------+---------------------+---------------+---------+
s2 memories
+---------+---------------+------------------+------------+---------------------+---------------+---------+
| Index   | Source node   | Entangled Node   | Fidelity   | Entanglement Time   | Expire Time   | State   |
+=========+===============+==================+============+=====================+===============+=========+
+---------+---------------+------------------+------------+---------------------+---------------+---------+
s3 memories
+---------+---------------+------------------+------------+---------------------+---------------+---------+
| Index   | Source node   | Entangled Node   | Fidelity   | Entanglement Time   | Expire Time   | State   |
+=========+===============+==================+============+=====================+===============+=========+
+---------+---------------+------------------+------------+---------------------+---------------+---------+
s4 memories
+---------+---------------+------------------+------------+---------------------+---------------+---------+
| Index   | Source node   | Entangled Node   | Fidelity   | Entanglement Time   | Expire Time   | State   |
+=========+===============+==================+============+=====================+===============+=========+
+---------+---------------+------------------+------------+---------------------+---------------+---------+
