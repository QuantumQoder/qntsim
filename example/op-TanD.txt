---------------rtup-------------- v0
---------------rtup-------------- v1
---------------rtup-------------- v2
---------------rtup-------------- v3
---------------rtup-------------- v4
---------------rtup-------------- v5
---------------rtup-------------- v6
---------------rtup-------------- v7
user request  v0 [] v7
50 v0 <qntsim.network_management.request.Request object at 0x14295f280> memory available
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 0)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 1)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 2)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 3)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 4)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 5)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 6)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 7)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 8)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 9)
source  v0 v0
neighbour list of 1st node  None
marker nodes ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7'] v7
temp path ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7'] v0
dst 1 v1
msg.msg_typed RRPMsgType.RESERVE <qntsim.network_management.request.Message object at 0x142bbcb80>
message type RRPMsgType.RESERVE <qntsim.topology.node.QuantumRouter object at 0x14295f0d0> <qntsim.topology.node.QuantumRouter object at 0x14295f0d0>
message type RRPMsgType.RESERVE <qntsim.topology.node.QuantumRouter object at 0x14295f0d0> <qntsim.topology.node.QuantumRouter object at 0x14295f0d0> v1
received at  v1 {'request': <qntsim.network_management.request.Request object at 0x14295f280>}
process request payload <qntsim.network_management.request.Request object at 0x14295f280>
in request temp_path,marker <qntsim.network_management.request.Request object at 0x14295f280> v1 ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7'] v7
50 v1 <qntsim.network_management.request.Request object at 0x14295f280> memory available
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 0)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 1)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 2)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 3)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 4)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 5)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 6)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 7)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 8)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 9)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 10)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 11)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 12)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 13)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 14)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 15)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 16)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 17)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 18)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 19)
source  v0 v1
temp path ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7'] v1
dst 3 v2
msg.msg_typed RRPMsgType.RESERVE <qntsim.network_management.request.Message object at 0x142bd7be0>
message type RRPMsgType.RESERVE <qntsim.topology.node.QuantumRouter object at 0x142b2cac0> <qntsim.topology.node.QuantumRouter object at 0x142b2cac0>
message type RRPMsgType.RESERVE <qntsim.topology.node.QuantumRouter object at 0x142b2cac0> <qntsim.topology.node.QuantumRouter object at 0x142b2cac0> v2
received at  v2 {'request': <qntsim.network_management.request.Request object at 0x14295f280>}
process request payload <qntsim.network_management.request.Request object at 0x14295f280>
in request temp_path,marker <qntsim.network_management.request.Request object at 0x14295f280> v2 ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7'] v7
50 v2 <qntsim.network_management.request.Request object at 0x14295f280> memory available
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 0)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 1)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 2)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 3)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 4)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 5)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 6)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 7)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 8)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 9)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 10)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 11)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 12)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 13)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 14)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 15)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 16)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 17)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 18)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 19)
source  v0 v2
temp path ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7'] v2
dst 3 v3
msg.msg_typed RRPMsgType.RESERVE <qntsim.network_management.request.Message object at 0x142bd7cd0>
message type RRPMsgType.RESERVE <qntsim.topology.node.QuantumRouter object at 0x142b47460> <qntsim.topology.node.QuantumRouter object at 0x142b47460>
message type RRPMsgType.RESERVE <qntsim.topology.node.QuantumRouter object at 0x142b47460> <qntsim.topology.node.QuantumRouter object at 0x142b47460> v3
received at  v3 {'request': <qntsim.network_management.request.Request object at 0x14295f280>}
process request payload <qntsim.network_management.request.Request object at 0x14295f280>
in request temp_path,marker <qntsim.network_management.request.Request object at 0x14295f280> v3 ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7'] v7
50 v3 <qntsim.network_management.request.Request object at 0x14295f280> memory available
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 0)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 1)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 2)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 3)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 4)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 5)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 6)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 7)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 8)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 9)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 10)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 11)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 12)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 13)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 14)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 15)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 16)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 17)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 18)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 19)
source  v0 v3
temp path ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7'] v3
dst 3 v4
msg.msg_typed RRPMsgType.RESERVE <qntsim.network_management.request.Message object at 0x142be9b80>
message type RRPMsgType.RESERVE <qntsim.topology.node.QuantumRouter object at 0x142b53dc0> <qntsim.topology.node.QuantumRouter object at 0x142b53dc0>
message type RRPMsgType.RESERVE <qntsim.topology.node.QuantumRouter object at 0x142b53dc0> <qntsim.topology.node.QuantumRouter object at 0x142b53dc0> v4
received at  v4 {'request': <qntsim.network_management.request.Request object at 0x14295f280>}
process request payload <qntsim.network_management.request.Request object at 0x14295f280>
in request temp_path,marker <qntsim.network_management.request.Request object at 0x14295f280> v4 ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7'] v7
50 v4 <qntsim.network_management.request.Request object at 0x14295f280> memory available
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 0)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 1)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 2)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 3)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 4)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 5)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 6)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 7)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 8)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 9)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 10)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 11)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 12)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 13)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 14)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 15)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 16)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 17)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 18)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 19)
source  v0 v4
temp path ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7'] v4
dst 3 v5
msg.msg_typed RRPMsgType.RESERVE <qntsim.network_management.request.Message object at 0x142be9ca0>
message type RRPMsgType.RESERVE <qntsim.topology.node.QuantumRouter object at 0x142b68760> <qntsim.topology.node.QuantumRouter object at 0x142b68760>
message type RRPMsgType.RESERVE <qntsim.topology.node.QuantumRouter object at 0x142b68760> <qntsim.topology.node.QuantumRouter object at 0x142b68760> v5
received at  v5 {'request': <qntsim.network_management.request.Request object at 0x14295f280>}
process request payload <qntsim.network_management.request.Request object at 0x14295f280>
in request temp_path,marker <qntsim.network_management.request.Request object at 0x14295f280> v5 ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7'] v7
50 v5 <qntsim.network_management.request.Request object at 0x14295f280> memory available
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 0)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 1)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 2)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 3)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 4)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 5)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 6)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 7)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 8)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 9)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 10)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 11)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 12)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 13)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 14)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 15)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 16)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 17)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 18)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 19)
source  v0 v5
temp path ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7'] v5
dst 3 v6
msg.msg_typed RRPMsgType.RESERVE <qntsim.network_management.request.Message object at 0x142bfcb80>
message type RRPMsgType.RESERVE <qntsim.topology.node.QuantumRouter object at 0x142b79100> <qntsim.topology.node.QuantumRouter object at 0x142b79100>
message type RRPMsgType.RESERVE <qntsim.topology.node.QuantumRouter object at 0x142b79100> <qntsim.topology.node.QuantumRouter object at 0x142b79100> v6
received at  v6 {'request': <qntsim.network_management.request.Request object at 0x14295f280>}
process request payload <qntsim.network_management.request.Request object at 0x14295f280>
in request temp_path,marker <qntsim.network_management.request.Request object at 0x14295f280> v6 ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7'] v7
50 v6 <qntsim.network_management.request.Request object at 0x14295f280> memory available
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 0)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 1)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 2)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 3)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 4)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 5)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 6)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 7)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 8)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 9)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 10)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 11)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 12)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 13)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 14)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 15)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 16)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 17)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 18)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19)] (0, 19)
source  v0 v6
temp path ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7'] v6
dst 3 v7
msg.msg_typed RRPMsgType.RESERVE <qntsim.network_management.request.Message object at 0x142bfcca0>
message type RRPMsgType.RESERVE <qntsim.topology.node.QuantumRouter object at 0x142b88a60> <qntsim.topology.node.QuantumRouter object at 0x142b88a60>
message type RRPMsgType.RESERVE <qntsim.topology.node.QuantumRouter object at 0x142b88a60> <qntsim.topology.node.QuantumRouter object at 0x142b88a60> v7
received at  v7 {'request': <qntsim.network_management.request.Request object at 0x14295f280>}
process request payload <qntsim.network_management.request.Request object at 0x14295f280>
in request temp_path,marker <qntsim.network_management.request.Request object at 0x14295f280> v7 ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7'] v7
50 v7 <qntsim.network_management.request.Request object at 0x14295f280> memory available
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 0)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 1)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 2)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 3)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 4)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 5)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 6)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 7)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 8)
[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9)] (0, 9)
destination v7
 final message type fp , receiver RRPMsgType.CREATE_TASKS ManagerType.ReservationManager
setting dependencies
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
last_virtual_index -1
----------Enatanglement Generation Task----------
Current node in Entanglement generation v7
Path-------- ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7']
Reservation------ v0 v7 0
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_v7_v6   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142b02790>
depedencies for task:   TaskPurifyLeftv7v6   are   ['TaskEntGen_v7_v6']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c0cdf0>: []}
Swap at node: v1 left: v0 and right: v2
Swap at node: v2 left: v0 and right: v4
Swap at node: v3 left: v2 and right: v4
Swap at node: v4 left: v0 and right: v7
Swap at node: v5 left: v4 and right: v6
Swap at node: v6 left: v4 and right: v7
order of swaps:  [(('v0', 'v2', 'v1'), 2), (('v2', 'v4', 'v3'), 2), (('v4', 'v6', 'v5'), 2), (('v4', 'v7', 'v6'), 3), (('v0', 'v4', 'v2'), 4), (('v0', 'v7', 'v4'), 7)]
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142b02940>
depedencies for task:   TaskSwapRightEndv7v4   are   ['TaskPurifyLeftv7v6']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c0ce20>: []}
ENT_SWAP_RIGHT at:  v7
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142b02a60>
depedencies for task:   TaskSwapRightEndv7v0   are   ['TaskSwapRightEndv7v4']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c0ce50>: []}
ENT_SWAP_RIGHT at:  v7
tasks created at v7
reservation manager <qntsim.network_management.request.Request object at 0x14295f280>
setting dependencies
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
last_virtual_index -1
----------Enatanglement Generation Task----------
Current node in Entanglement generation v6
Path-------- ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7']
Reservation------ v0 v7 0
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_v6_v5   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_v6_v7   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142b02af0>
depedencies for task:   TaskPurifyLeftv6v5   are   ['TaskEntGen_v6_v5']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c164f0>: []}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142b02c10>
depedencies for task:   TaskPurifyRightv6v7   are   ['TaskEntGen_v6_v7']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c16520>: []}
Swap at node: v1 left: v0 and right: v2
Swap at node: v2 left: v0 and right: v4
Swap at node: v3 left: v2 and right: v4
Swap at node: v4 left: v0 and right: v7
Swap at node: v5 left: v4 and right: v6
Swap at node: v6 left: v4 and right: v7
order of swaps:  [(('v0', 'v2', 'v1'), 2), (('v2', 'v4', 'v3'), 2), (('v4', 'v6', 'v5'), 2), (('v4', 'v7', 'v6'), 3), (('v0', 'v4', 'v2'), 4), (('v0', 'v7', 'v4'), 7)]
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142b02d30>
depedencies for task:   TaskSwapRightEndv6v4   are   ['TaskPurifyLeftv6v5']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c16550>: []}
ENT_SWAP_RIGHT at:  v6
while setting task action: left :v4 right: v7 and mid: v6 and self.own.name: v6
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle at 0x142b02e50>
depedencies for task:   TaskSwapMiddlev7v4   are   ['TaskPurifyRightv6v7', 'TaskSwapRightEndv6v4']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c16580>: [], <qntsim.resource_management.task_manager.Task object at 0x142c165b0>: []}
ENT_SWAP_MIDDLE at:  v6
last_left_task   :  TaskPurifyRightv6v7
last_right_task   :  TaskSwapRightEndv6v4
tasks created at  v6
reservation manager <qntsim.network_management.request.Request object at 0x14295f280>
setting dependencies
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
last_virtual_index -1
----------Enatanglement Generation Task----------
Current node in Entanglement generation v5
Path-------- ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7']
Reservation------ v0 v7 0
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_v5_v4   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_v5_v6   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142c2c040>
depedencies for task:   TaskPurifyLeftv5v4   are   ['TaskEntGen_v5_v4']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c28eb0>: []}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142c2c160>
depedencies for task:   TaskPurifyRightv5v6   are   ['TaskEntGen_v5_v6']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c28ee0>: []}
Swap at node: v1 left: v0 and right: v2
Swap at node: v2 left: v0 and right: v4
Swap at node: v3 left: v2 and right: v4
Swap at node: v4 left: v0 and right: v7
Swap at node: v5 left: v4 and right: v6
Swap at node: v6 left: v4 and right: v7
order of swaps:  [(('v0', 'v2', 'v1'), 2), (('v2', 'v4', 'v3'), 2), (('v4', 'v6', 'v5'), 2), (('v4', 'v7', 'v6'), 3), (('v0', 'v4', 'v2'), 4), (('v0', 'v7', 'v4'), 7)]
while setting task action: left :v4 right: v6 and mid: v5 and self.own.name: v5
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle at 0x142c2c280>
depedencies for task:   TaskSwapMiddlev6v4   are   ['TaskPurifyRightv5v6', 'TaskPurifyLeftv5v4']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c28f40>: [], <qntsim.resource_management.task_manager.Task object at 0x142c28f10>: []}
ENT_SWAP_MIDDLE at:  v5
last_left_task   :  TaskPurifyRightv5v6
last_right_task   :  TaskPurifyLeftv5v4
tasks created at  v5
reservation manager <qntsim.network_management.request.Request object at 0x14295f280>
setting dependencies
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
last_virtual_index -1
----------Enatanglement Generation Task----------
Current node in Entanglement generation v4
Path-------- ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7']
Reservation------ v0 v7 0
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_v4_v3   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_v4_v5   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142c2c430>
depedencies for task:   TaskPurifyLeftv4v3   are   ['TaskEntGen_v4_v3']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c2dac0>: []}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142b02b80>
depedencies for task:   TaskPurifyRightv4v5   are   ['TaskEntGen_v4_v5']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c2daf0>: []}
Swap at node: v1 left: v0 and right: v2
Swap at node: v2 left: v0 and right: v4
Swap at node: v3 left: v2 and right: v4
Swap at node: v4 left: v0 and right: v7
Swap at node: v5 left: v4 and right: v6
Swap at node: v6 left: v4 and right: v7
order of swaps:  [(('v0', 'v2', 'v1'), 2), (('v2', 'v4', 'v3'), 2), (('v4', 'v6', 'v5'), 2), (('v4', 'v7', 'v6'), 3), (('v0', 'v4', 'v2'), 4), (('v0', 'v7', 'v4'), 7)]
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142b02dc0>
depedencies for task:   TaskSwapRightEndv4v2   are   ['TaskPurifyLeftv4v3']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c2db20>: []}
ENT_SWAP_RIGHT at:  v4
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142c2c1f0>
depedencies for task:   TaskSwapLeftEndv4v6   are   ['TaskPurifyRightv4v5']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c2db50>: []}
ENT_SWAP_LEFT at:  v4
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142c2c5e0>
depedencies for task:   TaskSwapLeftEndv4v7   are   ['TaskSwapLeftEndv4v6']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c2dbe0>: []}
ENT_SWAP_LEFT at:  v4
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142c2c700>
depedencies for task:   TaskSwapRightEndv4v0   are   ['TaskSwapRightEndv4v2']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c2db80>: []}
ENT_SWAP_RIGHT at:  v4
while setting task action: left :v0 right: v7 and mid: v4 and self.own.name: v4
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle at 0x142c2c820>
depedencies for task:   TaskSwapMiddlev7v0   are   ['TaskSwapLeftEndv4v7', 'TaskSwapRightEndv4v0']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c2dc10>: [], <qntsim.resource_management.task_manager.Task object at 0x142c2dc40>: []}
ENT_SWAP_MIDDLE at:  v4
last_left_task   :  TaskSwapLeftEndv4v7
last_right_task   :  TaskSwapRightEndv4v0
tasks created at  v4
reservation manager <qntsim.network_management.request.Request object at 0x14295f280>
setting dependencies
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
last_virtual_index -1
----------Enatanglement Generation Task----------
Current node in Entanglement generation v3
Path-------- ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7']
Reservation------ v0 v7 0
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_v3_v2   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_v3_v4   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142c2c9d0>
depedencies for task:   TaskPurifyLeftv3v2   are   ['TaskEntGen_v3_v2']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c46550>: []}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142c2caf0>
depedencies for task:   TaskPurifyRightv3v4   are   ['TaskEntGen_v3_v4']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c46580>: []}
Swap at node: v1 left: v0 and right: v2
Swap at node: v2 left: v0 and right: v4
Swap at node: v3 left: v2 and right: v4
Swap at node: v4 left: v0 and right: v7
Swap at node: v5 left: v4 and right: v6
Swap at node: v6 left: v4 and right: v7
order of swaps:  [(('v0', 'v2', 'v1'), 2), (('v2', 'v4', 'v3'), 2), (('v4', 'v6', 'v5'), 2), (('v4', 'v7', 'v6'), 3), (('v0', 'v4', 'v2'), 4), (('v0', 'v7', 'v4'), 7)]
while setting task action: left :v2 right: v4 and mid: v3 and self.own.name: v3
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle at 0x142c2cc10>
depedencies for task:   TaskSwapMiddlev4v2   are   ['TaskPurifyRightv3v4', 'TaskPurifyLeftv3v2']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c465e0>: [], <qntsim.resource_management.task_manager.Task object at 0x142c465b0>: []}
ENT_SWAP_MIDDLE at:  v3
last_left_task   :  TaskPurifyRightv3v4
last_right_task   :  TaskPurifyLeftv3v2
tasks created at  v3
reservation manager <qntsim.network_management.request.Request object at 0x14295f280>
setting dependencies
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
last_virtual_index -1
----------Enatanglement Generation Task----------
Current node in Entanglement generation v2
Path-------- ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7']
Reservation------ v0 v7 0
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_v2_v1   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_v2_v3   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142c2cdc0>
depedencies for task:   TaskPurifyLeftv2v1   are   ['TaskEntGen_v2_v1']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c4e160>: []}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142c2cee0>
depedencies for task:   TaskPurifyRightv2v3   are   ['TaskEntGen_v2_v3']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c4e190>: []}
Swap at node: v1 left: v0 and right: v2
Swap at node: v2 left: v0 and right: v4
Swap at node: v3 left: v2 and right: v4
Swap at node: v4 left: v0 and right: v7
Swap at node: v5 left: v4 and right: v6
Swap at node: v6 left: v4 and right: v7
order of swaps:  [(('v0', 'v2', 'v1'), 2), (('v2', 'v4', 'v3'), 2), (('v4', 'v6', 'v5'), 2), (('v4', 'v7', 'v6'), 3), (('v0', 'v4', 'v2'), 4), (('v0', 'v7', 'v4'), 7)]
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142b02ca0>
depedencies for task:   TaskSwapRightEndv2v0   are   ['TaskPurifyLeftv2v1']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c4e1c0>: []}
ENT_SWAP_RIGHT at:  v2
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142c2c0d0>
depedencies for task:   TaskSwapLeftEndv2v4   are   ['TaskPurifyRightv2v3']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c4e1f0>: []}
ENT_SWAP_LEFT at:  v2
while setting task action: left :v0 right: v4 and mid: v2 and self.own.name: v2
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle at 0x142c2c670>
depedencies for task:   TaskSwapMiddlev4v0   are   ['TaskSwapLeftEndv2v4', 'TaskSwapRightEndv2v0']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c4e280>: [], <qntsim.resource_management.task_manager.Task object at 0x142c4e220>: []}
ENT_SWAP_MIDDLE at:  v2
last_left_task   :  TaskSwapLeftEndv2v4
last_right_task   :  TaskSwapRightEndv2v0
tasks created at  v2
reservation manager <qntsim.network_management.request.Request object at 0x14295f280>
setting dependencies
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
last_virtual_index -1
----------Enatanglement Generation Task----------
Current node in Entanglement generation v1
Path-------- ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7']
Reservation------ v0 v7 0
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_v1_v0   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_v1_v2   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142c2cb80>
depedencies for task:   TaskPurifyLeftv1v0   are   ['TaskEntGen_v1_v0']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c5eb50>: []}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142c63040>
depedencies for task:   TaskPurifyRightv1v2   are   ['TaskEntGen_v1_v2']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c5eb80>: []}
Swap at node: v1 left: v0 and right: v2
Swap at node: v2 left: v0 and right: v4
Swap at node: v3 left: v2 and right: v4
Swap at node: v4 left: v0 and right: v7
Swap at node: v5 left: v4 and right: v6
Swap at node: v6 left: v4 and right: v7
order of swaps:  [(('v0', 'v2', 'v1'), 2), (('v2', 'v4', 'v3'), 2), (('v4', 'v6', 'v5'), 2), (('v4', 'v7', 'v6'), 3), (('v0', 'v4', 'v2'), 4), (('v0', 'v7', 'v4'), 7)]
while setting task action: left :v0 right: v2 and mid: v1 and self.own.name: v1
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle at 0x142c63160>
depedencies for task:   TaskSwapMiddlev2v0   are   ['TaskPurifyRightv1v2', 'TaskPurifyLeftv1v0']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c5ebe0>: [], <qntsim.resource_management.task_manager.Task object at 0x142c5ebb0>: []}
ENT_SWAP_MIDDLE at:  v1
last_left_task   :  TaskPurifyRightv1v2
last_right_task   :  TaskPurifyLeftv1v0
tasks created at  v1
reservation manager <qntsim.network_management.request.Request object at 0x14295f280>
tasks created at  v0
setting dependencies
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
To maintain the virtual link indices
last_virtual_index -1
----------Enatanglement Generation Task----------
Current node in Entanglement generation v0
Path-------- ['v0', 'v1', 'v2', 'v3', 'v4', 'v5', 'v6', 'v7']
Reservation------ v0 v7 0
type(self.action) : <class 'NoneType'>
action:   None
depedencies for task:   TaskEntGen_v0_v1   are   []
Initialized the dependencies_subtask_map
current status:	 {}
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_purify_action at 0x142c63280>
depedencies for task:   TaskPurifyRightv0v1   are   ['TaskEntGen_v0_v1']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c65760>: []}
Swap at node: v1 left: v0 and right: v2
Swap at node: v2 left: v0 and right: v4
Swap at node: v3 left: v2 and right: v4
Swap at node: v4 left: v0 and right: v7
Swap at node: v5 left: v4 and right: v6
Swap at node: v6 left: v4 and right: v7
order of swaps:  [(('v0', 'v2', 'v1'), 2), (('v2', 'v4', 'v3'), 2), (('v4', 'v6', 'v5'), 2), (('v4', 'v7', 'v6'), 3), (('v0', 'v4', 'v2'), 4), (('v0', 'v7', 'v4'), 7)]
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142c633a0>
depedencies for task:   TaskSwapLeftEndv0v2   are   ['TaskPurifyRightv0v1']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c65790>: []}
ENT_SWAP_LEFT at:  v0
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142c634c0>
depedencies for task:   TaskSwapLeftEndv0v4   are   ['TaskSwapLeftEndv0v2']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c657c0>: []}
ENT_SWAP_LEFT at:  v0
type(self.action) : <class 'function'>
action:   <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action at 0x142c635e0>
depedencies for task:   TaskSwapLeftEndv0v7   are   ['TaskSwapLeftEndv0v4']
Initialized the dependencies_subtask_map
current status:	 {<qntsim.resource_management.task_manager.Task object at 0x142c65820>: []}
ENT_SWAP_LEFT at:  v0
initiate_tasks running for node:  v0
inside EG right task action:   TaskEntGen_v0_v1
len(subtasks):	 10
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v0_v1  for node: v0 and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: v0  dest:  v1  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x14038d9d0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v0_v1  for node: v0 and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: v0  dest:  v1  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c2cf70>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v0_v1  for node: v0 and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: v0  dest:  v1  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c2c4c0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v0_v1  for node: v0 and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: v0  dest:  v1  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c2c550>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v0_v1  for node: v0 and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: v0  dest:  v1  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c2ce50>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v0_v1  for node: v0 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: v0  dest:  v1  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c630d0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v0_v1  for node: v0 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: v0  dest:  v1  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c63310>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v0_v1  for node: v0 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: v0  dest:  v1  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c63430>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v0_v1  for node: v0 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: v0  dest:  v1  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c63550>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v0_v1  for node: v0 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: v0  dest:  v1  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v1 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c63670>
initiate_tasks running for node:  v7
task name in action:  TaskEntGen_v7_v6
len(subtasks):	 10
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v7_v6  for node: v7 and memory returned for this: 0
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v7_v6  for node: v7 and memory returned for this: 1
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v7_v6  for node: v7 and memory returned for this: 2
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v7_v6  for node: v7 and memory returned for this: 3
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v7_v6  for node: v7 and memory returned for this: 4
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v7_v6  for node: v7 and memory returned for this: 5
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v7_v6  for node: v7 and memory returned for this: 6
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v7_v6  for node: v7 and memory returned for this: 7
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v7_v6  for node: v7 and memory returned for this: 8
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v7_v6  for node: v7 and memory returned for this: 9
dst, req_func:	 None None
initiate_tasks running for node:  v6
task name in action:  TaskEntGen_v6_v5
len(subtasks):	 10
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v5  for node: v6 and memory returned for this: 0
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v5  for node: v6 and memory returned for this: 1
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v5  for node: v6 and memory returned for this: 2
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v5  for node: v6 and memory returned for this: 3
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v5  for node: v6 and memory returned for this: 4
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v5  for node: v6 and memory returned for this: 5
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v5  for node: v6 and memory returned for this: 6
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v5  for node: v6 and memory returned for this: 7
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v5  for node: v6 and memory returned for this: 8
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v5  for node: v6 and memory returned for this: 9
dst, req_func:	 None None
inside EG right task action:   TaskEntGen_v6_v7
len(subtasks):	 10
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v7  for node: v6 and memory returned for this: 10
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v7  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c638b0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v7  for node: v6 and memory returned for this: 11
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v7  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c63940>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v7  for node: v6 and memory returned for this: 12
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v7  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c639d0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v7  for node: v6 and memory returned for this: 13
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v7  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c63a60>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v7  for node: v6 and memory returned for this: 14
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v7  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c63af0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v7  for node: v6 and memory returned for this: 15
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v7  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c63b80>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v7  for node: v6 and memory returned for this: 16
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v7  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c63c10>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v7  for node: v6 and memory returned for this: 17
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v7  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c63ca0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v7  for node: v6 and memory returned for this: 18
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v7  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c63d30>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v6_v7  for node: v6 and memory returned for this: 19
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v7  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c63dc0>
initiate_tasks running for node:  v4
task name in action:  TaskEntGen_v4_v3
len(subtasks):	 10
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v3  for node: v4 and memory returned for this: 0
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v3  for node: v4 and memory returned for this: 1
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v3  for node: v4 and memory returned for this: 2
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v3  for node: v4 and memory returned for this: 3
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v3  for node: v4 and memory returned for this: 4
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v3  for node: v4 and memory returned for this: 5
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v3  for node: v4 and memory returned for this: 6
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v3  for node: v4 and memory returned for this: 7
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v3  for node: v4 and memory returned for this: 8
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v3  for node: v4 and memory returned for this: 9
dst, req_func:	 None None
inside EG right task action:   TaskEntGen_v4_v5
len(subtasks):	 10
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v5  for node: v4 and memory returned for this: 10
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v5  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v5 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x142c63f70>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v5  for node: v4 and memory returned for this: 11
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v5  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v5 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fd040>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v5  for node: v4 and memory returned for this: 12
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v5  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v5 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fd0d0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v5  for node: v4 and memory returned for this: 13
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v5  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v5 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fd160>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v5  for node: v4 and memory returned for this: 14
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v5  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v5 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fd1f0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v5  for node: v4 and memory returned for this: 15
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v5  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v5 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fd280>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v5  for node: v4 and memory returned for this: 16
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v5  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v5 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fd310>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v5  for node: v4 and memory returned for this: 17
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v5  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v5 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fd3a0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v5  for node: v4 and memory returned for this: 18
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v5  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v5 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fd430>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v4_v5  for node: v4 and memory returned for this: 19
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v5  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v5 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fd4c0>
initiate_tasks running for node:  v1
task name in action:  TaskEntGen_v1_v0
len(subtasks):	 10
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v0  for node: v1 and memory returned for this: 0
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v0  for node: v1 and memory returned for this: 1
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v0  for node: v1 and memory returned for this: 2
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v0  for node: v1 and memory returned for this: 3
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v0  for node: v1 and memory returned for this: 4
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v0  for node: v1 and memory returned for this: 5
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v0  for node: v1 and memory returned for this: 6
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v0  for node: v1 and memory returned for this: 7
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v0  for node: v1 and memory returned for this: 8
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v0  for node: v1 and memory returned for this: 9
dst, req_func:	 None None
inside EG right task action:   TaskEntGen_v1_v2
len(subtasks):	 10
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v2  for node: v1 and memory returned for this: 10
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v2  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fd670>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v2  for node: v1 and memory returned for this: 11
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v2  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fd700>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v2  for node: v1 and memory returned for this: 12
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v2  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fd790>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v2  for node: v1 and memory returned for this: 13
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v2  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fd820>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v2  for node: v1 and memory returned for this: 14
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v2  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fd8b0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v2  for node: v1 and memory returned for this: 15
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v2  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fd940>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v2  for node: v1 and memory returned for this: 16
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v2  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fd9d0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v2  for node: v1 and memory returned for this: 17
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v2  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fda60>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v2  for node: v1 and memory returned for this: 18
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v2  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fdaf0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v1_v2  for node: v1 and memory returned for this: 19
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v2  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fdb80>
initiate_tasks running for node:  v2
task name in action:  TaskEntGen_v2_v1
len(subtasks):	 10
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v1  for node: v2 and memory returned for this: 0
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v1  for node: v2 and memory returned for this: 1
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v1  for node: v2 and memory returned for this: 2
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v1  for node: v2 and memory returned for this: 3
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v1  for node: v2 and memory returned for this: 4
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v1  for node: v2 and memory returned for this: 5
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v1  for node: v2 and memory returned for this: 6
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v1  for node: v2 and memory returned for this: 7
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v1  for node: v2 and memory returned for this: 8
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v1  for node: v2 and memory returned for this: 9
dst, req_func:	 None None
inside EG right task action:   TaskEntGen_v2_v3
len(subtasks):	 10
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v3  for node: v2 and memory returned for this: 10
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v3  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fdd30>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v3  for node: v2 and memory returned for this: 11
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v3  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fddc0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v3  for node: v2 and memory returned for this: 12
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v3  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fde50>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v3  for node: v2 and memory returned for this: 13
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v3  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fdee0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v3  for node: v2 and memory returned for this: 14
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v3  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1565fdf70>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v3  for node: v2 and memory returned for this: 15
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v3  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612040>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v3  for node: v2 and memory returned for this: 16
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v3  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1566120d0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v3  for node: v2 and memory returned for this: 17
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v3  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612160>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v3  for node: v2 and memory returned for this: 18
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v3  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1566121f0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v2_v3  for node: v2 and memory returned for this: 19
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v3  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v3 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612280>
initiate_tasks running for node:  v3
task name in action:  TaskEntGen_v3_v2
len(subtasks):	 10
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v2  for node: v3 and memory returned for this: 0
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v2  for node: v3 and memory returned for this: 1
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v2  for node: v3 and memory returned for this: 2
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v2  for node: v3 and memory returned for this: 3
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v2  for node: v3 and memory returned for this: 4
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v2  for node: v3 and memory returned for this: 5
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v2  for node: v3 and memory returned for this: 6
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v2  for node: v3 and memory returned for this: 7
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v2  for node: v3 and memory returned for this: 8
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v2  for node: v3 and memory returned for this: 9
dst, req_func:	 None None
inside EG right task action:   TaskEntGen_v3_v4
len(subtasks):	 10
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v4  for node: v3 and memory returned for this: 10
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v4  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612430>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v4  for node: v3 and memory returned for this: 11
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v4  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1566124c0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v4  for node: v3 and memory returned for this: 12
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v4  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612550>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v4  for node: v3 and memory returned for this: 13
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v4  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1566125e0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v4  for node: v3 and memory returned for this: 14
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v4  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612670>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v4  for node: v3 and memory returned for this: 15
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v4  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612700>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v4  for node: v3 and memory returned for this: 16
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v4  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612790>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v4  for node: v3 and memory returned for this: 17
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v4  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612820>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v4  for node: v3 and memory returned for this: 18
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v4  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x1566128b0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v3_v4  for node: v3 and memory returned for this: 19
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v4  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612940>
initiate_tasks running for node:  v5
task name in action:  TaskEntGen_v5_v4
len(subtasks):	 10
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v4  for node: v5 and memory returned for this: 0
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v4  for node: v5 and memory returned for this: 1
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v4  for node: v5 and memory returned for this: 2
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v4  for node: v5 and memory returned for this: 3
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v4  for node: v5 and memory returned for this: 4
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v4  for node: v5 and memory returned for this: 5
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v4  for node: v5 and memory returned for this: 6
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v4  for node: v5 and memory returned for this: 7
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v4  for node: v5 and memory returned for this: 8
dst, req_func:	 None None
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v4  for node: v5 and memory returned for this: 9
dst, req_func:	 None None
inside EG right task action:   TaskEntGen_v5_v6
len(subtasks):	 10
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v6  for node: v5 and memory returned for this: 10
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v6  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v6 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612af0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v6  for node: v5 and memory returned for this: 11
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v6  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v6 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612b80>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v6  for node: v5 and memory returned for this: 12
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v6  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v6 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612c10>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v6  for node: v5 and memory returned for this: 13
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v6  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v6 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612ca0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v6  for node: v5 and memory returned for this: 14
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v6  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v6 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612d30>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v6  for node: v5 and memory returned for this: 15
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v6  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v6 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612dc0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v6  for node: v5 and memory returned for this: 16
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v6  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v6 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612e50>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v6  for node: v5 and memory returned for this: 17
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v6  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v6 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612ee0>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v6  for node: v5 and memory returned for this: 18
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v6  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v6 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156612f70>
subtask:	self.dependencies in is_eligible_to_run []
True
task.name: TaskEntGen_v5_v6  for node: v5 and memory returned for this: 19
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v6  delay:  500000000.0 and expected message recv time:  5000500000000
dst, req_func:	 v6 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_gen_action.<locals>.gen_subtask_action.<locals>.req_func at 0x156625040>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v1
push message at  v1  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e3c40>
Protocol Name:  EGA.v1.MemoryArray[0]
generatin between  EGA.v1.MemoryArray[0] EGA.v0.MemoryArray[0]
request sent middle_v0_v1 v1 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v1
push message at  v1  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e3c70>
Protocol Name:  EGA.v1.MemoryArray[1]
generatin between  EGA.v1.MemoryArray[1] EGA.v0.MemoryArray[1]
request sent middle_v0_v1 v1 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v1
push message at  v1  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e3ca0>
Protocol Name:  EGA.v1.MemoryArray[2]
generatin between  EGA.v1.MemoryArray[2] EGA.v0.MemoryArray[2]
request sent middle_v0_v1 v1 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v1
push message at  v1  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e3d90>
Protocol Name:  EGA.v1.MemoryArray[3]
generatin between  EGA.v1.MemoryArray[3] EGA.v0.MemoryArray[3]
request sent middle_v0_v1 v1 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v1
push message at  v1  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e3e80>
Protocol Name:  EGA.v1.MemoryArray[4]
generatin between  EGA.v1.MemoryArray[4] EGA.v0.MemoryArray[4]
request sent middle_v0_v1 v1 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v1
push message at  v1  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e3f70>
Protocol Name:  EGA.v1.MemoryArray[5]
generatin between  EGA.v1.MemoryArray[5] EGA.v0.MemoryArray[5]
request sent middle_v0_v1 v1 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v1
push message at  v1  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e90a0>
Protocol Name:  EGA.v1.MemoryArray[6]
generatin between  EGA.v1.MemoryArray[6] EGA.v0.MemoryArray[6]
request sent middle_v0_v1 v1 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v1
push message at  v1  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9190>
Protocol Name:  EGA.v1.MemoryArray[7]
generatin between  EGA.v1.MemoryArray[7] EGA.v0.MemoryArray[7]
request sent middle_v0_v1 v1 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v1
push message at  v1  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9280>
Protocol Name:  EGA.v1.MemoryArray[8]
generatin between  EGA.v1.MemoryArray[8] EGA.v0.MemoryArray[8]
request sent middle_v0_v1 v1 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v1
push message at  v1  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9370>
Protocol Name:  EGA.v1.MemoryArray[9]
generatin between  EGA.v1.MemoryArray[9] EGA.v0.MemoryArray[9]
request sent middle_v0_v1 v1 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9f40>
Protocol Name:  EGA.v7.MemoryArray[0]
generatin between  EGA.v7.MemoryArray[0] EGA.v6.MemoryArray[10]
request sent middle_v6_v7 v7 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9f70>
Protocol Name:  EGA.v7.MemoryArray[1]
generatin between  EGA.v7.MemoryArray[1] EGA.v6.MemoryArray[11]
request sent middle_v6_v7 v7 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9fa0>
Protocol Name:  EGA.v7.MemoryArray[2]
generatin between  EGA.v7.MemoryArray[2] EGA.v6.MemoryArray[12]
request sent middle_v6_v7 v7 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f60d0>
Protocol Name:  EGA.v7.MemoryArray[3]
generatin between  EGA.v7.MemoryArray[3] EGA.v6.MemoryArray[13]
request sent middle_v6_v7 v7 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f61c0>
Protocol Name:  EGA.v7.MemoryArray[4]
generatin between  EGA.v7.MemoryArray[4] EGA.v6.MemoryArray[14]
request sent middle_v6_v7 v7 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f62b0>
Protocol Name:  EGA.v7.MemoryArray[5]
generatin between  EGA.v7.MemoryArray[5] EGA.v6.MemoryArray[15]
request sent middle_v6_v7 v7 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f63a0>
Protocol Name:  EGA.v7.MemoryArray[6]
generatin between  EGA.v7.MemoryArray[6] EGA.v6.MemoryArray[16]
request sent middle_v6_v7 v7 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6490>
Protocol Name:  EGA.v7.MemoryArray[7]
generatin between  EGA.v7.MemoryArray[7] EGA.v6.MemoryArray[17]
request sent middle_v6_v7 v7 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6580>
Protocol Name:  EGA.v7.MemoryArray[8]
generatin between  EGA.v7.MemoryArray[8] EGA.v6.MemoryArray[18]
request sent middle_v6_v7 v7 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6670>
Protocol Name:  EGA.v7.MemoryArray[9]
generatin between  EGA.v7.MemoryArray[9] EGA.v6.MemoryArray[19]
request sent middle_v6_v7 v7 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v5
push message at  v5  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6e80>
Protocol Name:  EGA.v5.MemoryArray[0]
generatin between  EGA.v5.MemoryArray[0] EGA.v4.MemoryArray[10]
request sent middle_v4_v5 v5 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v5
push message at  v5  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6eb0>
Protocol Name:  EGA.v5.MemoryArray[1]
generatin between  EGA.v5.MemoryArray[1] EGA.v4.MemoryArray[11]
request sent middle_v4_v5 v5 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v5
push message at  v5  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6ee0>
Protocol Name:  EGA.v5.MemoryArray[2]
generatin between  EGA.v5.MemoryArray[2] EGA.v4.MemoryArray[12]
request sent middle_v4_v5 v5 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v5
push message at  v5  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6fd0>
Protocol Name:  EGA.v5.MemoryArray[3]
generatin between  EGA.v5.MemoryArray[3] EGA.v4.MemoryArray[13]
request sent middle_v4_v5 v5 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v5
push message at  v5  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fe100>
Protocol Name:  EGA.v5.MemoryArray[4]
generatin between  EGA.v5.MemoryArray[4] EGA.v4.MemoryArray[14]
request sent middle_v4_v5 v5 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v5
push message at  v5  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fe1f0>
Protocol Name:  EGA.v5.MemoryArray[5]
generatin between  EGA.v5.MemoryArray[5] EGA.v4.MemoryArray[15]
request sent middle_v4_v5 v5 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v5
push message at  v5  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fe2e0>
Protocol Name:  EGA.v5.MemoryArray[6]
generatin between  EGA.v5.MemoryArray[6] EGA.v4.MemoryArray[16]
request sent middle_v4_v5 v5 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v5
push message at  v5  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fe3d0>
Protocol Name:  EGA.v5.MemoryArray[7]
generatin between  EGA.v5.MemoryArray[7] EGA.v4.MemoryArray[17]
request sent middle_v4_v5 v5 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v5
push message at  v5  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fe4c0>
Protocol Name:  EGA.v5.MemoryArray[8]
generatin between  EGA.v5.MemoryArray[8] EGA.v4.MemoryArray[18]
request sent middle_v4_v5 v5 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v5
push message at  v5  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fe5b0>
Protocol Name:  EGA.v5.MemoryArray[9]
generatin between  EGA.v5.MemoryArray[9] EGA.v4.MemoryArray[19]
request sent middle_v4_v5 v5 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fedc0>
Protocol Name:  EGA.v2.MemoryArray[0]
generatin between  EGA.v2.MemoryArray[0] EGA.v1.MemoryArray[10]
request sent middle_v1_v2 v2 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fedf0>
Protocol Name:  EGA.v2.MemoryArray[1]
generatin between  EGA.v2.MemoryArray[1] EGA.v1.MemoryArray[11]
request sent middle_v1_v2 v2 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fee20>
Protocol Name:  EGA.v2.MemoryArray[2]
generatin between  EGA.v2.MemoryArray[2] EGA.v1.MemoryArray[12]
request sent middle_v1_v2 v2 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fef10>
Protocol Name:  EGA.v2.MemoryArray[3]
generatin between  EGA.v2.MemoryArray[3] EGA.v1.MemoryArray[13]
request sent middle_v1_v2 v2 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606040>
Protocol Name:  EGA.v2.MemoryArray[4]
generatin between  EGA.v2.MemoryArray[4] EGA.v1.MemoryArray[14]
request sent middle_v1_v2 v2 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606130>
Protocol Name:  EGA.v2.MemoryArray[5]
generatin between  EGA.v2.MemoryArray[5] EGA.v1.MemoryArray[15]
request sent middle_v1_v2 v2 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606220>
Protocol Name:  EGA.v2.MemoryArray[6]
generatin between  EGA.v2.MemoryArray[6] EGA.v1.MemoryArray[16]
request sent middle_v1_v2 v2 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606310>
Protocol Name:  EGA.v2.MemoryArray[7]
generatin between  EGA.v2.MemoryArray[7] EGA.v1.MemoryArray[17]
request sent middle_v1_v2 v2 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606400>
Protocol Name:  EGA.v2.MemoryArray[8]
generatin between  EGA.v2.MemoryArray[8] EGA.v1.MemoryArray[18]
request sent middle_v1_v2 v2 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566064f0>
Protocol Name:  EGA.v2.MemoryArray[9]
generatin between  EGA.v2.MemoryArray[9] EGA.v1.MemoryArray[19]
request sent middle_v1_v2 v2 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v3
push message at  v3  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606d00>
Protocol Name:  EGA.v3.MemoryArray[0]
generatin between  EGA.v3.MemoryArray[0] EGA.v2.MemoryArray[10]
request sent middle_v2_v3 v3 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v3
push message at  v3  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606d30>
Protocol Name:  EGA.v3.MemoryArray[1]
generatin between  EGA.v3.MemoryArray[1] EGA.v2.MemoryArray[11]
request sent middle_v2_v3 v3 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v3
push message at  v3  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606d60>
Protocol Name:  EGA.v3.MemoryArray[2]
generatin between  EGA.v3.MemoryArray[2] EGA.v2.MemoryArray[12]
request sent middle_v2_v3 v3 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v3
push message at  v3  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606e50>
Protocol Name:  EGA.v3.MemoryArray[3]
generatin between  EGA.v3.MemoryArray[3] EGA.v2.MemoryArray[13]
request sent middle_v2_v3 v3 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v3
push message at  v3  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606f40>
Protocol Name:  EGA.v3.MemoryArray[4]
generatin between  EGA.v3.MemoryArray[4] EGA.v2.MemoryArray[14]
request sent middle_v2_v3 v3 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v3
push message at  v3  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610070>
Protocol Name:  EGA.v3.MemoryArray[5]
generatin between  EGA.v3.MemoryArray[5] EGA.v2.MemoryArray[15]
request sent middle_v2_v3 v3 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v3
push message at  v3  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610160>
Protocol Name:  EGA.v3.MemoryArray[6]
generatin between  EGA.v3.MemoryArray[6] EGA.v2.MemoryArray[16]
request sent middle_v2_v3 v3 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v3
push message at  v3  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610250>
Protocol Name:  EGA.v3.MemoryArray[7]
generatin between  EGA.v3.MemoryArray[7] EGA.v2.MemoryArray[17]
request sent middle_v2_v3 v3 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v3
push message at  v3  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610340>
Protocol Name:  EGA.v3.MemoryArray[8]
generatin between  EGA.v3.MemoryArray[8] EGA.v2.MemoryArray[18]
request sent middle_v2_v3 v3 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v3
push message at  v3  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610430>
Protocol Name:  EGA.v3.MemoryArray[9]
generatin between  EGA.v3.MemoryArray[9] EGA.v2.MemoryArray[19]
request sent middle_v2_v3 v3 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610c40>
Protocol Name:  EGA.v4.MemoryArray[0]
generatin between  EGA.v4.MemoryArray[0] EGA.v3.MemoryArray[10]
request sent middle_v3_v4 v4 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610c70>
Protocol Name:  EGA.v4.MemoryArray[1]
generatin between  EGA.v4.MemoryArray[1] EGA.v3.MemoryArray[11]
request sent middle_v3_v4 v4 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610ca0>
Protocol Name:  EGA.v4.MemoryArray[2]
generatin between  EGA.v4.MemoryArray[2] EGA.v3.MemoryArray[12]
request sent middle_v3_v4 v4 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610d90>
Protocol Name:  EGA.v4.MemoryArray[3]
generatin between  EGA.v4.MemoryArray[3] EGA.v3.MemoryArray[13]
request sent middle_v3_v4 v4 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610e80>
Protocol Name:  EGA.v4.MemoryArray[4]
generatin between  EGA.v4.MemoryArray[4] EGA.v3.MemoryArray[14]
request sent middle_v3_v4 v4 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610f70>
Protocol Name:  EGA.v4.MemoryArray[5]
generatin between  EGA.v4.MemoryArray[5] EGA.v3.MemoryArray[15]
request sent middle_v3_v4 v4 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a0a0>
Protocol Name:  EGA.v4.MemoryArray[6]
generatin between  EGA.v4.MemoryArray[6] EGA.v3.MemoryArray[16]
request sent middle_v3_v4 v4 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a190>
Protocol Name:  EGA.v4.MemoryArray[7]
generatin between  EGA.v4.MemoryArray[7] EGA.v3.MemoryArray[17]
request sent middle_v3_v4 v4 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a280>
Protocol Name:  EGA.v4.MemoryArray[8]
generatin between  EGA.v4.MemoryArray[8] EGA.v3.MemoryArray[18]
request sent middle_v3_v4 v4 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a370>
Protocol Name:  EGA.v4.MemoryArray[9]
generatin between  EGA.v4.MemoryArray[9] EGA.v3.MemoryArray[19]
request sent middle_v3_v4 v4 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v6
push message at  v6  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661ab80>
Protocol Name:  EGA.v6.MemoryArray[0]
generatin between  EGA.v6.MemoryArray[0] EGA.v5.MemoryArray[10]
request sent middle_v5_v6 v6 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v6
push message at  v6  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661abb0>
Protocol Name:  EGA.v6.MemoryArray[1]
generatin between  EGA.v6.MemoryArray[1] EGA.v5.MemoryArray[11]
request sent middle_v5_v6 v6 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v6
push message at  v6  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661abe0>
Protocol Name:  EGA.v6.MemoryArray[2]
generatin between  EGA.v6.MemoryArray[2] EGA.v5.MemoryArray[12]
request sent middle_v5_v6 v6 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v6
push message at  v6  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661acd0>
Protocol Name:  EGA.v6.MemoryArray[3]
generatin between  EGA.v6.MemoryArray[3] EGA.v5.MemoryArray[13]
request sent middle_v5_v6 v6 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v6
push message at  v6  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661adc0>
Protocol Name:  EGA.v6.MemoryArray[4]
generatin between  EGA.v6.MemoryArray[4] EGA.v5.MemoryArray[14]
request sent middle_v5_v6 v6 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v6
push message at  v6  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661aeb0>
Protocol Name:  EGA.v6.MemoryArray[5]
generatin between  EGA.v6.MemoryArray[5] EGA.v5.MemoryArray[15]
request sent middle_v5_v6 v6 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v6
push message at  v6  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661afa0>
Protocol Name:  EGA.v6.MemoryArray[6]
generatin between  EGA.v6.MemoryArray[6] EGA.v5.MemoryArray[16]
request sent middle_v5_v6 v6 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v6
push message at  v6  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566220d0>
Protocol Name:  EGA.v6.MemoryArray[7]
generatin between  EGA.v6.MemoryArray[7] EGA.v5.MemoryArray[17]
request sent middle_v5_v6 v6 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v6
push message at  v6  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566221c0>
Protocol Name:  EGA.v6.MemoryArray[8]
generatin between  EGA.v6.MemoryArray[8] EGA.v5.MemoryArray[18]
request sent middle_v5_v6 v6 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
REQ_FUNC_RECV_TIME:  5000500000000  at node:  v6
push message at  v6  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566222b0>
Protocol Name:  EGA.v6.MemoryArray[9]
generatin between  EGA.v6.MemoryArray[9] EGA.v5.MemoryArray[19]
request sent middle_v5_v6 v6 <class 'qntsim.entanglement_management.generation.EntanglementGenerationA'>
BSM allocate EGA.v1.MemoryArray[0] middle_v0_v1_eg
MESAGE SENT TO NODE
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea00>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea30>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea60>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea90>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feac0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feaf0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb20>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb50>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb80>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565febb0>
BSM allocate EGA.v7.MemoryArray[0] middle_v6_v7_eg
MESAGE SENT TO NODE
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e97c0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e97f0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9820>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9850>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9880>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e98b0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e98e0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9910>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9940>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9970>
BSM allocate EGA.v5.MemoryArray[0] middle_v4_v5_eg
MESAGE SENT TO NODE
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a7c0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a7f0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a820>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a850>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a880>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a8b0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a8e0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a910>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a940>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a970>
BSM allocate EGA.v2.MemoryArray[0] middle_v1_v2_eg
MESAGE SENT TO NODE
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606940>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606970>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566069a0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566069d0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a00>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a30>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a60>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a90>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606ac0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606af0>
BSM allocate EGA.v3.MemoryArray[0] middle_v2_v3_eg
MESAGE SENT TO NODE
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610880>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566108b0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566108e0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610910>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610940>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610970>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109a0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109d0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a00>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a30>
BSM allocate EGA.v4.MemoryArray[0] middle_v3_v4_eg
MESAGE SENT TO NODE
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6ac0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6af0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b20>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b50>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b80>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6bb0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6be0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c10>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c40>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c70>
BSM allocate EGA.v6.MemoryArray[0] middle_v5_v6_eg
MESAGE SENT TO NODE
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9b80>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9bb0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9be0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c10>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c40>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c70>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9ca0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9cd0>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d00>
protocol appended:  <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d30>
Resource manager Response
generatin between  EGA.v0.MemoryArray[0] EGA.v1.MemoryArray[0]
Resource manager Response
generatin between  EGA.v0.MemoryArray[1] EGA.v1.MemoryArray[1]
Resource manager Response
generatin between  EGA.v0.MemoryArray[2] EGA.v1.MemoryArray[2]
Resource manager Response
generatin between  EGA.v0.MemoryArray[3] EGA.v1.MemoryArray[3]
Resource manager Response
generatin between  EGA.v0.MemoryArray[4] EGA.v1.MemoryArray[4]
Resource manager Response
generatin between  EGA.v0.MemoryArray[5] EGA.v1.MemoryArray[5]
Resource manager Response
generatin between  EGA.v0.MemoryArray[6] EGA.v1.MemoryArray[6]
Resource manager Response
generatin between  EGA.v0.MemoryArray[7] EGA.v1.MemoryArray[7]
Resource manager Response
generatin between  EGA.v0.MemoryArray[8] EGA.v1.MemoryArray[8]
Resource manager Response
generatin between  EGA.v0.MemoryArray[9] EGA.v1.MemoryArray[9]
Resource manager Response
generatin between  EGA.v6.MemoryArray[10] EGA.v7.MemoryArray[0]
Resource manager Response
generatin between  EGA.v6.MemoryArray[11] EGA.v7.MemoryArray[1]
Resource manager Response
generatin between  EGA.v6.MemoryArray[12] EGA.v7.MemoryArray[2]
Resource manager Response
generatin between  EGA.v6.MemoryArray[13] EGA.v7.MemoryArray[3]
Resource manager Response
generatin between  EGA.v6.MemoryArray[14] EGA.v7.MemoryArray[4]
Resource manager Response
generatin between  EGA.v6.MemoryArray[15] EGA.v7.MemoryArray[5]
Resource manager Response
generatin between  EGA.v6.MemoryArray[16] EGA.v7.MemoryArray[6]
Resource manager Response
generatin between  EGA.v6.MemoryArray[17] EGA.v7.MemoryArray[7]
Resource manager Response
generatin between  EGA.v6.MemoryArray[18] EGA.v7.MemoryArray[8]
Resource manager Response
generatin between  EGA.v6.MemoryArray[19] EGA.v7.MemoryArray[9]
Resource manager Response
generatin between  EGA.v4.MemoryArray[10] EGA.v5.MemoryArray[0]
Resource manager Response
generatin between  EGA.v4.MemoryArray[11] EGA.v5.MemoryArray[1]
Resource manager Response
generatin between  EGA.v4.MemoryArray[12] EGA.v5.MemoryArray[2]
Resource manager Response
generatin between  EGA.v4.MemoryArray[13] EGA.v5.MemoryArray[3]
Resource manager Response
generatin between  EGA.v4.MemoryArray[14] EGA.v5.MemoryArray[4]
Resource manager Response
generatin between  EGA.v4.MemoryArray[15] EGA.v5.MemoryArray[5]
Resource manager Response
generatin between  EGA.v4.MemoryArray[16] EGA.v5.MemoryArray[6]
Resource manager Response
generatin between  EGA.v4.MemoryArray[17] EGA.v5.MemoryArray[7]
Resource manager Response
generatin between  EGA.v4.MemoryArray[18] EGA.v5.MemoryArray[8]
Resource manager Response
generatin between  EGA.v4.MemoryArray[19] EGA.v5.MemoryArray[9]
Resource manager Response
generatin between  EGA.v1.MemoryArray[10] EGA.v2.MemoryArray[0]
Resource manager Response
generatin between  EGA.v1.MemoryArray[11] EGA.v2.MemoryArray[1]
Resource manager Response
generatin between  EGA.v1.MemoryArray[12] EGA.v2.MemoryArray[2]
Resource manager Response
generatin between  EGA.v1.MemoryArray[13] EGA.v2.MemoryArray[3]
Resource manager Response
generatin between  EGA.v1.MemoryArray[14] EGA.v2.MemoryArray[4]
Resource manager Response
generatin between  EGA.v1.MemoryArray[15] EGA.v2.MemoryArray[5]
Resource manager Response
generatin between  EGA.v1.MemoryArray[16] EGA.v2.MemoryArray[6]
Resource manager Response
generatin between  EGA.v1.MemoryArray[17] EGA.v2.MemoryArray[7]
Resource manager Response
generatin between  EGA.v1.MemoryArray[18] EGA.v2.MemoryArray[8]
Resource manager Response
generatin between  EGA.v1.MemoryArray[19] EGA.v2.MemoryArray[9]
Resource manager Response
generatin between  EGA.v2.MemoryArray[10] EGA.v3.MemoryArray[0]
Resource manager Response
generatin between  EGA.v2.MemoryArray[11] EGA.v3.MemoryArray[1]
Resource manager Response
generatin between  EGA.v2.MemoryArray[12] EGA.v3.MemoryArray[2]
Resource manager Response
generatin between  EGA.v2.MemoryArray[13] EGA.v3.MemoryArray[3]
Resource manager Response
generatin between  EGA.v2.MemoryArray[14] EGA.v3.MemoryArray[4]
Resource manager Response
generatin between  EGA.v2.MemoryArray[15] EGA.v3.MemoryArray[5]
Resource manager Response
generatin between  EGA.v2.MemoryArray[16] EGA.v3.MemoryArray[6]
Resource manager Response
generatin between  EGA.v2.MemoryArray[17] EGA.v3.MemoryArray[7]
Resource manager Response
generatin between  EGA.v2.MemoryArray[18] EGA.v3.MemoryArray[8]
Resource manager Response
generatin between  EGA.v2.MemoryArray[19] EGA.v3.MemoryArray[9]
Resource manager Response
generatin between  EGA.v3.MemoryArray[10] EGA.v4.MemoryArray[0]
Resource manager Response
generatin between  EGA.v3.MemoryArray[11] EGA.v4.MemoryArray[1]
Resource manager Response
generatin between  EGA.v3.MemoryArray[12] EGA.v4.MemoryArray[2]
Resource manager Response
generatin between  EGA.v3.MemoryArray[13] EGA.v4.MemoryArray[3]
Resource manager Response
generatin between  EGA.v3.MemoryArray[14] EGA.v4.MemoryArray[4]
Resource manager Response
generatin between  EGA.v3.MemoryArray[15] EGA.v4.MemoryArray[5]
Resource manager Response
generatin between  EGA.v3.MemoryArray[16] EGA.v4.MemoryArray[6]
Resource manager Response
generatin between  EGA.v3.MemoryArray[17] EGA.v4.MemoryArray[7]
Resource manager Response
generatin between  EGA.v3.MemoryArray[18] EGA.v4.MemoryArray[8]
Resource manager Response
generatin between  EGA.v3.MemoryArray[19] EGA.v4.MemoryArray[9]
Resource manager Response
generatin between  EGA.v5.MemoryArray[10] EGA.v6.MemoryArray[0]
Resource manager Response
generatin between  EGA.v5.MemoryArray[11] EGA.v6.MemoryArray[1]
Resource manager Response
generatin between  EGA.v5.MemoryArray[12] EGA.v6.MemoryArray[2]
Resource manager Response
generatin between  EGA.v5.MemoryArray[13] EGA.v6.MemoryArray[3]
Resource manager Response
generatin between  EGA.v5.MemoryArray[14] EGA.v6.MemoryArray[4]
Resource manager Response
generatin between  EGA.v5.MemoryArray[15] EGA.v6.MemoryArray[5]
Resource manager Response
generatin between  EGA.v5.MemoryArray[16] EGA.v6.MemoryArray[6]
Resource manager Response
generatin between  EGA.v5.MemoryArray[17] EGA.v6.MemoryArray[7]
Resource manager Response
generatin between  EGA.v5.MemoryArray[18] EGA.v6.MemoryArray[8]
Resource manager Response
generatin between  EGA.v5.MemoryArray[19] EGA.v6.MemoryArray[9]
 Protocol match v1 EGA.v1.MemoryArray[0] EGA.v1.MemoryArray[0]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v1 v0
 Protocol match v7 EGA.v7.MemoryArray[0] EGA.v7.MemoryArray[0]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v7 v6
 Protocol match v5 EGA.v5.MemoryArray[0] EGA.v5.MemoryArray[0]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v5 v4
 Protocol match v2 EGA.v2.MemoryArray[0] EGA.v2.MemoryArray[0]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v2 v1
 Protocol match v3 EGA.v3.MemoryArray[0] EGA.v3.MemoryArray[0]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v3 v2
 Protocol match v4 EGA.v4.MemoryArray[0] EGA.v4.MemoryArray[0]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v4 v3
 Protocol match v6 EGA.v6.MemoryArray[0] EGA.v6.MemoryArray[0]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v6 v5
 Protocol match v0 EGA.v0.MemoryArray[0] EGA.v0.MemoryArray[0]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v6 EGA.v6.MemoryArray[10] EGA.v6.MemoryArray[10]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v4 EGA.v4.MemoryArray[10] EGA.v4.MemoryArray[10]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v1 EGA.v1.MemoryArray[10] EGA.v1.MemoryArray[10]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v2 EGA.v2.MemoryArray[10] EGA.v2.MemoryArray[10]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v3 EGA.v3.MemoryArray[10] EGA.v3.MemoryArray[10]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v5 EGA.v5.MemoryArray[10] EGA.v5.MemoryArray[10]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v1 EGA.v1.MemoryArray[0] EGA.v1.MemoryArray[0]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v7 EGA.v7.MemoryArray[0] EGA.v7.MemoryArray[0]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v5 EGA.v5.MemoryArray[0] EGA.v5.MemoryArray[0]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v2 EGA.v2.MemoryArray[0] EGA.v2.MemoryArray[0]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v3 EGA.v3.MemoryArray[0] EGA.v3.MemoryArray[0]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v4 EGA.v4.MemoryArray[0] EGA.v4.MemoryArray[0]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v6 EGA.v6.MemoryArray[0] EGA.v6.MemoryArray[0]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
!!!!!!!!!!!!!!!! emit event v5
!!!!!!!!!!!!!!!! emit event v0
!!!!!!!!!!!!!!!! emit event v6
!!!!!!!!!!!!!!!! emit event v4
!!!!!!!!!!!!!!!! emit event v3
!!!!!!!!!!!!!!!! emit event v1
!!!!!!!!!!!!!!!! emit event v2
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[10]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v3  delay:  250000000.0 and expected message recv time:  5020250175000
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[0]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v4  delay:  250000000.0 and expected message recv time:  5020250175000
BSM_MSG_RECV_TIME:  5020250175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[10]
 Protocol match v3 EGA.v3.MemoryArray[10] EGA.v3.MemoryArray[10]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 10
Resss 10 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v3.MemoryArray[10]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv3v4
added a subtask to dependency  and map status is:	 [('TaskEntGen_v3_v4', ['EGA.v3.MemoryArray[10]'])]
checking eligibility of:	 TaskPurifyRightv3v4
subtasks_available:	 ['EGA.v3.MemoryArray[10]']
dependency_subtasks name:	 EGA.v3.MemoryArray[10]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v3.MemoryArray[10]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v3.MemoryArray[10]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv3v4', ['EP_EGA.v3.MemoryArray[10]']), ('TaskPurifyLeftv3v2', [])]
checking eligibility of:	 TaskSwapMiddlev4v2
Not eligible yet because TaskPurifyLeftv3v2 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5020250175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[0]
 Protocol match v4 EGA.v4.MemoryArray[0] EGA.v4.MemoryArray[0]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v4.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv4v3
added a subtask to dependency  and map status is:	 [('TaskEntGen_v4_v3', ['EGA.v4.MemoryArray[0]'])]
checking eligibility of:	 TaskPurifyLeftv4v3
subtasks_available:	 ['EGA.v4.MemoryArray[0]']
dependency_subtasks name:	 EGA.v4.MemoryArray[0]
inside ent_purify_action1
ReservationProtocol_v4_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v4.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v4.MemoryArray[0]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v4.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv4v3', ['EP_EGA.v4.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapRightEndv4v2
subtasks_available:	 ['EP_EGA.v4.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.v4.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v4.MemoryArray[0]']
True
task.name: TaskSwapRightEndv4v2  for node: v4 and memory returned for this: 0
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[10]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v4  delay:  250000000.0 and expected message recv time:  5020750175000
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[0]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v5  delay:  250000000.0 and expected message recv time:  5020750175000
BSM_MSG_RECV_TIME:  5020750175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[10]
 Protocol match v4 EGA.v4.MemoryArray[10] EGA.v4.MemoryArray[10]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 10
Resss 10 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v4.MemoryArray[10]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv4v5
added a subtask to dependency  and map status is:	 [('TaskEntGen_v4_v5', ['EGA.v4.MemoryArray[10]'])]
checking eligibility of:	 TaskPurifyRightv4v5
subtasks_available:	 ['EGA.v4.MemoryArray[10]']
dependency_subtasks name:	 EGA.v4.MemoryArray[10]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v4.MemoryArray[10]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v4.MemoryArray[10]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv4v6
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv4v5', ['EP_EGA.v4.MemoryArray[10]'])]
checking eligibility of:	 TaskSwapLeftEndv4v6
subtasks_available:	 ['EP_EGA.v4.MemoryArray[10]']
dependency_subtasks name:	 EP_EGA.v4.MemoryArray[10]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v4.MemoryArray[10]']
True
task.name: TaskSwapLeftEndv4v6  for node: v4 and memory returned for this: 10
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5020750175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[0]
 Protocol match v5 EGA.v5.MemoryArray[0] EGA.v5.MemoryArray[0]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v5.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv5v4
added a subtask to dependency  and map status is:	 [('TaskEntGen_v5_v4', ['EGA.v5.MemoryArray[0]'])]
checking eligibility of:	 TaskPurifyLeftv5v4
subtasks_available:	 ['EGA.v5.MemoryArray[0]']
dependency_subtasks name:	 EGA.v5.MemoryArray[0]
inside ent_purify_action1
ReservationProtocol_v5_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v5.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v5.MemoryArray[0]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v5.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv5v6', []), ('TaskPurifyLeftv5v4', ['EP_EGA.v5.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapMiddlev6v4
Not eligible yet because TaskPurifyRightv5v6 does not have an instance to allocate
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v0  and reciver_protocol is:  EGA.v0.MemoryArray[0]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v0  delay:  250000000.0 and expected message recv time:  5024250175000
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[0]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v1  delay:  250000000.0 and expected message recv time:  5024250175000
BSM_MSG_RECV_TIME:  5024250175000  at node:  v0
push message at  v0  msg.receiver:  EGA.v0.MemoryArray[0]
 Protocol match v0 EGA.v0.MemoryArray[0] EGA.v0.MemoryArray[0]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v0.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv0v1
added a subtask to dependency  and map status is:	 [('TaskEntGen_v0_v1', ['EGA.v0.MemoryArray[0]'])]
checking eligibility of:	 TaskPurifyRightv0v1
subtasks_available:	 ['EGA.v0.MemoryArray[0]']
dependency_subtasks name:	 EGA.v0.MemoryArray[0]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v0.MemoryArray[0]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v0.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv0v1', ['EP_EGA.v0.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapLeftEndv0v2
subtasks_available:	 ['EP_EGA.v0.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.v0.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v0.MemoryArray[0]']
True
task.name: TaskSwapLeftEndv0v2  for node: v0 and memory returned for this: 0
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5024250175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[0]
 Protocol match v1 EGA.v1.MemoryArray[0] EGA.v1.MemoryArray[0]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v1.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv1v0
added a subtask to dependency  and map status is:	 [('TaskEntGen_v1_v0', ['EGA.v1.MemoryArray[0]'])]
checking eligibility of:	 TaskPurifyLeftv1v0
subtasks_available:	 ['EGA.v1.MemoryArray[0]']
dependency_subtasks name:	 EGA.v1.MemoryArray[0]
inside ent_purify_action1
ReservationProtocol_v1_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v1.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v1.MemoryArray[0]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v1.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv1v2', []), ('TaskPurifyLeftv1v0', ['EP_EGA.v1.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapMiddlev2v0
Not eligible yet because TaskPurifyRightv1v2 does not have an instance to allocate
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[10]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v6  delay:  250000000.0 and expected message recv time:  5033750175000
sending messages to:  v7  and reciver_protocol is:  EGA.v7.MemoryArray[0]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v7  delay:  250000000.0 and expected message recv time:  5033750175000
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[10]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v4  delay:  250000000.0 and expected message recv time:  5033750175000
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[0]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v5  delay:  250000000.0 and expected message recv time:  5033750175000
BSM_MSG_RECV_TIME:  5033750175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[10]
 Protocol match v6 EGA.v6.MemoryArray[10] EGA.v6.MemoryArray[10]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 10
Resss 10 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[10]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv6v7
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v7', ['EGA.v6.MemoryArray[10]'])]
checking eligibility of:	 TaskPurifyRightv6v7
subtasks_available:	 ['EGA.v6.MemoryArray[10]']
dependency_subtasks name:	 EGA.v6.MemoryArray[10]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[10]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[10]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv6v7', ['EP_EGA.v6.MemoryArray[10]']), ('TaskSwapRightEndv6v4', [])]
checking eligibility of:	 TaskSwapMiddlev7v4
Not eligible yet because TaskSwapRightEndv6v4 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5033750175000  at node:  v7
push message at  v7  msg.receiver:  EGA.v7.MemoryArray[0]
 Protocol match v7 EGA.v7.MemoryArray[0] EGA.v7.MemoryArray[0]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v7.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv7v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v7_v6', ['EGA.v7.MemoryArray[0]'])]
checking eligibility of:	 TaskPurifyLeftv7v6
subtasks_available:	 ['EGA.v7.MemoryArray[0]']
dependency_subtasks name:	 EGA.v7.MemoryArray[0]
inside ent_purify_action1
ReservationProtocol_v7_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v7.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v7.MemoryArray[0]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v7.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv7v6', ['EP_EGA.v7.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapRightEndv7v4
subtasks_available:	 ['EP_EGA.v7.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.v7.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v7.MemoryArray[0]']
True
task.name: TaskSwapRightEndv7v4  for node: v7 and memory returned for this: 0
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5033750175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[10]
BSM_MSG_RECV_TIME:  5033750175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[0]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[10]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v5  delay:  250000000.0 and expected message recv time:  5035750175000
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[0]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v6  delay:  250000000.0 and expected message recv time:  5035750175000
BSM_MSG_RECV_TIME:  5035750175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[10]
 Protocol match v5 EGA.v5.MemoryArray[10] EGA.v5.MemoryArray[10]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 10
Resss 10 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v5.MemoryArray[10]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv5v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v5_v6', ['EGA.v5.MemoryArray[10]'])]
checking eligibility of:	 TaskPurifyRightv5v6
subtasks_available:	 ['EGA.v5.MemoryArray[10]']
dependency_subtasks name:	 EGA.v5.MemoryArray[10]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v5.MemoryArray[10]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v5.MemoryArray[10]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv5v6', ['EP_EGA.v5.MemoryArray[10]']), ('TaskPurifyLeftv5v4', ['EP_EGA.v5.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapMiddlev6v4
subtasks_available:	 ['EP_EGA.v5.MemoryArray[10]', 'EP_EGA.v5.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.v5.MemoryArray[10]
dependency_subtasks name:	 EP_EGA.v5.MemoryArray[0]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v5
inside task actin: left_m :v4 right_m: v6 and mid: v4 and self.own.name: v5
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v5.MemoryArray[10]
purify_subtask_right:  EP_EGA.v5.MemoryArray[0]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v5.MemoryArray[10]', 'EP_EGA.v5.MemoryArray[0]']
True
Make use of newly created swap subtask :  ESA.v5.MemoryArray[0].v5.MemoryArray[10]
task.name: TaskSwapMiddlev6v4  for node: v5 and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v4  delay:  500000000.0 and expected message recv time:  5036250175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x156625670>
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v6  delay:  500000000.0 and expected message recv time:  5036250175000
dst, req_func:	 v6 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x1566258b0>
Meas result end
BSM_MSG_RECV_TIME:  5035750175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[0]
 Protocol match v6 EGA.v6.MemoryArray[0] EGA.v6.MemoryArray[0]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv6v5
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v5', ['EGA.v6.MemoryArray[0]'])]
checking eligibility of:	 TaskPurifyLeftv6v5
subtasks_available:	 ['EGA.v6.MemoryArray[0]']
dependency_subtasks name:	 EGA.v6.MemoryArray[0]
inside ent_purify_action1
ReservationProtocol_v6_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v6.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[0]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv6v5', ['EP_EGA.v6.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapRightEndv6v4
subtasks_available:	 ['EP_EGA.v6.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.v6.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v6.MemoryArray[0]']
True
task.name: TaskSwapRightEndv6v4  for node: v6 and memory returned for this: 0
dst, req_func:	 None None
Meas result end
REQ_FUNC_RECV_TIME:  5036250175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x156a8a730>
Protocol Name:  ESB.v4.MemoryArray[10]
REQ_FUNC_RECV_TIME:  5036250175000  at node:  v6
push message at  v6  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x156a8a730>
Protocol Name:  ESB.v6.MemoryArray[0]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v5.MemoryArray[0].v5.MemoryArray[10]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 10
Resss 10 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v4 ESB.v4.MemoryArray[10] ESB.v4.MemoryArray[10]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v4.MemoryArray[10]', 'fidelity': 0.8304014059736002, 'remote_node': 'v6', 'remote_memo': 'v6.MemoryArray[0]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 10
Resss 10 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v6.MemoryArray[0]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[10]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv4v7
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v6', ['ESB.v4.MemoryArray[10]'])]
checking eligibility of:	 TaskSwapLeftEndv4v7
subtasks_available:	 ['ESB.v4.MemoryArray[10]']
dependency_subtasks name:	 ESB.v4.MemoryArray[10]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[10]']
True
task.name: TaskSwapLeftEndv4v7  for node: v4 and memory returned for this: 10
dst, req_func:	 None None
 Protocol match v6 ESB.v6.MemoryArray[0] ESB.v6.MemoryArray[0]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v6.MemoryArray[0]', 'fidelity': 0.8304014059736002, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[10]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v6', 'v4.MemoryArray[10]')
########Subtask Succeeded############## subtask.protocol name ESB.v6.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv6v7', ['EP_EGA.v6.MemoryArray[10]']), ('TaskSwapRightEndv6v4', ['ESB.v6.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapMiddlev7v4
subtasks_available:	 ['EP_EGA.v6.MemoryArray[10]', 'ESB.v6.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.v6.MemoryArray[10]
dependency_subtasks name:	 ESB.v6.MemoryArray[0]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v6
inside task actin: left_m :v4 right_m: v7 and mid: v4 and self.own.name: v6
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v6.MemoryArray[10]
purify_subtask_right:  ESB.v6.MemoryArray[0]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v6.MemoryArray[10]', 'ESB.v6.MemoryArray[0]']
True
Make use of newly created swap subtask :  ESA.v6.MemoryArray[0].v6.MemoryArray[10]
task.name: TaskSwapMiddlev7v4  for node: v6 and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v4  delay:  500000000.0 and expected message recv time:  5037750175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x156625c10>
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v7  delay:  500000000.0 and expected message recv time:  5037750175000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x156625ca0>
REQ_FUNC_RECV_TIME:  5037750175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x156abc1c0>
Protocol Name:  ESB.v4.MemoryArray[10]
REQ_FUNC_RECV_TIME:  5037750175000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x156abc1c0>
Protocol Name:  ESB.v7.MemoryArray[0]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v6.MemoryArray[0].v6.MemoryArray[10]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 10
Resss 10 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v4 ESB.v4.MemoryArray[10] ESB.v4.MemoryArray[10]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v4.MemoryArray[10]', 'fidelity': 0.7375541591274104, 'remote_node': 'v7', 'remote_memo': 'v7.MemoryArray[0]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 10
Resss 10 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v7.MemoryArray[0]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[10]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v7', ['ESB.v4.MemoryArray[10]']), ('TaskSwapRightEndv4v0', [])]
checking eligibility of:	 TaskSwapMiddlev7v0
Not eligible yet because TaskSwapRightEndv4v0 does not have an instance to allocate
 Protocol match v7 ESB.v7.MemoryArray[0] ESB.v7.MemoryArray[0]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v7.MemoryArray[0]', 'fidelity': 0.7375541591274104, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[10]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v7', 'v4.MemoryArray[10]')
########Subtask Succeeded############## subtask.protocol name ESB.v7.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv7v0
added a subtask to dependency  and map status is:	 [('TaskSwapRightEndv7v4', ['ESB.v7.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapRightEndv7v0
subtasks_available:	 ['ESB.v7.MemoryArray[0]']
dependency_subtasks name:	 ESB.v7.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v7.MemoryArray[0]']
True
task.name: TaskSwapRightEndv7v0  for node: v7 and memory returned for this: 0
dst, req_func:	 None None
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[10]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v1_v2  dest:  v1  delay:  250000000.0 and expected message recv time:  5039250175000
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[0]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v1_v2  dest:  v2  delay:  250000000.0 and expected message recv time:  5039250175000
BSM_MSG_RECV_TIME:  5039250175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[10]
 Protocol match v1 EGA.v1.MemoryArray[10] EGA.v1.MemoryArray[10]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 10
Resss 10 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v1.MemoryArray[10]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv1v2
added a subtask to dependency  and map status is:	 [('TaskEntGen_v1_v2', ['EGA.v1.MemoryArray[10]'])]
checking eligibility of:	 TaskPurifyRightv1v2
subtasks_available:	 ['EGA.v1.MemoryArray[10]']
dependency_subtasks name:	 EGA.v1.MemoryArray[10]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v1.MemoryArray[10]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v1.MemoryArray[10]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv1v2', ['EP_EGA.v1.MemoryArray[10]']), ('TaskPurifyLeftv1v0', ['EP_EGA.v1.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapMiddlev2v0
subtasks_available:	 ['EP_EGA.v1.MemoryArray[10]', 'EP_EGA.v1.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.v1.MemoryArray[10]
dependency_subtasks name:	 EP_EGA.v1.MemoryArray[0]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v1
inside task actin: left_m :v0 right_m: v2 and mid: v4 and self.own.name: v1
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v1.MemoryArray[10]
purify_subtask_right:  EP_EGA.v1.MemoryArray[0]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v1.MemoryArray[10]', 'EP_EGA.v1.MemoryArray[0]']
True
Make use of newly created swap subtask :  ESA.v1.MemoryArray[0].v1.MemoryArray[10]
task.name: TaskSwapMiddlev2v0  for node: v1 and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v0  delay:  500000000.0 and expected message recv time:  5039750175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x156af20d0>
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v2  delay:  500000000.0 and expected message recv time:  5039750175000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x156af2160>
Meas result end
BSM_MSG_RECV_TIME:  5039250175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[0]
 Protocol match v2 EGA.v2.MemoryArray[0] EGA.v2.MemoryArray[0]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v2.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv2v1
added a subtask to dependency  and map status is:	 [('TaskEntGen_v2_v1', ['EGA.v2.MemoryArray[0]'])]
checking eligibility of:	 TaskPurifyLeftv2v1
subtasks_available:	 ['EGA.v2.MemoryArray[0]']
dependency_subtasks name:	 EGA.v2.MemoryArray[0]
inside ent_purify_action1
ReservationProtocol_v2_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v2.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v2.MemoryArray[0]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v2.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv2v1', ['EP_EGA.v2.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapRightEndv2v0
subtasks_available:	 ['EP_EGA.v2.MemoryArray[0]']
dependency_subtasks name:	 EP_EGA.v2.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v2.MemoryArray[0]']
True
task.name: TaskSwapRightEndv2v0  for node: v2 and memory returned for this: 0
dst, req_func:	 None None
Meas result end
REQ_FUNC_RECV_TIME:  5039750175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x156af1370>
Protocol Name:  ESB.v0.MemoryArray[0]
REQ_FUNC_RECV_TIME:  5039750175000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x156af1370>
Protocol Name:  ESB.v2.MemoryArray[0]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v1.MemoryArray[0].v1.MemoryArray[10]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 10
Resss 10 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v0 ESB.v0.MemoryArray[0] ESB.v0.MemoryArray[0]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[0]', 'fidelity': 0.8304014059736002, 'remote_node': 'v2', 'remote_memo': 'v2.MemoryArray[0]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v2.MemoryArray[0]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v4
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv0v2', ['ESB.v0.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapLeftEndv0v4
subtasks_available:	 ['ESB.v0.MemoryArray[0]']
dependency_subtasks name:	 ESB.v0.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v0.MemoryArray[0]']
True
task.name: TaskSwapLeftEndv0v4  for node: v0 and memory returned for this: 0
dst, req_func:	 None None
 Protocol match v2 ESB.v2.MemoryArray[0] ESB.v2.MemoryArray[0]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v2.MemoryArray[0]', 'fidelity': 0.8304014059736002, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[0]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v2', 'v0.MemoryArray[0]')
########Subtask Succeeded############## subtask.protocol name ESB.v2.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv2v4', []), ('TaskSwapRightEndv2v0', ['ESB.v2.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapMiddlev4v0
Not eligible yet because TaskSwapLeftEndv2v4 does not have an instance to allocate
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6ac0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6ac0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6af0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b20>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b50>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b80>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6bb0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6be0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c10>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c40>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c70>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9b80> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9b80>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9bb0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9be0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c10>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c40>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c70>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9ca0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9cd0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d30>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea00> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea30>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea60>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea90>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feac0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feaf0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb20>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb50>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb80>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565febb0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610880> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610880>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566108b0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566108e0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610970>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109a0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109d0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a30>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606940> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606970>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566069a0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566069d0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a30>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a60>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a90>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606ac0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606af0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a7c0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a7c0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a7f0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a820>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a850>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a880>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a8b0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a8e0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a970>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e97c0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e97c0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e97f0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9820>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9850>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9880>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e98b0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e98e0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9970>]
 Protocol match v4 EGA.v4.MemoryArray[1] EGA.v4.MemoryArray[1]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v4 v3
 Protocol match v6 EGA.v6.MemoryArray[1] EGA.v6.MemoryArray[1]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v6 v5
 Protocol match v1 EGA.v1.MemoryArray[1] EGA.v1.MemoryArray[1]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v1 v0
 Protocol match v3 EGA.v3.MemoryArray[1] EGA.v3.MemoryArray[1]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v3 v2
 Protocol match v2 EGA.v2.MemoryArray[1] EGA.v2.MemoryArray[1]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v2 v1
 Protocol match v5 EGA.v5.MemoryArray[1] EGA.v5.MemoryArray[1]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v5 v4
 Protocol match v7 EGA.v7.MemoryArray[1] EGA.v7.MemoryArray[1]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v7 v6
 Protocol match v3 EGA.v3.MemoryArray[11] EGA.v3.MemoryArray[11]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v5 EGA.v5.MemoryArray[11] EGA.v5.MemoryArray[11]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v0 EGA.v0.MemoryArray[1] EGA.v0.MemoryArray[1]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v2 EGA.v2.MemoryArray[11] EGA.v2.MemoryArray[11]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v1 EGA.v1.MemoryArray[11] EGA.v1.MemoryArray[11]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v4 EGA.v4.MemoryArray[11] EGA.v4.MemoryArray[11]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v6 EGA.v6.MemoryArray[11] EGA.v6.MemoryArray[11]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v4 EGA.v4.MemoryArray[1] EGA.v4.MemoryArray[1]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v6 EGA.v6.MemoryArray[1] EGA.v6.MemoryArray[1]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v1 EGA.v1.MemoryArray[1] EGA.v1.MemoryArray[1]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v3 EGA.v3.MemoryArray[1] EGA.v3.MemoryArray[1]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v2 EGA.v2.MemoryArray[1] EGA.v2.MemoryArray[1]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v5 EGA.v5.MemoryArray[1] EGA.v5.MemoryArray[1]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v7 EGA.v7.MemoryArray[1] EGA.v7.MemoryArray[1]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
!!!!!!!!!!!!!!!! emit event v1
!!!!!!!!!!!!!!!! emit event v0
!!!!!!!!!!!!!!!! emit event v2
!!!!!!!!!!!!!!!! emit event v3
!!!!!!!!!!!!!!!! emit event v5
!!!!!!!!!!!!!!!! emit event v4
!!!!!!!!!!!!!!!! emit event v6
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[11]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v4  delay:  250000000.0 and expected message recv time:  5062750175000
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[1]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v5  delay:  250000000.0 and expected message recv time:  5062750175000
BSM_MSG_RECV_TIME:  5062750175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[11]
 Protocol match v4 EGA.v4.MemoryArray[11] EGA.v4.MemoryArray[11]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 11
Resss 11 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v4.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv4v5
added a subtask to dependency  and map status is:	 [('TaskEntGen_v4_v5', ['EGA.v4.MemoryArray[11]'])]
checking eligibility of:	 TaskPurifyRightv4v5
subtasks_available:	 ['EGA.v4.MemoryArray[11]']
dependency_subtasks name:	 EGA.v4.MemoryArray[11]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v4.MemoryArray[11]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v4.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv4v6
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv4v5', ['EP_EGA.v4.MemoryArray[11]'])]
checking eligibility of:	 TaskSwapLeftEndv4v6
subtasks_available:	 ['EP_EGA.v4.MemoryArray[11]']
dependency_subtasks name:	 EP_EGA.v4.MemoryArray[11]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v4.MemoryArray[11]']
True
task.name: TaskSwapLeftEndv4v6  for node: v4 and memory returned for this: 11
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5062750175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[1]
 Protocol match v5 EGA.v5.MemoryArray[1] EGA.v5.MemoryArray[1]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v5.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv5v4
added a subtask to dependency  and map status is:	 [('TaskEntGen_v5_v4', ['EGA.v5.MemoryArray[1]'])]
checking eligibility of:	 TaskPurifyLeftv5v4
subtasks_available:	 ['EGA.v5.MemoryArray[1]']
dependency_subtasks name:	 EGA.v5.MemoryArray[1]
inside ent_purify_action1
ReservationProtocol_v5_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v5.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v5.MemoryArray[1]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v5.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv5v6', []), ('TaskPurifyLeftv5v4', ['EP_EGA.v5.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapMiddlev6v4
Not eligible yet because TaskPurifyRightv5v6 does not have an instance to allocate
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[11]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v6  delay:  250000000.0 and expected message recv time:  5063250175000
sending messages to:  v7  and reciver_protocol is:  EGA.v7.MemoryArray[1]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v7  delay:  250000000.0 and expected message recv time:  5063250175000
BSM_MSG_RECV_TIME:  5063250175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[11]
 Protocol match v6 EGA.v6.MemoryArray[11] EGA.v6.MemoryArray[11]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 11
Resss 11 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv6v7
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v7', ['EGA.v6.MemoryArray[11]'])]
checking eligibility of:	 TaskPurifyRightv6v7
subtasks_available:	 ['EGA.v6.MemoryArray[11]']
dependency_subtasks name:	 EGA.v6.MemoryArray[11]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[11]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv6v7', ['EP_EGA.v6.MemoryArray[11]']), ('TaskSwapRightEndv6v4', [])]
checking eligibility of:	 TaskSwapMiddlev7v4
Not eligible yet because TaskSwapRightEndv6v4 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5063250175000  at node:  v7
push message at  v7  msg.receiver:  EGA.v7.MemoryArray[1]
 Protocol match v7 EGA.v7.MemoryArray[1] EGA.v7.MemoryArray[1]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v7.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv7v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v7_v6', ['EGA.v7.MemoryArray[1]'])]
checking eligibility of:	 TaskPurifyLeftv7v6
subtasks_available:	 ['EGA.v7.MemoryArray[1]']
dependency_subtasks name:	 EGA.v7.MemoryArray[1]
inside ent_purify_action1
ReservationProtocol_v7_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v7.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v7.MemoryArray[1]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v7.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv7v6', ['EP_EGA.v7.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapRightEndv7v4
subtasks_available:	 ['EP_EGA.v7.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.v7.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v7.MemoryArray[1]']
True
task.name: TaskSwapRightEndv7v4  for node: v7 and memory returned for this: 1
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v0  and reciver_protocol is:  EGA.v0.MemoryArray[1]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v0  delay:  250000000.0 and expected message recv time:  5072250175000
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[1]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v1  delay:  250000000.0 and expected message recv time:  5072250175000
BSM_MSG_RECV_TIME:  5072250175000  at node:  v0
push message at  v0  msg.receiver:  EGA.v0.MemoryArray[1]
 Protocol match v0 EGA.v0.MemoryArray[1] EGA.v0.MemoryArray[1]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v0.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv0v1
added a subtask to dependency  and map status is:	 [('TaskEntGen_v0_v1', ['EGA.v0.MemoryArray[1]'])]
checking eligibility of:	 TaskPurifyRightv0v1
subtasks_available:	 ['EGA.v0.MemoryArray[1]']
dependency_subtasks name:	 EGA.v0.MemoryArray[1]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v0.MemoryArray[1]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v0.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv0v1', ['EP_EGA.v0.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapLeftEndv0v2
subtasks_available:	 ['EP_EGA.v0.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.v0.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v0.MemoryArray[1]']
True
task.name: TaskSwapLeftEndv0v2  for node: v0 and memory returned for this: 1
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5072250175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[1]
 Protocol match v1 EGA.v1.MemoryArray[1] EGA.v1.MemoryArray[1]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v1.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv1v0
added a subtask to dependency  and map status is:	 [('TaskEntGen_v1_v0', ['EGA.v1.MemoryArray[1]'])]
checking eligibility of:	 TaskPurifyLeftv1v0
subtasks_available:	 ['EGA.v1.MemoryArray[1]']
dependency_subtasks name:	 EGA.v1.MemoryArray[1]
inside ent_purify_action1
ReservationProtocol_v1_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v1.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v1.MemoryArray[1]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v1.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv1v2', []), ('TaskPurifyLeftv1v0', ['EP_EGA.v1.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapMiddlev2v0
Not eligible yet because TaskPurifyRightv1v2 does not have an instance to allocate
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[11]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v3  delay:  250000000.0 and expected message recv time:  5074250175000
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[1]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v4  delay:  250000000.0 and expected message recv time:  5074250175000
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[11]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v5  delay:  250000000.0 and expected message recv time:  5074250175000
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[1]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v6  delay:  250000000.0 and expected message recv time:  5074250175000
BSM_MSG_RECV_TIME:  5074250175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[11]
 Protocol match v3 EGA.v3.MemoryArray[11] EGA.v3.MemoryArray[11]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 11
Resss 11 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v3.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv3v4
added a subtask to dependency  and map status is:	 [('TaskEntGen_v3_v4', ['EGA.v3.MemoryArray[11]'])]
checking eligibility of:	 TaskPurifyRightv3v4
subtasks_available:	 ['EGA.v3.MemoryArray[11]']
dependency_subtasks name:	 EGA.v3.MemoryArray[11]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v3.MemoryArray[11]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v3.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv3v4', ['EP_EGA.v3.MemoryArray[10]', 'EP_EGA.v3.MemoryArray[11]']), ('TaskPurifyLeftv3v2', [])]
checking eligibility of:	 TaskSwapMiddlev4v2
Not eligible yet because TaskPurifyLeftv3v2 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5074250175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[1]
 Protocol match v4 EGA.v4.MemoryArray[1] EGA.v4.MemoryArray[1]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v4.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv4v3
added a subtask to dependency  and map status is:	 [('TaskEntGen_v4_v3', ['EGA.v4.MemoryArray[1]'])]
checking eligibility of:	 TaskPurifyLeftv4v3
subtasks_available:	 ['EGA.v4.MemoryArray[1]']
dependency_subtasks name:	 EGA.v4.MemoryArray[1]
inside ent_purify_action1
ReservationProtocol_v4_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v4.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v4.MemoryArray[1]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v4.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv4v3', ['EP_EGA.v4.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapRightEndv4v2
subtasks_available:	 ['EP_EGA.v4.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.v4.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v4.MemoryArray[1]']
True
task.name: TaskSwapRightEndv4v2  for node: v4 and memory returned for this: 1
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5074250175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[11]
 Protocol match v5 EGA.v5.MemoryArray[11] EGA.v5.MemoryArray[11]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 11
Resss 11 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v5.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv5v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v5_v6', ['EGA.v5.MemoryArray[11]'])]
checking eligibility of:	 TaskPurifyRightv5v6
subtasks_available:	 ['EGA.v5.MemoryArray[11]']
dependency_subtasks name:	 EGA.v5.MemoryArray[11]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v5.MemoryArray[11]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v5.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv5v6', ['EP_EGA.v5.MemoryArray[11]']), ('TaskPurifyLeftv5v4', ['EP_EGA.v5.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapMiddlev6v4
subtasks_available:	 ['EP_EGA.v5.MemoryArray[11]', 'EP_EGA.v5.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.v5.MemoryArray[11]
dependency_subtasks name:	 EP_EGA.v5.MemoryArray[1]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v5
inside task actin: left_m :v4 right_m: v6 and mid: v4 and self.own.name: v5
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v5.MemoryArray[11]
purify_subtask_right:  EP_EGA.v5.MemoryArray[1]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v5.MemoryArray[11]', 'EP_EGA.v5.MemoryArray[1]']
True
Make use of newly created swap subtask :  ESA.v5.MemoryArray[1].v5.MemoryArray[11]
task.name: TaskSwapMiddlev6v4  for node: v5 and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v4  delay:  500000000.0 and expected message recv time:  5074750175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x156af2c10>
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v6  delay:  500000000.0 and expected message recv time:  5074750175000
dst, req_func:	 v6 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x156af2ca0>
Meas result end
BSM_MSG_RECV_TIME:  5074250175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[1]
 Protocol match v6 EGA.v6.MemoryArray[1] EGA.v6.MemoryArray[1]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv6v5
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v5', ['EGA.v6.MemoryArray[1]'])]
checking eligibility of:	 TaskPurifyLeftv6v5
subtasks_available:	 ['EGA.v6.MemoryArray[1]']
dependency_subtasks name:	 EGA.v6.MemoryArray[1]
inside ent_purify_action1
ReservationProtocol_v6_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v6.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[1]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv6v5', ['EP_EGA.v6.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapRightEndv6v4
subtasks_available:	 ['EP_EGA.v6.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.v6.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v6.MemoryArray[1]']
True
task.name: TaskSwapRightEndv6v4  for node: v6 and memory returned for this: 1
dst, req_func:	 None None
Meas result end
REQ_FUNC_RECV_TIME:  5074750175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x156f25fa0>
Protocol Name:  ESB.v4.MemoryArray[11]
REQ_FUNC_RECV_TIME:  5074750175000  at node:  v6
push message at  v6  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x156f25fa0>
Protocol Name:  ESB.v6.MemoryArray[1]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v5.MemoryArray[1].v5.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 11
Resss 11 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v4 ESB.v4.MemoryArray[11] ESB.v4.MemoryArray[11]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v4.MemoryArray[11]', 'fidelity': 0.8304014059736002, 'remote_node': 'v6', 'remote_memo': 'v6.MemoryArray[1]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 11
Resss 11 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v6.MemoryArray[1]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv4v7
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v6', ['ESB.v4.MemoryArray[11]'])]
checking eligibility of:	 TaskSwapLeftEndv4v7
subtasks_available:	 ['ESB.v4.MemoryArray[11]']
dependency_subtasks name:	 ESB.v4.MemoryArray[11]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[11]']
True
task.name: TaskSwapLeftEndv4v7  for node: v4 and memory returned for this: 11
dst, req_func:	 None None
 Protocol match v6 ESB.v6.MemoryArray[1] ESB.v6.MemoryArray[1]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v6.MemoryArray[1]', 'fidelity': 0.8304014059736002, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[11]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v6', 'v4.MemoryArray[11]')
########Subtask Succeeded############## subtask.protocol name ESB.v6.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv6v7', ['EP_EGA.v6.MemoryArray[11]']), ('TaskSwapRightEndv6v4', ['ESB.v6.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapMiddlev7v4
subtasks_available:	 ['EP_EGA.v6.MemoryArray[11]', 'ESB.v6.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.v6.MemoryArray[11]
dependency_subtasks name:	 ESB.v6.MemoryArray[1]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v6
inside task actin: left_m :v4 right_m: v7 and mid: v4 and self.own.name: v6
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v6.MemoryArray[11]
purify_subtask_right:  ESB.v6.MemoryArray[1]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v6.MemoryArray[11]', 'ESB.v6.MemoryArray[1]']
True
Make use of newly created swap subtask :  ESA.v6.MemoryArray[1].v6.MemoryArray[11]
task.name: TaskSwapMiddlev7v4  for node: v6 and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v4  delay:  500000000.0 and expected message recv time:  5076250175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x156af2e50>
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v7  delay:  500000000.0 and expected message recv time:  5076250175000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x156af2ee0>
REQ_FUNC_RECV_TIME:  5076250175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x156f4ceb0>
Protocol Name:  ESB.v4.MemoryArray[11]
REQ_FUNC_RECV_TIME:  5076250175000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x156f4ceb0>
Protocol Name:  ESB.v7.MemoryArray[1]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v6.MemoryArray[1].v6.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 11
Resss 11 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v4 ESB.v4.MemoryArray[11] ESB.v4.MemoryArray[11]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v4.MemoryArray[11]', 'fidelity': 0.7375541591274104, 'remote_node': 'v7', 'remote_memo': 'v7.MemoryArray[1]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 11
Resss 11 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v7.MemoryArray[1]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v7', ['ESB.v4.MemoryArray[10]', 'ESB.v4.MemoryArray[11]']), ('TaskSwapRightEndv4v0', [])]
checking eligibility of:	 TaskSwapMiddlev7v0
Not eligible yet because TaskSwapRightEndv4v0 does not have an instance to allocate
 Protocol match v7 ESB.v7.MemoryArray[1] ESB.v7.MemoryArray[1]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v7.MemoryArray[1]', 'fidelity': 0.7375541591274104, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[11]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v7', 'v4.MemoryArray[11]')
########Subtask Succeeded############## subtask.protocol name ESB.v7.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv7v0
added a subtask to dependency  and map status is:	 [('TaskSwapRightEndv7v4', ['ESB.v7.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapRightEndv7v0
subtasks_available:	 ['ESB.v7.MemoryArray[1]']
dependency_subtasks name:	 ESB.v7.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v7.MemoryArray[1]']
True
task.name: TaskSwapRightEndv7v0  for node: v7 and memory returned for this: 1
dst, req_func:	 None None
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[11]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v4  delay:  250000000.0 and expected message recv time:  5078750175000
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[1]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v5  delay:  250000000.0 and expected message recv time:  5078750175000
BSM_MSG_RECV_TIME:  5078750175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[11]
BSM_MSG_RECV_TIME:  5078750175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[1]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v0  and reciver_protocol is:  EGA.v0.MemoryArray[1]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v0  delay:  250000000.0 and expected message recv time:  5086250175000
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[1]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v1  delay:  250000000.0 and expected message recv time:  5086250175000
BSM_MSG_RECV_TIME:  5086250175000  at node:  v0
push message at  v0  msg.receiver:  EGA.v0.MemoryArray[1]
BSM_MSG_RECV_TIME:  5086250175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[1]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[11]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v2  delay:  250000000.0 and expected message recv time:  5090250175000
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[1]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v3  delay:  250000000.0 and expected message recv time:  5090250175000
BSM_MSG_RECV_TIME:  5090250175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[11]
 Protocol match v2 EGA.v2.MemoryArray[11] EGA.v2.MemoryArray[11]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 11
Resss 11 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v2.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv2v3
added a subtask to dependency  and map status is:	 [('TaskEntGen_v2_v3', ['EGA.v2.MemoryArray[11]'])]
checking eligibility of:	 TaskPurifyRightv2v3
subtasks_available:	 ['EGA.v2.MemoryArray[11]']
dependency_subtasks name:	 EGA.v2.MemoryArray[11]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v2.MemoryArray[11]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v2.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv2v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv2v3', ['EP_EGA.v2.MemoryArray[11]'])]
checking eligibility of:	 TaskSwapLeftEndv2v4
subtasks_available:	 ['EP_EGA.v2.MemoryArray[11]']
dependency_subtasks name:	 EP_EGA.v2.MemoryArray[11]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v2.MemoryArray[11]']
True
task.name: TaskSwapLeftEndv2v4  for node: v2 and memory returned for this: 11
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5090250175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[1]
 Protocol match v3 EGA.v3.MemoryArray[1] EGA.v3.MemoryArray[1]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v3.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv3v2
added a subtask to dependency  and map status is:	 [('TaskEntGen_v3_v2', ['EGA.v3.MemoryArray[1]'])]
checking eligibility of:	 TaskPurifyLeftv3v2
subtasks_available:	 ['EGA.v3.MemoryArray[1]']
dependency_subtasks name:	 EGA.v3.MemoryArray[1]
inside ent_purify_action1
ReservationProtocol_v3_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v3.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v3.MemoryArray[1]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v3.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv3v4', ['EP_EGA.v3.MemoryArray[10]', 'EP_EGA.v3.MemoryArray[11]']), ('TaskPurifyLeftv3v2', ['EP_EGA.v3.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapMiddlev4v2
subtasks_available:	 ['EP_EGA.v3.MemoryArray[10]', 'EP_EGA.v3.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.v3.MemoryArray[10]
dependency_subtasks name:	 EP_EGA.v3.MemoryArray[1]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v3
inside task actin: left_m :v2 right_m: v4 and mid: v4 and self.own.name: v3
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v3.MemoryArray[10]
purify_subtask_right:  EP_EGA.v3.MemoryArray[1]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v3.MemoryArray[10]', 'EP_EGA.v3.MemoryArray[1]']
True
Make use of newly created swap subtask :  ESA.v3.MemoryArray[1].v3.MemoryArray[10]
task.name: TaskSwapMiddlev4v2  for node: v3 and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v2  delay:  500000000.0 and expected message recv time:  5090750175000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x156f7f310>
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v4  delay:  500000000.0 and expected message recv time:  5090750175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x156f7f3a0>
Meas result end
REQ_FUNC_RECV_TIME:  5090750175000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1570cb3a0>
Protocol Name:  ESB.v2.MemoryArray[11]
REQ_FUNC_RECV_TIME:  5090750175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1570cb3a0>
Protocol Name:  ESB.v4.MemoryArray[0]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v3.MemoryArray[1].v3.MemoryArray[10]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 10
Resss 10 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v2 ESB.v2.MemoryArray[11] ESB.v2.MemoryArray[11]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v2.MemoryArray[11]', 'fidelity': 0.8304014059736002, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[0]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 11
Resss 11 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v2', 'v4.MemoryArray[0]')
########Subtask Succeeded############## subtask.protocol name ESB.v2.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv2v4', ['ESB.v2.MemoryArray[11]']), ('TaskSwapRightEndv2v0', ['ESB.v2.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapMiddlev4v0
subtasks_available:	 ['ESB.v2.MemoryArray[11]', 'ESB.v2.MemoryArray[0]']
dependency_subtasks name:	 ESB.v2.MemoryArray[11]
dependency_subtasks name:	 ESB.v2.MemoryArray[0]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v2
inside task actin: left_m :v0 right_m: v4 and mid: v4 and self.own.name: v2
inside ent_swap_action_middle
purify_subtask_left:  ESB.v2.MemoryArray[11]
purify_subtask_right:  ESB.v2.MemoryArray[0]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v2.MemoryArray[11]', 'ESB.v2.MemoryArray[0]']
True
Make use of newly created swap subtask :  ESA.v2.MemoryArray[0].v2.MemoryArray[11]
task.name: TaskSwapMiddlev4v0  for node: v2 and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v0  delay:  500000000.0 and expected message recv time:  5092250175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x156f7f430>
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v4  delay:  500000000.0 and expected message recv time:  5092250175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x156f7f4c0>
 Protocol match v4 ESB.v4.MemoryArray[0] ESB.v4.MemoryArray[0]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v4.MemoryArray[0]', 'fidelity': 0.8304014059736002, 'remote_node': 'v2', 'remote_memo': 'v2.MemoryArray[11]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v2.MemoryArray[11]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv4v0
added a subtask to dependency  and map status is:	 [('TaskSwapRightEndv4v2', ['ESB.v4.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapRightEndv4v0
subtasks_available:	 ['ESB.v4.MemoryArray[0]']
dependency_subtasks name:	 ESB.v4.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[0]']
True
task.name: TaskSwapRightEndv4v0  for node: v4 and memory returned for this: 0
dst, req_func:	 None None
REQ_FUNC_RECV_TIME:  5092250175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1570eaf10>
Protocol Name:  ESB.v0.MemoryArray[0]
REQ_FUNC_RECV_TIME:  5092250175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1570eaf10>
Protocol Name:  ESB.v4.MemoryArray[0]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v2.MemoryArray[0].v2.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 11
Resss 11 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v0 ESB.v0.MemoryArray[0] ESB.v0.MemoryArray[0]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[0]', 'fidelity': 0.6550881702907854, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[0]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v4.MemoryArray[0]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v7
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv0v4', ['ESB.v0.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapLeftEndv0v7
subtasks_available:	 ['ESB.v0.MemoryArray[0]']
dependency_subtasks name:	 ESB.v0.MemoryArray[0]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v0.MemoryArray[0]']
True
task.name: TaskSwapLeftEndv0v7  for node: v0 and memory returned for this: 0
dst, req_func:	 None None
 Protocol match v4 ESB.v4.MemoryArray[0] ESB.v4.MemoryArray[0]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v4.MemoryArray[0]', 'fidelity': 0.6550881702907854, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[0]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v0.MemoryArray[0]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v7', ['ESB.v4.MemoryArray[10]', 'ESB.v4.MemoryArray[11]']), ('TaskSwapRightEndv4v0', ['ESB.v4.MemoryArray[0]'])]
checking eligibility of:	 TaskSwapMiddlev7v0
subtasks_available:	 ['ESB.v4.MemoryArray[10]', 'ESB.v4.MemoryArray[0]']
dependency_subtasks name:	 ESB.v4.MemoryArray[10]
dependency_subtasks name:	 ESB.v4.MemoryArray[0]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v4
inside task actin: left_m :v0 right_m: v7 and mid: v4 and self.own.name: v4
inside ent_swap_action_middle
purify_subtask_left:  ESB.v4.MemoryArray[10]
purify_subtask_right:  ESB.v4.MemoryArray[0]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[10]', 'ESB.v4.MemoryArray[0]']
True
Make use of newly created swap subtask :  ESA.v4.MemoryArray[0].v4.MemoryArray[10]
task.name: TaskSwapMiddlev7v0  for node: v4 and memory returned for this: 0
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v0  delay:  500000000.0 and expected message recv time:  5093750175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x156f7f700>
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v7  delay:  500000000.0 and expected message recv time:  5093750175000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x156f7f790>
REQ_FUNC_RECV_TIME:  5093750175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x15711b6d0>
Protocol Name:  ESB.v0.MemoryArray[0]
REQ_FUNC_RECV_TIME:  5093750175000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x15711b6d0>
Protocol Name:  ESB.v7.MemoryArray[0]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v4.MemoryArray[0].v4.MemoryArray[10]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 10
Resss 10 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v0 ESB.v0.MemoryArray[0] ESB.v0.MemoryArray[0]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[0]', 'fidelity': 0.4590048543634773, 'remote_node': 'v7', 'remote_memo': 'v7.MemoryArray[0]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v7.MemoryArray[0]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
 Protocol match v7 ESB.v7.MemoryArray[0] ESB.v7.MemoryArray[0]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v7.MemoryArray[0]', 'fidelity': 0.4590048543634773, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[0]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Resss 0 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v7', 'v0.MemoryArray[0]')
########Subtask Succeeded############## subtask.protocol name ESB.v7.MemoryArray[0]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[11]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v4  delay:  250000000.0 and expected message recv time:  5099250175000
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[1]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v5  delay:  250000000.0 and expected message recv time:  5099250175000
BSM_MSG_RECV_TIME:  5099250175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[11]
BSM_MSG_RECV_TIME:  5099250175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[1]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v0  and reciver_protocol is:  EGA.v0.MemoryArray[1]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v0  delay:  250000000.0 and expected message recv time:  5102250175000
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[1]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v1  delay:  250000000.0 and expected message recv time:  5102250175000
BSM_MSG_RECV_TIME:  5102250175000  at node:  v0
push message at  v0  msg.receiver:  EGA.v0.MemoryArray[1]
BSM_MSG_RECV_TIME:  5102250175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[1]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6af0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6af0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b20>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b50>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b80>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6bb0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6be0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c10>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c40>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c70>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e97f0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e97f0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9820>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9850>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9880>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e98b0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e98e0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9970>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea30> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea30>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea60>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea90>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feac0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feaf0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb20>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb50>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb80>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565febb0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9bb0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9bb0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9be0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c10>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c40>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c70>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9ca0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9cd0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d30>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a7f0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a7f0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a820>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a850>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a880>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a8b0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a8e0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a970>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606970> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606970>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566069a0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566069d0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a30>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a60>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a90>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606ac0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606af0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566108b0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566108b0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566108e0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610970>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109a0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109d0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a30>]
 Protocol match v4 EGA.v4.MemoryArray[2] EGA.v4.MemoryArray[2]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v4 v3
 Protocol match v7 EGA.v7.MemoryArray[2] EGA.v7.MemoryArray[2]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v7 v6
 Protocol match v1 EGA.v1.MemoryArray[2] EGA.v1.MemoryArray[2]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v1 v0
 Protocol match v6 EGA.v6.MemoryArray[2] EGA.v6.MemoryArray[2]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v6 v5
 Protocol match v5 EGA.v5.MemoryArray[2] EGA.v5.MemoryArray[2]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v5 v4
 Protocol match v2 EGA.v2.MemoryArray[2] EGA.v2.MemoryArray[2]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v2 v1
 Protocol match v3 EGA.v3.MemoryArray[2] EGA.v3.MemoryArray[2]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v3 v2
 Protocol match v3 EGA.v3.MemoryArray[12] EGA.v3.MemoryArray[12]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v6 EGA.v6.MemoryArray[12] EGA.v6.MemoryArray[12]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v0 EGA.v0.MemoryArray[2] EGA.v0.MemoryArray[2]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v5 EGA.v5.MemoryArray[12] EGA.v5.MemoryArray[12]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v4 EGA.v4.MemoryArray[12] EGA.v4.MemoryArray[12]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v1 EGA.v1.MemoryArray[12] EGA.v1.MemoryArray[12]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v2 EGA.v2.MemoryArray[12] EGA.v2.MemoryArray[12]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v4 EGA.v4.MemoryArray[2] EGA.v4.MemoryArray[2]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v7 EGA.v7.MemoryArray[2] EGA.v7.MemoryArray[2]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v1 EGA.v1.MemoryArray[2] EGA.v1.MemoryArray[2]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v6 EGA.v6.MemoryArray[2] EGA.v6.MemoryArray[2]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v5 EGA.v5.MemoryArray[2] EGA.v5.MemoryArray[2]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v2 EGA.v2.MemoryArray[2] EGA.v2.MemoryArray[2]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v3 EGA.v3.MemoryArray[2] EGA.v3.MemoryArray[2]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
!!!!!!!!!!!!!!!! emit event v0
!!!!!!!!!!!!!!!! emit event v2
!!!!!!!!!!!!!!!! emit event v3
!!!!!!!!!!!!!!!! emit event v6
!!!!!!!!!!!!!!!! emit event v1
!!!!!!!!!!!!!!!! emit event v5
!!!!!!!!!!!!!!!! emit event v4
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[12]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v4  delay:  250000000.0 and expected message recv time:  5118250175000
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[2]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v5  delay:  250000000.0 and expected message recv time:  5118250175000
BSM_MSG_RECV_TIME:  5118250175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[12]
 Protocol match v4 EGA.v4.MemoryArray[12] EGA.v4.MemoryArray[12]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 12
Resss 12 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v4.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv4v5
added a subtask to dependency  and map status is:	 [('TaskEntGen_v4_v5', ['EGA.v4.MemoryArray[12]'])]
checking eligibility of:	 TaskPurifyRightv4v5
subtasks_available:	 ['EGA.v4.MemoryArray[12]']
dependency_subtasks name:	 EGA.v4.MemoryArray[12]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v4.MemoryArray[12]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v4.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv4v6
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv4v5', ['EP_EGA.v4.MemoryArray[12]'])]
checking eligibility of:	 TaskSwapLeftEndv4v6
subtasks_available:	 ['EP_EGA.v4.MemoryArray[12]']
dependency_subtasks name:	 EP_EGA.v4.MemoryArray[12]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v4.MemoryArray[12]']
True
task.name: TaskSwapLeftEndv4v6  for node: v4 and memory returned for this: 12
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5118250175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[2]
 Protocol match v5 EGA.v5.MemoryArray[2] EGA.v5.MemoryArray[2]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v5.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv5v4
added a subtask to dependency  and map status is:	 [('TaskEntGen_v5_v4', ['EGA.v5.MemoryArray[2]'])]
checking eligibility of:	 TaskPurifyLeftv5v4
subtasks_available:	 ['EGA.v5.MemoryArray[2]']
dependency_subtasks name:	 EGA.v5.MemoryArray[2]
inside ent_purify_action1
ReservationProtocol_v5_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v5.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v5.MemoryArray[2]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v5.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv5v6', []), ('TaskPurifyLeftv5v4', ['EP_EGA.v5.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapMiddlev6v4
Not eligible yet because TaskPurifyRightv5v6 does not have an instance to allocate
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v0  and reciver_protocol is:  EGA.v0.MemoryArray[2]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v0  delay:  250000000.0 and expected message recv time:  5124750175000
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[2]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v1  delay:  250000000.0 and expected message recv time:  5124750175000
BSM_MSG_RECV_TIME:  5124750175000  at node:  v0
push message at  v0  msg.receiver:  EGA.v0.MemoryArray[2]
 Protocol match v0 EGA.v0.MemoryArray[2] EGA.v0.MemoryArray[2]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v0.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv0v1
added a subtask to dependency  and map status is:	 [('TaskEntGen_v0_v1', ['EGA.v0.MemoryArray[2]'])]
checking eligibility of:	 TaskPurifyRightv0v1
subtasks_available:	 ['EGA.v0.MemoryArray[2]']
dependency_subtasks name:	 EGA.v0.MemoryArray[2]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v0.MemoryArray[2]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v0.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv0v1', ['EP_EGA.v0.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapLeftEndv0v2
subtasks_available:	 ['EP_EGA.v0.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.v0.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v0.MemoryArray[2]']
True
task.name: TaskSwapLeftEndv0v2  for node: v0 and memory returned for this: 2
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5124750175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[2]
 Protocol match v1 EGA.v1.MemoryArray[2] EGA.v1.MemoryArray[2]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v1.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv1v0
added a subtask to dependency  and map status is:	 [('TaskEntGen_v1_v0', ['EGA.v1.MemoryArray[2]'])]
checking eligibility of:	 TaskPurifyLeftv1v0
subtasks_available:	 ['EGA.v1.MemoryArray[2]']
dependency_subtasks name:	 EGA.v1.MemoryArray[2]
inside ent_purify_action1
ReservationProtocol_v1_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v1.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v1.MemoryArray[2]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v1.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv1v2', []), ('TaskPurifyLeftv1v0', ['EP_EGA.v1.MemoryArray[1]', 'EP_EGA.v1.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapMiddlev2v0
Not eligible yet because TaskPurifyRightv1v2 does not have an instance to allocate
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[12]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v1_v2  dest:  v1  delay:  250000000.0 and expected message recv time:  5128750175000
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[2]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v1_v2  dest:  v2  delay:  250000000.0 and expected message recv time:  5128750175000
BSM_MSG_RECV_TIME:  5128750175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[12]
 Protocol match v1 EGA.v1.MemoryArray[12] EGA.v1.MemoryArray[12]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 12
Resss 12 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v1.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv1v2
added a subtask to dependency  and map status is:	 [('TaskEntGen_v1_v2', ['EGA.v1.MemoryArray[12]'])]
checking eligibility of:	 TaskPurifyRightv1v2
subtasks_available:	 ['EGA.v1.MemoryArray[12]']
dependency_subtasks name:	 EGA.v1.MemoryArray[12]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v1.MemoryArray[12]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v1.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv1v2', ['EP_EGA.v1.MemoryArray[12]']), ('TaskPurifyLeftv1v0', ['EP_EGA.v1.MemoryArray[1]', 'EP_EGA.v1.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapMiddlev2v0
subtasks_available:	 ['EP_EGA.v1.MemoryArray[12]', 'EP_EGA.v1.MemoryArray[1]']
dependency_subtasks name:	 EP_EGA.v1.MemoryArray[12]
dependency_subtasks name:	 EP_EGA.v1.MemoryArray[1]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v1
inside task actin: left_m :v0 right_m: v2 and mid: v4 and self.own.name: v1
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v1.MemoryArray[12]
purify_subtask_right:  EP_EGA.v1.MemoryArray[1]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v1.MemoryArray[12]', 'EP_EGA.v1.MemoryArray[1]']
True
Make use of newly created swap subtask :  ESA.v1.MemoryArray[1].v1.MemoryArray[12]
task.name: TaskSwapMiddlev2v0  for node: v1 and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v0  delay:  500000000.0 and expected message recv time:  5129250175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x156f7fb80>
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v2  delay:  500000000.0 and expected message recv time:  5129250175000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x156f7fca0>
Meas result end
BSM_MSG_RECV_TIME:  5128750175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[2]
 Protocol match v2 EGA.v2.MemoryArray[2] EGA.v2.MemoryArray[2]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v2.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv2v1
added a subtask to dependency  and map status is:	 [('TaskEntGen_v2_v1', ['EGA.v2.MemoryArray[2]'])]
checking eligibility of:	 TaskPurifyLeftv2v1
subtasks_available:	 ['EGA.v2.MemoryArray[2]']
dependency_subtasks name:	 EGA.v2.MemoryArray[2]
inside ent_purify_action1
ReservationProtocol_v2_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v2.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v2.MemoryArray[2]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v2.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv2v1', ['EP_EGA.v2.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapRightEndv2v0
subtasks_available:	 ['EP_EGA.v2.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.v2.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v2.MemoryArray[2]']
True
task.name: TaskSwapRightEndv2v0  for node: v2 and memory returned for this: 2
dst, req_func:	 None None
Meas result end
REQ_FUNC_RECV_TIME:  5129250175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1575595e0>
Protocol Name:  ESB.v0.MemoryArray[1]
REQ_FUNC_RECV_TIME:  5129250175000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1575595e0>
Protocol Name:  ESB.v2.MemoryArray[2]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v1.MemoryArray[1].v1.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 12
Resss 12 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v0 ESB.v0.MemoryArray[1] ESB.v0.MemoryArray[1]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[1]', 'fidelity': 0.8304014059736002, 'remote_node': 'v2', 'remote_memo': 'v2.MemoryArray[2]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v2.MemoryArray[2]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v4
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv0v2', ['ESB.v0.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapLeftEndv0v4
subtasks_available:	 ['ESB.v0.MemoryArray[1]']
dependency_subtasks name:	 ESB.v0.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v0.MemoryArray[1]']
True
task.name: TaskSwapLeftEndv0v4  for node: v0 and memory returned for this: 1
dst, req_func:	 None None
 Protocol match v2 ESB.v2.MemoryArray[2] ESB.v2.MemoryArray[2]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v2.MemoryArray[2]', 'fidelity': 0.8304014059736002, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[1]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v2', 'v0.MemoryArray[1]')
########Subtask Succeeded############## subtask.protocol name ESB.v2.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv2v4', []), ('TaskSwapRightEndv2v0', ['ESB.v2.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapMiddlev4v0
Not eligible yet because TaskSwapLeftEndv2v4 does not have an instance to allocate
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[12]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v6  delay:  250000000.0 and expected message recv time:  5138750175000
sending messages to:  v7  and reciver_protocol is:  EGA.v7.MemoryArray[2]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v7  delay:  250000000.0 and expected message recv time:  5138750175000
BSM_MSG_RECV_TIME:  5138750175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[12]
 Protocol match v6 EGA.v6.MemoryArray[12] EGA.v6.MemoryArray[12]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 12
Resss 12 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv6v7
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v7', ['EGA.v6.MemoryArray[12]'])]
checking eligibility of:	 TaskPurifyRightv6v7
subtasks_available:	 ['EGA.v6.MemoryArray[12]']
dependency_subtasks name:	 EGA.v6.MemoryArray[12]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[12]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv6v7', ['EP_EGA.v6.MemoryArray[12]']), ('TaskSwapRightEndv6v4', [])]
checking eligibility of:	 TaskSwapMiddlev7v4
Not eligible yet because TaskSwapRightEndv6v4 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5138750175000  at node:  v7
push message at  v7  msg.receiver:  EGA.v7.MemoryArray[2]
 Protocol match v7 EGA.v7.MemoryArray[2] EGA.v7.MemoryArray[2]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v7.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv7v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v7_v6', ['EGA.v7.MemoryArray[2]'])]
checking eligibility of:	 TaskPurifyLeftv7v6
subtasks_available:	 ['EGA.v7.MemoryArray[2]']
dependency_subtasks name:	 EGA.v7.MemoryArray[2]
inside ent_purify_action1
ReservationProtocol_v7_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v7.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v7.MemoryArray[2]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v7.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv7v6', ['EP_EGA.v7.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapRightEndv7v4
subtasks_available:	 ['EP_EGA.v7.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.v7.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v7.MemoryArray[2]']
True
task.name: TaskSwapRightEndv7v4  for node: v7 and memory returned for this: 2
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[12]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v1_v2  dest:  v1  delay:  250000000.0 and expected message recv time:  5141250175000
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[2]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v1_v2  dest:  v2  delay:  250000000.0 and expected message recv time:  5141250175000
BSM_MSG_RECV_TIME:  5141250175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[12]
BSM_MSG_RECV_TIME:  5141250175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[2]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[12]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v2  delay:  250000000.0 and expected message recv time:  5144750175000
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[2]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v3  delay:  250000000.0 and expected message recv time:  5144750175000
BSM_MSG_RECV_TIME:  5144750175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[12]
 Protocol match v2 EGA.v2.MemoryArray[12] EGA.v2.MemoryArray[12]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 12
Resss 12 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v2.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv2v3
added a subtask to dependency  and map status is:	 [('TaskEntGen_v2_v3', ['EGA.v2.MemoryArray[12]'])]
checking eligibility of:	 TaskPurifyRightv2v3
subtasks_available:	 ['EGA.v2.MemoryArray[12]']
dependency_subtasks name:	 EGA.v2.MemoryArray[12]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v2.MemoryArray[12]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v2.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv2v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv2v3', ['EP_EGA.v2.MemoryArray[12]'])]
checking eligibility of:	 TaskSwapLeftEndv2v4
subtasks_available:	 ['EP_EGA.v2.MemoryArray[12]']
dependency_subtasks name:	 EP_EGA.v2.MemoryArray[12]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v2.MemoryArray[12]']
True
task.name: TaskSwapLeftEndv2v4  for node: v2 and memory returned for this: 12
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5144750175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[2]
 Protocol match v3 EGA.v3.MemoryArray[2] EGA.v3.MemoryArray[2]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v3.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv3v2
added a subtask to dependency  and map status is:	 [('TaskEntGen_v3_v2', ['EGA.v3.MemoryArray[2]'])]
checking eligibility of:	 TaskPurifyLeftv3v2
subtasks_available:	 ['EGA.v3.MemoryArray[2]']
dependency_subtasks name:	 EGA.v3.MemoryArray[2]
inside ent_purify_action1
ReservationProtocol_v3_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v3.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v3.MemoryArray[2]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v3.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv3v4', ['EP_EGA.v3.MemoryArray[11]']), ('TaskPurifyLeftv3v2', ['EP_EGA.v3.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapMiddlev4v2
subtasks_available:	 ['EP_EGA.v3.MemoryArray[11]', 'EP_EGA.v3.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.v3.MemoryArray[11]
dependency_subtasks name:	 EP_EGA.v3.MemoryArray[2]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v3
inside task actin: left_m :v2 right_m: v4 and mid: v4 and self.own.name: v3
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v3.MemoryArray[11]
purify_subtask_right:  EP_EGA.v3.MemoryArray[2]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v3.MemoryArray[11]', 'EP_EGA.v3.MemoryArray[2]']
True
Make use of newly created swap subtask :  ESA.v3.MemoryArray[2].v3.MemoryArray[11]
task.name: TaskSwapMiddlev4v2  for node: v3 and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v2  delay:  500000000.0 and expected message recv time:  5145250175000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x15765f3a0>
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v4  delay:  500000000.0 and expected message recv time:  5145250175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x15765f430>
Meas result end
REQ_FUNC_RECV_TIME:  5145250175000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1576f9520>
Protocol Name:  ESB.v2.MemoryArray[12]
REQ_FUNC_RECV_TIME:  5145250175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1576f9520>
Protocol Name:  ESB.v4.MemoryArray[1]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[12]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v3  delay:  250000000.0 and expected message recv time:  5145750175000
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[2]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v4  delay:  250000000.0 and expected message recv time:  5145750175000
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v3.MemoryArray[2].v3.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 11
Resss 11 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
BSM_MSG_RECV_TIME:  5145750175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[12]
 Protocol match v3 EGA.v3.MemoryArray[12] EGA.v3.MemoryArray[12]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 12
Resss 12 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v3.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv3v4
added a subtask to dependency  and map status is:	 [('TaskEntGen_v3_v4', ['EGA.v3.MemoryArray[12]'])]
checking eligibility of:	 TaskPurifyRightv3v4
subtasks_available:	 ['EGA.v3.MemoryArray[12]']
dependency_subtasks name:	 EGA.v3.MemoryArray[12]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v3.MemoryArray[12]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v3.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv3v4', ['EP_EGA.v3.MemoryArray[12]']), ('TaskPurifyLeftv3v2', [])]
checking eligibility of:	 TaskSwapMiddlev4v2
Not eligible yet because TaskPurifyLeftv3v2 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5145750175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[2]
 Protocol match v4 EGA.v4.MemoryArray[2] EGA.v4.MemoryArray[2]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v4.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv4v3
added a subtask to dependency  and map status is:	 [('TaskEntGen_v4_v3', ['EGA.v4.MemoryArray[2]'])]
checking eligibility of:	 TaskPurifyLeftv4v3
subtasks_available:	 ['EGA.v4.MemoryArray[2]']
dependency_subtasks name:	 EGA.v4.MemoryArray[2]
inside ent_purify_action1
ReservationProtocol_v4_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v4.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v4.MemoryArray[2]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v4.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv4v3', ['EP_EGA.v4.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapRightEndv4v2
subtasks_available:	 ['EP_EGA.v4.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.v4.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v4.MemoryArray[2]']
True
task.name: TaskSwapRightEndv4v2  for node: v4 and memory returned for this: 2
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[12]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v4  delay:  250000000.0 and expected message recv time:  5146250175000
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[2]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v5  delay:  250000000.0 and expected message recv time:  5146250175000
 Protocol match v2 ESB.v2.MemoryArray[12] ESB.v2.MemoryArray[12]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v2.MemoryArray[12]', 'fidelity': 0.8304014059736002, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[1]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 12
Resss 12 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v2', 'v4.MemoryArray[1]')
########Subtask Succeeded############## subtask.protocol name ESB.v2.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv2v4', ['ESB.v2.MemoryArray[12]']), ('TaskSwapRightEndv2v0', ['ESB.v2.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapMiddlev4v0
subtasks_available:	 ['ESB.v2.MemoryArray[12]', 'ESB.v2.MemoryArray[2]']
dependency_subtasks name:	 ESB.v2.MemoryArray[12]
dependency_subtasks name:	 ESB.v2.MemoryArray[2]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v2
inside task actin: left_m :v0 right_m: v4 and mid: v4 and self.own.name: v2
inside ent_swap_action_middle
purify_subtask_left:  ESB.v2.MemoryArray[12]
purify_subtask_right:  ESB.v2.MemoryArray[2]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v2.MemoryArray[12]', 'ESB.v2.MemoryArray[2]']
True
Make use of newly created swap subtask :  ESA.v2.MemoryArray[2].v2.MemoryArray[12]
task.name: TaskSwapMiddlev4v0  for node: v2 and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v0  delay:  500000000.0 and expected message recv time:  5146750175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x15765f790>
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v4  delay:  500000000.0 and expected message recv time:  5146750175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x15765f820>
 Protocol match v4 ESB.v4.MemoryArray[1] ESB.v4.MemoryArray[1]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v4.MemoryArray[1]', 'fidelity': 0.8304014059736002, 'remote_node': 'v2', 'remote_memo': 'v2.MemoryArray[12]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v2.MemoryArray[12]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv4v0
added a subtask to dependency  and map status is:	 [('TaskSwapRightEndv4v2', ['ESB.v4.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapRightEndv4v0
subtasks_available:	 ['ESB.v4.MemoryArray[1]']
dependency_subtasks name:	 ESB.v4.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[1]']
True
task.name: TaskSwapRightEndv4v0  for node: v4 and memory returned for this: 1
dst, req_func:	 None None
BSM_MSG_RECV_TIME:  5146250175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[12]
BSM_MSG_RECV_TIME:  5146250175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[2]
REQ_FUNC_RECV_TIME:  5146750175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x15772a340>
Protocol Name:  ESB.v0.MemoryArray[1]
REQ_FUNC_RECV_TIME:  5146750175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x15772a340>
Protocol Name:  ESB.v4.MemoryArray[1]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v2.MemoryArray[2].v2.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 12
Resss 12 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v0 ESB.v0.MemoryArray[1] ESB.v0.MemoryArray[1]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[1]', 'fidelity': 0.6550881702907854, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[1]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v4.MemoryArray[1]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v7
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv0v4', ['ESB.v0.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapLeftEndv0v7
subtasks_available:	 ['ESB.v0.MemoryArray[1]']
dependency_subtasks name:	 ESB.v0.MemoryArray[1]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v0.MemoryArray[1]']
True
task.name: TaskSwapLeftEndv0v7  for node: v0 and memory returned for this: 1
dst, req_func:	 None None
 Protocol match v4 ESB.v4.MemoryArray[1] ESB.v4.MemoryArray[1]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v4.MemoryArray[1]', 'fidelity': 0.6550881702907854, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[1]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v0.MemoryArray[1]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v7', ['ESB.v4.MemoryArray[11]']), ('TaskSwapRightEndv4v0', ['ESB.v4.MemoryArray[1]'])]
checking eligibility of:	 TaskSwapMiddlev7v0
subtasks_available:	 ['ESB.v4.MemoryArray[11]', 'ESB.v4.MemoryArray[1]']
dependency_subtasks name:	 ESB.v4.MemoryArray[11]
dependency_subtasks name:	 ESB.v4.MemoryArray[1]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v4
inside task actin: left_m :v0 right_m: v7 and mid: v4 and self.own.name: v4
inside ent_swap_action_middle
purify_subtask_left:  ESB.v4.MemoryArray[11]
purify_subtask_right:  ESB.v4.MemoryArray[1]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[11]', 'ESB.v4.MemoryArray[1]']
True
Make use of newly created swap subtask :  ESA.v4.MemoryArray[1].v4.MemoryArray[11]
task.name: TaskSwapMiddlev7v0  for node: v4 and memory returned for this: 1
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v0  delay:  500000000.0 and expected message recv time:  5148250175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x15765f9d0>
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v7  delay:  500000000.0 and expected message recv time:  5148250175000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x15765fa60>
REQ_FUNC_RECV_TIME:  5148250175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x15774ad30>
Protocol Name:  ESB.v0.MemoryArray[1]
REQ_FUNC_RECV_TIME:  5148250175000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x15774ad30>
Protocol Name:  ESB.v7.MemoryArray[1]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v4.MemoryArray[1].v4.MemoryArray[11]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 11
Resss 11 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v0 ESB.v0.MemoryArray[1] ESB.v0.MemoryArray[1]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[1]', 'fidelity': 0.4590048543634773, 'remote_node': 'v7', 'remote_memo': 'v7.MemoryArray[1]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v7.MemoryArray[1]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
 Protocol match v7 ESB.v7.MemoryArray[1] ESB.v7.MemoryArray[1]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v7.MemoryArray[1]', 'fidelity': 0.4590048543634773, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[1]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 1
Resss 1 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v7', 'v0.MemoryArray[1]')
########Subtask Succeeded############## subtask.protocol name ESB.v7.MemoryArray[1]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[12]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v5  delay:  250000000.0 and expected message recv time:  5150750175000
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[2]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v6  delay:  250000000.0 and expected message recv time:  5150750175000
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[12]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v2  delay:  250000000.0 and expected message recv time:  5150750175000
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[2]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v3  delay:  250000000.0 and expected message recv time:  5150750175000
BSM_MSG_RECV_TIME:  5150750175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[12]
 Protocol match v5 EGA.v5.MemoryArray[12] EGA.v5.MemoryArray[12]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 12
Resss 12 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v5.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv5v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v5_v6', ['EGA.v5.MemoryArray[12]'])]
checking eligibility of:	 TaskPurifyRightv5v6
subtasks_available:	 ['EGA.v5.MemoryArray[12]']
dependency_subtasks name:	 EGA.v5.MemoryArray[12]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v5.MemoryArray[12]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v5.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv5v6', ['EP_EGA.v5.MemoryArray[12]']), ('TaskPurifyLeftv5v4', ['EP_EGA.v5.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapMiddlev6v4
subtasks_available:	 ['EP_EGA.v5.MemoryArray[12]', 'EP_EGA.v5.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.v5.MemoryArray[12]
dependency_subtasks name:	 EP_EGA.v5.MemoryArray[2]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v5
inside task actin: left_m :v4 right_m: v6 and mid: v4 and self.own.name: v5
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v5.MemoryArray[12]
purify_subtask_right:  EP_EGA.v5.MemoryArray[2]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v5.MemoryArray[12]', 'EP_EGA.v5.MemoryArray[2]']
True
Make use of newly created swap subtask :  ESA.v5.MemoryArray[2].v5.MemoryArray[12]
task.name: TaskSwapMiddlev6v4  for node: v5 and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v4  delay:  500000000.0 and expected message recv time:  5151250175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x15765fc10>
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v6  delay:  500000000.0 and expected message recv time:  5151250175000
dst, req_func:	 v6 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x15765fca0>
Meas result end
BSM_MSG_RECV_TIME:  5150750175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[2]
 Protocol match v6 EGA.v6.MemoryArray[2] EGA.v6.MemoryArray[2]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv6v5
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v5', ['EGA.v6.MemoryArray[2]'])]
checking eligibility of:	 TaskPurifyLeftv6v5
subtasks_available:	 ['EGA.v6.MemoryArray[2]']
dependency_subtasks name:	 EGA.v6.MemoryArray[2]
inside ent_purify_action1
ReservationProtocol_v6_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v6.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[2]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv6v5', ['EP_EGA.v6.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapRightEndv6v4
subtasks_available:	 ['EP_EGA.v6.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.v6.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v6.MemoryArray[2]']
True
task.name: TaskSwapRightEndv6v4  for node: v6 and memory returned for this: 2
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5150750175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[12]
BSM_MSG_RECV_TIME:  5150750175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[2]
REQ_FUNC_RECV_TIME:  5151250175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x15779f1c0>
Protocol Name:  ESB.v4.MemoryArray[12]
REQ_FUNC_RECV_TIME:  5151250175000  at node:  v6
push message at  v6  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x15779f1c0>
Protocol Name:  ESB.v6.MemoryArray[2]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v0  and reciver_protocol is:  EGA.v0.MemoryArray[2]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v0  delay:  250000000.0 and expected message recv time:  5151750175000
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[2]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v1  delay:  250000000.0 and expected message recv time:  5151750175000
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v5.MemoryArray[2].v5.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 12
Resss 12 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
BSM_MSG_RECV_TIME:  5151750175000  at node:  v0
push message at  v0  msg.receiver:  EGA.v0.MemoryArray[2]
BSM_MSG_RECV_TIME:  5151750175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[2]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[12]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v4  delay:  250000000.0 and expected message recv time:  5152250175000
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[2]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v5  delay:  250000000.0 and expected message recv time:  5152250175000
 Protocol match v4 ESB.v4.MemoryArray[12] ESB.v4.MemoryArray[12]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v4.MemoryArray[12]', 'fidelity': 0.8304014059736002, 'remote_node': 'v6', 'remote_memo': 'v6.MemoryArray[2]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 12
Resss 12 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v6.MemoryArray[2]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv4v7
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v6', ['ESB.v4.MemoryArray[12]'])]
checking eligibility of:	 TaskSwapLeftEndv4v7
subtasks_available:	 ['ESB.v4.MemoryArray[12]']
dependency_subtasks name:	 ESB.v4.MemoryArray[12]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[12]']
True
task.name: TaskSwapLeftEndv4v7  for node: v4 and memory returned for this: 12
dst, req_func:	 None None
 Protocol match v6 ESB.v6.MemoryArray[2] ESB.v6.MemoryArray[2]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v6.MemoryArray[2]', 'fidelity': 0.8304014059736002, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[12]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v6', 'v4.MemoryArray[12]')
########Subtask Succeeded############## subtask.protocol name ESB.v6.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv6v7', ['EP_EGA.v6.MemoryArray[12]']), ('TaskSwapRightEndv6v4', ['ESB.v6.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapMiddlev7v4
subtasks_available:	 ['EP_EGA.v6.MemoryArray[12]', 'ESB.v6.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.v6.MemoryArray[12]
dependency_subtasks name:	 ESB.v6.MemoryArray[2]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v6
inside task actin: left_m :v4 right_m: v7 and mid: v4 and self.own.name: v6
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v6.MemoryArray[12]
purify_subtask_right:  ESB.v6.MemoryArray[2]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v6.MemoryArray[12]', 'ESB.v6.MemoryArray[2]']
True
Make use of newly created swap subtask :  ESA.v6.MemoryArray[2].v6.MemoryArray[12]
task.name: TaskSwapMiddlev7v4  for node: v6 and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v4  delay:  500000000.0 and expected message recv time:  5152750175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x15765ff70>
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v7  delay:  500000000.0 and expected message recv time:  5152750175000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x1577ce040>
BSM_MSG_RECV_TIME:  5152250175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[12]
BSM_MSG_RECV_TIME:  5152250175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[2]
REQ_FUNC_RECV_TIME:  5152750175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1577cd040>
Protocol Name:  ESB.v4.MemoryArray[12]
REQ_FUNC_RECV_TIME:  5152750175000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1577cd040>
Protocol Name:  ESB.v7.MemoryArray[2]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v6.MemoryArray[2].v6.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 12
Resss 12 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v4 ESB.v4.MemoryArray[12] ESB.v4.MemoryArray[12]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v4.MemoryArray[12]', 'fidelity': 0.7375541591274104, 'remote_node': 'v7', 'remote_memo': 'v7.MemoryArray[2]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 12
Resss 12 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v7.MemoryArray[2]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v7', ['ESB.v4.MemoryArray[12]']), ('TaskSwapRightEndv4v0', [])]
checking eligibility of:	 TaskSwapMiddlev7v0
Not eligible yet because TaskSwapRightEndv4v0 does not have an instance to allocate
 Protocol match v7 ESB.v7.MemoryArray[2] ESB.v7.MemoryArray[2]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v7.MemoryArray[2]', 'fidelity': 0.7375541591274104, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[12]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v7', 'v4.MemoryArray[12]')
########Subtask Succeeded############## subtask.protocol name ESB.v7.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv7v0
added a subtask to dependency  and map status is:	 [('TaskSwapRightEndv7v4', ['ESB.v7.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapRightEndv7v0
subtasks_available:	 ['ESB.v7.MemoryArray[2]']
dependency_subtasks name:	 ESB.v7.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v7.MemoryArray[2]']
True
task.name: TaskSwapRightEndv7v0  for node: v7 and memory returned for this: 2
dst, req_func:	 None None
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566069a0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566069a0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566069d0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a30>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a60>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a90>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606ac0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606af0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a820> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a820>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a850>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a880>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a8b0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a8e0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a970>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9be0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9be0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c10>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c40>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c70>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9ca0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9cd0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d30>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea60> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea60>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea90>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feac0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feaf0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb20>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb50>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb80>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565febb0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9820> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9820>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9850>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9880>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e98b0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e98e0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9970>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566108e0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566108e0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610970>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109a0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109d0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a30>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b20> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b20>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b50>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b80>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6bb0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6be0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c10>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c40>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c70>]
 Protocol match v2 EGA.v2.MemoryArray[3] EGA.v2.MemoryArray[3]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v2 v1
 Protocol match v5 EGA.v5.MemoryArray[3] EGA.v5.MemoryArray[3]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v5 v4
 Protocol match v6 EGA.v6.MemoryArray[3] EGA.v6.MemoryArray[3]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v6 v5
 Protocol match v1 EGA.v1.MemoryArray[3] EGA.v1.MemoryArray[3]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v1 v0
 Protocol match v7 EGA.v7.MemoryArray[3] EGA.v7.MemoryArray[3]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v7 v6
 Protocol match v3 EGA.v3.MemoryArray[3] EGA.v3.MemoryArray[3]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v3 v2
 Protocol match v4 EGA.v4.MemoryArray[3] EGA.v4.MemoryArray[3]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v4 v3
 Protocol match v1 EGA.v1.MemoryArray[13] EGA.v1.MemoryArray[13]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v4 EGA.v4.MemoryArray[13] EGA.v4.MemoryArray[13]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v5 EGA.v5.MemoryArray[13] EGA.v5.MemoryArray[13]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v0 EGA.v0.MemoryArray[3] EGA.v0.MemoryArray[3]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v6 EGA.v6.MemoryArray[13] EGA.v6.MemoryArray[13]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v2 EGA.v2.MemoryArray[13] EGA.v2.MemoryArray[13]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v3 EGA.v3.MemoryArray[13] EGA.v3.MemoryArray[13]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v2 EGA.v2.MemoryArray[3] EGA.v2.MemoryArray[3]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v5 EGA.v5.MemoryArray[3] EGA.v5.MemoryArray[3]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v6 EGA.v6.MemoryArray[3] EGA.v6.MemoryArray[3]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v1 EGA.v1.MemoryArray[3] EGA.v1.MemoryArray[3]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v7 EGA.v7.MemoryArray[3] EGA.v7.MemoryArray[3]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v3 EGA.v3.MemoryArray[3] EGA.v3.MemoryArray[3]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v4 EGA.v4.MemoryArray[3] EGA.v4.MemoryArray[3]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
!!!!!!!!!!!!!!!! emit event v5
!!!!!!!!!!!!!!!! emit event v0
!!!!!!!!!!!!!!!! emit event v1
!!!!!!!!!!!!!!!! emit event v4
!!!!!!!!!!!!!!!! emit event v3
!!!!!!!!!!!!!!!! emit event v6
!!!!!!!!!!!!!!!! emit event v2
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v0  and reciver_protocol is:  EGA.v0.MemoryArray[3]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v0  delay:  250000000.0 and expected message recv time:  5166250175000
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[3]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v1  delay:  250000000.0 and expected message recv time:  5166250175000
BSM_MSG_RECV_TIME:  5166250175000  at node:  v0
push message at  v0  msg.receiver:  EGA.v0.MemoryArray[3]
 Protocol match v0 EGA.v0.MemoryArray[3] EGA.v0.MemoryArray[3]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v0.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv0v1
added a subtask to dependency  and map status is:	 [('TaskEntGen_v0_v1', ['EGA.v0.MemoryArray[3]'])]
checking eligibility of:	 TaskPurifyRightv0v1
subtasks_available:	 ['EGA.v0.MemoryArray[3]']
dependency_subtasks name:	 EGA.v0.MemoryArray[3]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v0.MemoryArray[3]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v0.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv0v1', ['EP_EGA.v0.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapLeftEndv0v2
subtasks_available:	 ['EP_EGA.v0.MemoryArray[3]']
dependency_subtasks name:	 EP_EGA.v0.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v0.MemoryArray[3]']
True
task.name: TaskSwapLeftEndv0v2  for node: v0 and memory returned for this: 3
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5166250175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[3]
 Protocol match v1 EGA.v1.MemoryArray[3] EGA.v1.MemoryArray[3]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v1.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv1v0
added a subtask to dependency  and map status is:	 [('TaskEntGen_v1_v0', ['EGA.v1.MemoryArray[3]'])]
checking eligibility of:	 TaskPurifyLeftv1v0
subtasks_available:	 ['EGA.v1.MemoryArray[3]']
dependency_subtasks name:	 EGA.v1.MemoryArray[3]
inside ent_purify_action1
ReservationProtocol_v1_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v1.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v1.MemoryArray[3]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v1.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv1v2', []), ('TaskPurifyLeftv1v0', ['EP_EGA.v1.MemoryArray[2]', 'EP_EGA.v1.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapMiddlev2v0
Not eligible yet because TaskPurifyRightv1v2 does not have an instance to allocate
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[13]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v1_v2  dest:  v1  delay:  250000000.0 and expected message recv time:  5168750175000
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[3]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v1_v2  dest:  v2  delay:  250000000.0 and expected message recv time:  5168750175000
BSM_MSG_RECV_TIME:  5168750175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[13]
 Protocol match v1 EGA.v1.MemoryArray[13] EGA.v1.MemoryArray[13]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 13
Resss 13 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v1.MemoryArray[13]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv1v2
added a subtask to dependency  and map status is:	 [('TaskEntGen_v1_v2', ['EGA.v1.MemoryArray[13]'])]
checking eligibility of:	 TaskPurifyRightv1v2
subtasks_available:	 ['EGA.v1.MemoryArray[13]']
dependency_subtasks name:	 EGA.v1.MemoryArray[13]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v1.MemoryArray[13]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v1.MemoryArray[13]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv1v2', ['EP_EGA.v1.MemoryArray[13]']), ('TaskPurifyLeftv1v0', ['EP_EGA.v1.MemoryArray[2]', 'EP_EGA.v1.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapMiddlev2v0
subtasks_available:	 ['EP_EGA.v1.MemoryArray[13]', 'EP_EGA.v1.MemoryArray[2]']
dependency_subtasks name:	 EP_EGA.v1.MemoryArray[13]
dependency_subtasks name:	 EP_EGA.v1.MemoryArray[2]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v1
inside task actin: left_m :v0 right_m: v2 and mid: v4 and self.own.name: v1
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v1.MemoryArray[13]
purify_subtask_right:  EP_EGA.v1.MemoryArray[2]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v1.MemoryArray[13]', 'EP_EGA.v1.MemoryArray[2]']
True
Make use of newly created swap subtask :  ESA.v1.MemoryArray[2].v1.MemoryArray[13]
task.name: TaskSwapMiddlev2v0  for node: v1 and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v0  delay:  500000000.0 and expected message recv time:  5169250175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x1577ce4c0>
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v2  delay:  500000000.0 and expected message recv time:  5169250175000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x1577ce550>
Meas result end
BSM_MSG_RECV_TIME:  5168750175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[3]
 Protocol match v2 EGA.v2.MemoryArray[3] EGA.v2.MemoryArray[3]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v2.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv2v1
added a subtask to dependency  and map status is:	 [('TaskEntGen_v2_v1', ['EGA.v2.MemoryArray[3]'])]
checking eligibility of:	 TaskPurifyLeftv2v1
subtasks_available:	 ['EGA.v2.MemoryArray[3]']
dependency_subtasks name:	 EGA.v2.MemoryArray[3]
inside ent_purify_action1
ReservationProtocol_v2_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v2.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v2.MemoryArray[3]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v2.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv2v1', ['EP_EGA.v2.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapRightEndv2v0
subtasks_available:	 ['EP_EGA.v2.MemoryArray[3]']
dependency_subtasks name:	 EP_EGA.v2.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v2.MemoryArray[3]']
True
task.name: TaskSwapRightEndv2v0  for node: v2 and memory returned for this: 3
dst, req_func:	 None None
Meas result end
REQ_FUNC_RECV_TIME:  5169250175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x157a1ae50>
Protocol Name:  ESB.v0.MemoryArray[2]
REQ_FUNC_RECV_TIME:  5169250175000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x157a1ae50>
Protocol Name:  ESB.v2.MemoryArray[3]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v1.MemoryArray[2].v1.MemoryArray[13]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 13
Resss 13 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v0 ESB.v0.MemoryArray[2] ESB.v0.MemoryArray[2]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[2]', 'fidelity': 0.8304014059736002, 'remote_node': 'v2', 'remote_memo': 'v2.MemoryArray[3]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v2.MemoryArray[3]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v4
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv0v2', ['ESB.v0.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapLeftEndv0v4
subtasks_available:	 ['ESB.v0.MemoryArray[2]']
dependency_subtasks name:	 ESB.v0.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v0.MemoryArray[2]']
True
task.name: TaskSwapLeftEndv0v4  for node: v0 and memory returned for this: 2
dst, req_func:	 None None
 Protocol match v2 ESB.v2.MemoryArray[3] ESB.v2.MemoryArray[3]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v2.MemoryArray[3]', 'fidelity': 0.8304014059736002, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[2]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v2', 'v0.MemoryArray[2]')
########Subtask Succeeded############## subtask.protocol name ESB.v2.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv2v4', []), ('TaskSwapRightEndv2v0', ['ESB.v2.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapMiddlev4v0
Not eligible yet because TaskSwapLeftEndv2v4 does not have an instance to allocate
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[13]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v3  delay:  250000000.0 and expected message recv time:  5170750175000
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[3]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v4  delay:  250000000.0 and expected message recv time:  5170750175000
BSM_MSG_RECV_TIME:  5170750175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[13]
 Protocol match v3 EGA.v3.MemoryArray[13] EGA.v3.MemoryArray[13]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 13
Resss 13 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v3.MemoryArray[13]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv3v4
added a subtask to dependency  and map status is:	 [('TaskEntGen_v3_v4', ['EGA.v3.MemoryArray[13]'])]
checking eligibility of:	 TaskPurifyRightv3v4
subtasks_available:	 ['EGA.v3.MemoryArray[13]']
dependency_subtasks name:	 EGA.v3.MemoryArray[13]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v3.MemoryArray[13]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v3.MemoryArray[13]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv3v4', ['EP_EGA.v3.MemoryArray[12]', 'EP_EGA.v3.MemoryArray[13]']), ('TaskPurifyLeftv3v2', [])]
checking eligibility of:	 TaskSwapMiddlev4v2
Not eligible yet because TaskPurifyLeftv3v2 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5170750175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[3]
 Protocol match v4 EGA.v4.MemoryArray[3] EGA.v4.MemoryArray[3]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v4.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv4v3
added a subtask to dependency  and map status is:	 [('TaskEntGen_v4_v3', ['EGA.v4.MemoryArray[3]'])]
checking eligibility of:	 TaskPurifyLeftv4v3
subtasks_available:	 ['EGA.v4.MemoryArray[3]']
dependency_subtasks name:	 EGA.v4.MemoryArray[3]
inside ent_purify_action1
ReservationProtocol_v4_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v4.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v4.MemoryArray[3]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v4.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv4v3', ['EP_EGA.v4.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapRightEndv4v2
subtasks_available:	 ['EP_EGA.v4.MemoryArray[3]']
dependency_subtasks name:	 EP_EGA.v4.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v4.MemoryArray[3]']
True
task.name: TaskSwapRightEndv4v2  for node: v4 and memory returned for this: 3
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[13]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v5  delay:  250000000.0 and expected message recv time:  5175250175000
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[3]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v6  delay:  250000000.0 and expected message recv time:  5175250175000
BSM_MSG_RECV_TIME:  5175250175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[13]
 Protocol match v5 EGA.v5.MemoryArray[13] EGA.v5.MemoryArray[13]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 13
Resss 13 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v5.MemoryArray[13]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv5v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v5_v6', ['EGA.v5.MemoryArray[13]'])]
checking eligibility of:	 TaskPurifyRightv5v6
subtasks_available:	 ['EGA.v5.MemoryArray[13]']
dependency_subtasks name:	 EGA.v5.MemoryArray[13]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v5.MemoryArray[13]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v5.MemoryArray[13]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv5v6', ['EP_EGA.v5.MemoryArray[13]']), ('TaskPurifyLeftv5v4', [])]
checking eligibility of:	 TaskSwapMiddlev6v4
Not eligible yet because TaskPurifyLeftv5v4 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5175250175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[3]
 Protocol match v6 EGA.v6.MemoryArray[3] EGA.v6.MemoryArray[3]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv6v5
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v5', ['EGA.v6.MemoryArray[3]'])]
checking eligibility of:	 TaskPurifyLeftv6v5
subtasks_available:	 ['EGA.v6.MemoryArray[3]']
dependency_subtasks name:	 EGA.v6.MemoryArray[3]
inside ent_purify_action1
ReservationProtocol_v6_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v6.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[3]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv6v5', ['EP_EGA.v6.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapRightEndv6v4
subtasks_available:	 ['EP_EGA.v6.MemoryArray[3]']
dependency_subtasks name:	 EP_EGA.v6.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v6.MemoryArray[3]']
True
task.name: TaskSwapRightEndv6v4  for node: v6 and memory returned for this: 3
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[13]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v3  delay:  250000000.0 and expected message recv time:  5178250175000
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[3]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v4  delay:  250000000.0 and expected message recv time:  5178250175000
BSM_MSG_RECV_TIME:  5178250175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[13]
BSM_MSG_RECV_TIME:  5178250175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[3]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[13]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v5  delay:  250000000.0 and expected message recv time:  5182250175000
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[3]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v6  delay:  250000000.0 and expected message recv time:  5182250175000
BSM_MSG_RECV_TIME:  5182250175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[13]
BSM_MSG_RECV_TIME:  5182250175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[3]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[13]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v1_v2  dest:  v1  delay:  250000000.0 and expected message recv time:  5183250175000
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[3]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v1_v2  dest:  v2  delay:  250000000.0 and expected message recv time:  5183250175000
BSM_MSG_RECV_TIME:  5183250175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[13]
BSM_MSG_RECV_TIME:  5183250175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[3]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v0  and reciver_protocol is:  EGA.v0.MemoryArray[3]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v0  delay:  250000000.0 and expected message recv time:  5187250175000
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[3]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v1  delay:  250000000.0 and expected message recv time:  5187250175000
BSM_MSG_RECV_TIME:  5187250175000  at node:  v0
push message at  v0  msg.receiver:  EGA.v0.MemoryArray[3]
BSM_MSG_RECV_TIME:  5187250175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[3]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[13]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v3  delay:  250000000.0 and expected message recv time:  5195750175000
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[3]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v4  delay:  250000000.0 and expected message recv time:  5195750175000
BSM_MSG_RECV_TIME:  5195750175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[13]
BSM_MSG_RECV_TIME:  5195750175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[3]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[13]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v6  delay:  250000000.0 and expected message recv time:  5205750175000
sending messages to:  v7  and reciver_protocol is:  EGA.v7.MemoryArray[3]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v7  delay:  250000000.0 and expected message recv time:  5205750175000
BSM_MSG_RECV_TIME:  5205750175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[13]
 Protocol match v6 EGA.v6.MemoryArray[13] EGA.v6.MemoryArray[13]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 13
Resss 13 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[13]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv6v7
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v7', ['EGA.v6.MemoryArray[13]'])]
checking eligibility of:	 TaskPurifyRightv6v7
subtasks_available:	 ['EGA.v6.MemoryArray[13]']
dependency_subtasks name:	 EGA.v6.MemoryArray[13]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[13]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[13]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv6v7', ['EP_EGA.v6.MemoryArray[13]']), ('TaskSwapRightEndv6v4', [])]
checking eligibility of:	 TaskSwapMiddlev7v4
Not eligible yet because TaskSwapRightEndv6v4 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5205750175000  at node:  v7
push message at  v7  msg.receiver:  EGA.v7.MemoryArray[3]
 Protocol match v7 EGA.v7.MemoryArray[3] EGA.v7.MemoryArray[3]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v7.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv7v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v7_v6', ['EGA.v7.MemoryArray[3]'])]
checking eligibility of:	 TaskPurifyLeftv7v6
subtasks_available:	 ['EGA.v7.MemoryArray[3]']
dependency_subtasks name:	 EGA.v7.MemoryArray[3]
inside ent_purify_action1
ReservationProtocol_v7_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v7.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v7.MemoryArray[3]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v7.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv7v6', ['EP_EGA.v7.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapRightEndv7v4
subtasks_available:	 ['EP_EGA.v7.MemoryArray[3]']
dependency_subtasks name:	 EP_EGA.v7.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v7.MemoryArray[3]']
True
task.name: TaskSwapRightEndv7v4  for node: v7 and memory returned for this: 3
dst, req_func:	 None None
Meas result end
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9850> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9850>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9880>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e98b0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e98e0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9970>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea90> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565fea90>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feac0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feaf0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb20>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb50>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb80>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565febb0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c10> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c10>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c40>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c70>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9ca0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9cd0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d30>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a850> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a850>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a880>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a8b0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a8e0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a970>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566069d0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566069d0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a30>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a60>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a90>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606ac0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606af0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610910> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610970>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109a0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109d0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a30>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b50> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b50>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b80>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6bb0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6be0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c10>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c40>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c70>]
 Protocol match v7 EGA.v7.MemoryArray[4] EGA.v7.MemoryArray[4]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v7 v6
 Protocol match v1 EGA.v1.MemoryArray[4] EGA.v1.MemoryArray[4]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v1 v0
 Protocol match v6 EGA.v6.MemoryArray[4] EGA.v6.MemoryArray[4]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v6 v5
 Protocol match v5 EGA.v5.MemoryArray[4] EGA.v5.MemoryArray[4]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v5 v4
 Protocol match v2 EGA.v2.MemoryArray[4] EGA.v2.MemoryArray[4]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v2 v1
 Protocol match v3 EGA.v3.MemoryArray[4] EGA.v3.MemoryArray[4]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v3 v2
 Protocol match v4 EGA.v4.MemoryArray[4] EGA.v4.MemoryArray[4]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v4 v3
 Protocol match v6 EGA.v6.MemoryArray[14] EGA.v6.MemoryArray[14]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v0 EGA.v0.MemoryArray[4] EGA.v0.MemoryArray[4]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v5 EGA.v5.MemoryArray[14] EGA.v5.MemoryArray[14]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v4 EGA.v4.MemoryArray[14] EGA.v4.MemoryArray[14]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v1 EGA.v1.MemoryArray[14] EGA.v1.MemoryArray[14]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v2 EGA.v2.MemoryArray[14] EGA.v2.MemoryArray[14]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v3 EGA.v3.MemoryArray[14] EGA.v3.MemoryArray[14]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v7 EGA.v7.MemoryArray[4] EGA.v7.MemoryArray[4]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v1 EGA.v1.MemoryArray[4] EGA.v1.MemoryArray[4]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v6 EGA.v6.MemoryArray[4] EGA.v6.MemoryArray[4]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v5 EGA.v5.MemoryArray[4] EGA.v5.MemoryArray[4]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v2 EGA.v2.MemoryArray[4] EGA.v2.MemoryArray[4]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v3 EGA.v3.MemoryArray[4] EGA.v3.MemoryArray[4]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v4 EGA.v4.MemoryArray[4] EGA.v4.MemoryArray[4]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
!!!!!!!!!!!!!!!! emit event v1
!!!!!!!!!!!!!!!! emit event v2
!!!!!!!!!!!!!!!! emit event v3
!!!!!!!!!!!!!!!! emit event v6
!!!!!!!!!!!!!!!! emit event v0
!!!!!!!!!!!!!!!! emit event v5
!!!!!!!!!!!!!!!! emit event v4
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[14]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v4  delay:  250000000.0 and expected message recv time:  5224750175000
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[4]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v5  delay:  250000000.0 and expected message recv time:  5224750175000
BSM_MSG_RECV_TIME:  5224750175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[14]
 Protocol match v4 EGA.v4.MemoryArray[14] EGA.v4.MemoryArray[14]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 14
Resss 14 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v4.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv4v5
added a subtask to dependency  and map status is:	 [('TaskEntGen_v4_v5', ['EGA.v4.MemoryArray[14]'])]
checking eligibility of:	 TaskPurifyRightv4v5
subtasks_available:	 ['EGA.v4.MemoryArray[14]']
dependency_subtasks name:	 EGA.v4.MemoryArray[14]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v4.MemoryArray[14]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v4.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv4v6
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv4v5', ['EP_EGA.v4.MemoryArray[14]'])]
checking eligibility of:	 TaskSwapLeftEndv4v6
subtasks_available:	 ['EP_EGA.v4.MemoryArray[14]']
dependency_subtasks name:	 EP_EGA.v4.MemoryArray[14]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v4.MemoryArray[14]']
True
task.name: TaskSwapLeftEndv4v6  for node: v4 and memory returned for this: 14
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5224750175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[4]
 Protocol match v5 EGA.v5.MemoryArray[4] EGA.v5.MemoryArray[4]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 4
Resss 4 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v5.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv5v4
added a subtask to dependency  and map status is:	 [('TaskEntGen_v5_v4', ['EGA.v5.MemoryArray[4]'])]
checking eligibility of:	 TaskPurifyLeftv5v4
subtasks_available:	 ['EGA.v5.MemoryArray[4]']
dependency_subtasks name:	 EGA.v5.MemoryArray[4]
inside ent_purify_action1
ReservationProtocol_v5_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v5.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v5.MemoryArray[4]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v5.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv5v6', ['EP_EGA.v5.MemoryArray[13]']), ('TaskPurifyLeftv5v4', ['EP_EGA.v5.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddlev6v4
subtasks_available:	 ['EP_EGA.v5.MemoryArray[13]', 'EP_EGA.v5.MemoryArray[4]']
dependency_subtasks name:	 EP_EGA.v5.MemoryArray[13]
dependency_subtasks name:	 EP_EGA.v5.MemoryArray[4]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v5
inside task actin: left_m :v4 right_m: v6 and mid: v4 and self.own.name: v5
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v5.MemoryArray[13]
purify_subtask_right:  EP_EGA.v5.MemoryArray[4]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v5.MemoryArray[13]', 'EP_EGA.v5.MemoryArray[4]']
True
Make use of newly created swap subtask :  ESA.v5.MemoryArray[4].v5.MemoryArray[13]
task.name: TaskSwapMiddlev6v4  for node: v5 and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v4  delay:  500000000.0 and expected message recv time:  5225250175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x1577cee50>
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v6  delay:  500000000.0 and expected message recv time:  5225250175000
dst, req_func:	 v6 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x1577ceee0>
Meas result end
REQ_FUNC_RECV_TIME:  5225250175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x158070580>
Protocol Name:  ESB.v4.MemoryArray[14]
REQ_FUNC_RECV_TIME:  5225250175000  at node:  v6
push message at  v6  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x158070580>
Protocol Name:  ESB.v6.MemoryArray[3]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v5.MemoryArray[4].v5.MemoryArray[13]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 4
Resss 4 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 13
Resss 13 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v4 ESB.v4.MemoryArray[14] ESB.v4.MemoryArray[14]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v4.MemoryArray[14]', 'fidelity': 0.8304014059736002, 'remote_node': 'v6', 'remote_memo': 'v6.MemoryArray[3]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 14
Resss 14 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v6.MemoryArray[3]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv4v7
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v6', ['ESB.v4.MemoryArray[14]'])]
checking eligibility of:	 TaskSwapLeftEndv4v7
subtasks_available:	 ['ESB.v4.MemoryArray[14]']
dependency_subtasks name:	 ESB.v4.MemoryArray[14]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[14]']
True
task.name: TaskSwapLeftEndv4v7  for node: v4 and memory returned for this: 14
dst, req_func:	 None None
 Protocol match v6 ESB.v6.MemoryArray[3] ESB.v6.MemoryArray[3]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v6.MemoryArray[3]', 'fidelity': 0.8304014059736002, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[14]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v6', 'v4.MemoryArray[14]')
########Subtask Succeeded############## subtask.protocol name ESB.v6.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv6v7', ['EP_EGA.v6.MemoryArray[13]']), ('TaskSwapRightEndv6v4', ['ESB.v6.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapMiddlev7v4
subtasks_available:	 ['EP_EGA.v6.MemoryArray[13]', 'ESB.v6.MemoryArray[3]']
dependency_subtasks name:	 EP_EGA.v6.MemoryArray[13]
dependency_subtasks name:	 ESB.v6.MemoryArray[3]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v6
inside task actin: left_m :v4 right_m: v7 and mid: v4 and self.own.name: v6
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v6.MemoryArray[13]
purify_subtask_right:  ESB.v6.MemoryArray[3]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v6.MemoryArray[13]', 'ESB.v6.MemoryArray[3]']
True
Make use of newly created swap subtask :  ESA.v6.MemoryArray[3].v6.MemoryArray[13]
task.name: TaskSwapMiddlev7v4  for node: v6 and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v4  delay:  500000000.0 and expected message recv time:  5226750175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x1580a00d0>
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v7  delay:  500000000.0 and expected message recv time:  5226750175000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x1580a0160>
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[14]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v5  delay:  250000000.0 and expected message recv time:  5226750175000
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[4]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v6  delay:  250000000.0 and expected message recv time:  5226750175000
REQ_FUNC_RECV_TIME:  5226750175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1580a2070>
Protocol Name:  ESB.v4.MemoryArray[14]
REQ_FUNC_RECV_TIME:  5226750175000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1580a2070>
Protocol Name:  ESB.v7.MemoryArray[3]
BSM_MSG_RECV_TIME:  5226750175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[14]
 Protocol match v5 EGA.v5.MemoryArray[14] EGA.v5.MemoryArray[14]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 14
Resss 14 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v5.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv5v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v5_v6', ['EGA.v5.MemoryArray[14]'])]
checking eligibility of:	 TaskPurifyRightv5v6
subtasks_available:	 ['EGA.v5.MemoryArray[14]']
dependency_subtasks name:	 EGA.v5.MemoryArray[14]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v5.MemoryArray[14]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v5.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv5v6', ['EP_EGA.v5.MemoryArray[14]']), ('TaskPurifyLeftv5v4', [])]
checking eligibility of:	 TaskSwapMiddlev6v4
Not eligible yet because TaskPurifyLeftv5v4 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5226750175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[4]
 Protocol match v6 EGA.v6.MemoryArray[4] EGA.v6.MemoryArray[4]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 4
Resss 4 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv6v5
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v5', ['EGA.v6.MemoryArray[4]'])]
checking eligibility of:	 TaskPurifyLeftv6v5
subtasks_available:	 ['EGA.v6.MemoryArray[4]']
dependency_subtasks name:	 EGA.v6.MemoryArray[4]
inside ent_purify_action1
ReservationProtocol_v6_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v6.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[4]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv6v5', ['EP_EGA.v6.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapRightEndv6v4
subtasks_available:	 ['EP_EGA.v6.MemoryArray[4]']
dependency_subtasks name:	 EP_EGA.v6.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v6.MemoryArray[4]']
True
task.name: TaskSwapRightEndv6v4  for node: v6 and memory returned for this: 4
dst, req_func:	 None None
Meas result end
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v6.MemoryArray[3].v6.MemoryArray[13]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 13
Resss 13 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v4 ESB.v4.MemoryArray[14] ESB.v4.MemoryArray[14]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v4.MemoryArray[14]', 'fidelity': 0.7375541591274104, 'remote_node': 'v7', 'remote_memo': 'v7.MemoryArray[3]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 14
Resss 14 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v7.MemoryArray[3]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v7', ['ESB.v4.MemoryArray[12]', 'ESB.v4.MemoryArray[14]']), ('TaskSwapRightEndv4v0', [])]
checking eligibility of:	 TaskSwapMiddlev7v0
Not eligible yet because TaskSwapRightEndv4v0 does not have an instance to allocate
 Protocol match v7 ESB.v7.MemoryArray[3] ESB.v7.MemoryArray[3]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v7.MemoryArray[3]', 'fidelity': 0.7375541591274104, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[14]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v7', 'v4.MemoryArray[14]')
########Subtask Succeeded############## subtask.protocol name ESB.v7.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv7v0
added a subtask to dependency  and map status is:	 [('TaskSwapRightEndv7v4', ['ESB.v7.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapRightEndv7v0
subtasks_available:	 ['ESB.v7.MemoryArray[3]']
dependency_subtasks name:	 ESB.v7.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v7.MemoryArray[3]']
True
task.name: TaskSwapRightEndv7v0  for node: v7 and memory returned for this: 3
dst, req_func:	 None None
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[14]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v2  delay:  250000000.0 and expected message recv time:  5233750175000
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[4]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v3  delay:  250000000.0 and expected message recv time:  5233750175000
BSM_MSG_RECV_TIME:  5233750175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[14]
 Protocol match v2 EGA.v2.MemoryArray[14] EGA.v2.MemoryArray[14]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 14
Resss 14 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v2.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv2v3
added a subtask to dependency  and map status is:	 [('TaskEntGen_v2_v3', ['EGA.v2.MemoryArray[14]'])]
checking eligibility of:	 TaskPurifyRightv2v3
subtasks_available:	 ['EGA.v2.MemoryArray[14]']
dependency_subtasks name:	 EGA.v2.MemoryArray[14]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v2.MemoryArray[14]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v2.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv2v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv2v3', ['EP_EGA.v2.MemoryArray[14]'])]
checking eligibility of:	 TaskSwapLeftEndv2v4
subtasks_available:	 ['EP_EGA.v2.MemoryArray[14]']
dependency_subtasks name:	 EP_EGA.v2.MemoryArray[14]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v2.MemoryArray[14]']
True
task.name: TaskSwapLeftEndv2v4  for node: v2 and memory returned for this: 14
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5233750175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[4]
 Protocol match v3 EGA.v3.MemoryArray[4] EGA.v3.MemoryArray[4]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 4
Resss 4 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v3.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv3v2
added a subtask to dependency  and map status is:	 [('TaskEntGen_v3_v2', ['EGA.v3.MemoryArray[4]'])]
checking eligibility of:	 TaskPurifyLeftv3v2
subtasks_available:	 ['EGA.v3.MemoryArray[4]']
dependency_subtasks name:	 EGA.v3.MemoryArray[4]
inside ent_purify_action1
ReservationProtocol_v3_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v3.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v3.MemoryArray[4]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v3.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv3v4', ['EP_EGA.v3.MemoryArray[12]', 'EP_EGA.v3.MemoryArray[13]']), ('TaskPurifyLeftv3v2', ['EP_EGA.v3.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddlev4v2
subtasks_available:	 ['EP_EGA.v3.MemoryArray[12]', 'EP_EGA.v3.MemoryArray[4]']
dependency_subtasks name:	 EP_EGA.v3.MemoryArray[12]
dependency_subtasks name:	 EP_EGA.v3.MemoryArray[4]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v3
inside task actin: left_m :v2 right_m: v4 and mid: v4 and self.own.name: v3
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v3.MemoryArray[12]
purify_subtask_right:  EP_EGA.v3.MemoryArray[4]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v3.MemoryArray[12]', 'EP_EGA.v3.MemoryArray[4]']
True
Make use of newly created swap subtask :  ESA.v3.MemoryArray[4].v3.MemoryArray[12]
task.name: TaskSwapMiddlev4v2  for node: v3 and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v2  delay:  500000000.0 and expected message recv time:  5234250175000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x1580a0700>
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v4  delay:  500000000.0 and expected message recv time:  5234250175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x1580a0790>
Meas result end
REQ_FUNC_RECV_TIME:  5234250175000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1581616a0>
Protocol Name:  ESB.v2.MemoryArray[14]
REQ_FUNC_RECV_TIME:  5234250175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1581616a0>
Protocol Name:  ESB.v4.MemoryArray[2]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[14]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v3  delay:  250000000.0 and expected message recv time:  5234750175000
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[4]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v4  delay:  250000000.0 and expected message recv time:  5234750175000
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v3.MemoryArray[4].v3.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 4
Resss 4 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 12
Resss 12 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
BSM_MSG_RECV_TIME:  5234750175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[14]
 Protocol match v3 EGA.v3.MemoryArray[14] EGA.v3.MemoryArray[14]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 14
Resss 14 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v3.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv3v4
added a subtask to dependency  and map status is:	 [('TaskEntGen_v3_v4', ['EGA.v3.MemoryArray[14]'])]
checking eligibility of:	 TaskPurifyRightv3v4
subtasks_available:	 ['EGA.v3.MemoryArray[14]']
dependency_subtasks name:	 EGA.v3.MemoryArray[14]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v3.MemoryArray[14]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v3.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv3v4', ['EP_EGA.v3.MemoryArray[13]', 'EP_EGA.v3.MemoryArray[14]']), ('TaskPurifyLeftv3v2', [])]
checking eligibility of:	 TaskSwapMiddlev4v2
Not eligible yet because TaskPurifyLeftv3v2 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5234750175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[4]
 Protocol match v4 EGA.v4.MemoryArray[4] EGA.v4.MemoryArray[4]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 4
Resss 4 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v4.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv4v3
added a subtask to dependency  and map status is:	 [('TaskEntGen_v4_v3', ['EGA.v4.MemoryArray[4]'])]
checking eligibility of:	 TaskPurifyLeftv4v3
subtasks_available:	 ['EGA.v4.MemoryArray[4]']
dependency_subtasks name:	 EGA.v4.MemoryArray[4]
inside ent_purify_action1
ReservationProtocol_v4_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v4.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v4.MemoryArray[4]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v4.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv4v3', ['EP_EGA.v4.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapRightEndv4v2
subtasks_available:	 ['EP_EGA.v4.MemoryArray[4]']
dependency_subtasks name:	 EP_EGA.v4.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v4.MemoryArray[4]']
True
task.name: TaskSwapRightEndv4v2  for node: v4 and memory returned for this: 4
dst, req_func:	 None None
Meas result end
 Protocol match v2 ESB.v2.MemoryArray[14] ESB.v2.MemoryArray[14]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v2.MemoryArray[14]', 'fidelity': 0.8304014059736002, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[2]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 14
Resss 14 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v2', 'v4.MemoryArray[2]')
########Subtask Succeeded############## subtask.protocol name ESB.v2.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv2v4', ['ESB.v2.MemoryArray[14]']), ('TaskSwapRightEndv2v0', ['ESB.v2.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapMiddlev4v0
subtasks_available:	 ['ESB.v2.MemoryArray[14]', 'ESB.v2.MemoryArray[3]']
dependency_subtasks name:	 ESB.v2.MemoryArray[14]
dependency_subtasks name:	 ESB.v2.MemoryArray[3]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v2
inside task actin: left_m :v0 right_m: v4 and mid: v4 and self.own.name: v2
inside ent_swap_action_middle
purify_subtask_left:  ESB.v2.MemoryArray[14]
purify_subtask_right:  ESB.v2.MemoryArray[3]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v2.MemoryArray[14]', 'ESB.v2.MemoryArray[3]']
True
Make use of newly created swap subtask :  ESA.v2.MemoryArray[3].v2.MemoryArray[14]
task.name: TaskSwapMiddlev4v0  for node: v2 and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v0  delay:  500000000.0 and expected message recv time:  5235750175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x1580a0a60>
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v4  delay:  500000000.0 and expected message recv time:  5235750175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x1580a0af0>
 Protocol match v4 ESB.v4.MemoryArray[2] ESB.v4.MemoryArray[2]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v4.MemoryArray[2]', 'fidelity': 0.8304014059736002, 'remote_node': 'v2', 'remote_memo': 'v2.MemoryArray[14]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v2.MemoryArray[14]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv4v0
added a subtask to dependency  and map status is:	 [('TaskSwapRightEndv4v2', ['ESB.v4.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapRightEndv4v0
subtasks_available:	 ['ESB.v4.MemoryArray[2]']
dependency_subtasks name:	 ESB.v4.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[2]']
True
task.name: TaskSwapRightEndv4v0  for node: v4 and memory returned for this: 2
dst, req_func:	 None None
REQ_FUNC_RECV_TIME:  5235750175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x158193310>
Protocol Name:  ESB.v0.MemoryArray[2]
REQ_FUNC_RECV_TIME:  5235750175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x158193310>
Protocol Name:  ESB.v4.MemoryArray[2]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v2.MemoryArray[3].v2.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 14
Resss 14 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v0 ESB.v0.MemoryArray[2] ESB.v0.MemoryArray[2]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[2]', 'fidelity': 0.6550881702907854, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[2]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v4.MemoryArray[2]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v7
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv0v4', ['ESB.v0.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapLeftEndv0v7
subtasks_available:	 ['ESB.v0.MemoryArray[2]']
dependency_subtasks name:	 ESB.v0.MemoryArray[2]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v0.MemoryArray[2]']
True
task.name: TaskSwapLeftEndv0v7  for node: v0 and memory returned for this: 2
dst, req_func:	 None None
 Protocol match v4 ESB.v4.MemoryArray[2] ESB.v4.MemoryArray[2]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v4.MemoryArray[2]', 'fidelity': 0.6550881702907854, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[2]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v0.MemoryArray[2]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v7', ['ESB.v4.MemoryArray[12]', 'ESB.v4.MemoryArray[14]']), ('TaskSwapRightEndv4v0', ['ESB.v4.MemoryArray[2]'])]
checking eligibility of:	 TaskSwapMiddlev7v0
subtasks_available:	 ['ESB.v4.MemoryArray[12]', 'ESB.v4.MemoryArray[2]']
dependency_subtasks name:	 ESB.v4.MemoryArray[12]
dependency_subtasks name:	 ESB.v4.MemoryArray[2]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v4
inside task actin: left_m :v0 right_m: v7 and mid: v4 and self.own.name: v4
inside ent_swap_action_middle
purify_subtask_left:  ESB.v4.MemoryArray[12]
purify_subtask_right:  ESB.v4.MemoryArray[2]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[12]', 'ESB.v4.MemoryArray[2]']
True
Make use of newly created swap subtask :  ESA.v4.MemoryArray[2].v4.MemoryArray[12]
task.name: TaskSwapMiddlev7v0  for node: v4 and memory returned for this: 2
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v0  delay:  500000000.0 and expected message recv time:  5237250175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x1580a0ca0>
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v7  delay:  500000000.0 and expected message recv time:  5237250175000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x1580a0d30>
REQ_FUNC_RECV_TIME:  5237250175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1581b9070>
Protocol Name:  ESB.v0.MemoryArray[2]
REQ_FUNC_RECV_TIME:  5237250175000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1581b9070>
Protocol Name:  ESB.v7.MemoryArray[2]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v4.MemoryArray[2].v4.MemoryArray[12]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 12
Resss 12 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v0 ESB.v0.MemoryArray[2] ESB.v0.MemoryArray[2]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[2]', 'fidelity': 0.4590048543634773, 'remote_node': 'v7', 'remote_memo': 'v7.MemoryArray[2]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v7.MemoryArray[2]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
 Protocol match v7 ESB.v7.MemoryArray[2] ESB.v7.MemoryArray[2]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v7.MemoryArray[2]', 'fidelity': 0.4590048543634773, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[2]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 2
Resss 2 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v7', 'v0.MemoryArray[2]')
########Subtask Succeeded############## subtask.protocol name ESB.v7.MemoryArray[2]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[14]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v1_v2  dest:  v1  delay:  250000000.0 and expected message recv time:  5244750175000
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[4]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v1_v2  dest:  v2  delay:  250000000.0 and expected message recv time:  5244750175000
BSM_MSG_RECV_TIME:  5244750175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[14]
 Protocol match v1 EGA.v1.MemoryArray[14] EGA.v1.MemoryArray[14]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 14
Resss 14 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v1.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv1v2
added a subtask to dependency  and map status is:	 [('TaskEntGen_v1_v2', ['EGA.v1.MemoryArray[14]'])]
checking eligibility of:	 TaskPurifyRightv1v2
subtasks_available:	 ['EGA.v1.MemoryArray[14]']
dependency_subtasks name:	 EGA.v1.MemoryArray[14]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v1.MemoryArray[14]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v1.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv1v2', ['EP_EGA.v1.MemoryArray[14]']), ('TaskPurifyLeftv1v0', ['EP_EGA.v1.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapMiddlev2v0
subtasks_available:	 ['EP_EGA.v1.MemoryArray[14]', 'EP_EGA.v1.MemoryArray[3]']
dependency_subtasks name:	 EP_EGA.v1.MemoryArray[14]
dependency_subtasks name:	 EP_EGA.v1.MemoryArray[3]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v1
inside task actin: left_m :v0 right_m: v2 and mid: v4 and self.own.name: v1
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v1.MemoryArray[14]
purify_subtask_right:  EP_EGA.v1.MemoryArray[3]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v1.MemoryArray[14]', 'EP_EGA.v1.MemoryArray[3]']
True
Make use of newly created swap subtask :  ESA.v1.MemoryArray[3].v1.MemoryArray[14]
task.name: TaskSwapMiddlev2v0  for node: v1 and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v0  delay:  500000000.0 and expected message recv time:  5245250175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x1580a0ee0>
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v2  delay:  500000000.0 and expected message recv time:  5245250175000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x1580a0f70>
Meas result end
BSM_MSG_RECV_TIME:  5244750175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[4]
 Protocol match v2 EGA.v2.MemoryArray[4] EGA.v2.MemoryArray[4]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 4
Resss 4 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v2.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv2v1
added a subtask to dependency  and map status is:	 [('TaskEntGen_v2_v1', ['EGA.v2.MemoryArray[4]'])]
checking eligibility of:	 TaskPurifyLeftv2v1
subtasks_available:	 ['EGA.v2.MemoryArray[4]']
dependency_subtasks name:	 EGA.v2.MemoryArray[4]
inside ent_purify_action1
ReservationProtocol_v2_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v2.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v2.MemoryArray[4]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v2.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv2v1', ['EP_EGA.v2.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapRightEndv2v0
subtasks_available:	 ['EP_EGA.v2.MemoryArray[4]']
dependency_subtasks name:	 EP_EGA.v2.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v2.MemoryArray[4]']
True
task.name: TaskSwapRightEndv2v0  for node: v2 and memory returned for this: 4
dst, req_func:	 None None
Meas result end
REQ_FUNC_RECV_TIME:  5245250175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x158286550>
Protocol Name:  ESB.v0.MemoryArray[3]
REQ_FUNC_RECV_TIME:  5245250175000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x158286550>
Protocol Name:  ESB.v2.MemoryArray[4]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v1.MemoryArray[3].v1.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 14
Resss 14 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v0 ESB.v0.MemoryArray[3] ESB.v0.MemoryArray[3]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[3]', 'fidelity': 0.8304014059736002, 'remote_node': 'v2', 'remote_memo': 'v2.MemoryArray[4]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v2.MemoryArray[4]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v4
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv0v2', ['ESB.v0.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapLeftEndv0v4
subtasks_available:	 ['ESB.v0.MemoryArray[3]']
dependency_subtasks name:	 ESB.v0.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v0.MemoryArray[3]']
True
task.name: TaskSwapLeftEndv0v4  for node: v0 and memory returned for this: 3
dst, req_func:	 None None
 Protocol match v2 ESB.v2.MemoryArray[4] ESB.v2.MemoryArray[4]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v2.MemoryArray[4]', 'fidelity': 0.8304014059736002, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[3]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 4
Resss 4 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v2', 'v0.MemoryArray[3]')
########Subtask Succeeded############## subtask.protocol name ESB.v2.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv2v4', []), ('TaskSwapRightEndv2v0', ['ESB.v2.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddlev4v0
Not eligible yet because TaskSwapLeftEndv2v4 does not have an instance to allocate
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[14]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v2  delay:  250000000.0 and expected message recv time:  5247250175000
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[4]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v3  delay:  250000000.0 and expected message recv time:  5247250175000
BSM_MSG_RECV_TIME:  5247250175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[14]
BSM_MSG_RECV_TIME:  5247250175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[4]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[14]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v2  delay:  250000000.0 and expected message recv time:  5254250175000
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[4]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v3  delay:  250000000.0 and expected message recv time:  5254250175000
BSM_MSG_RECV_TIME:  5254250175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[14]
BSM_MSG_RECV_TIME:  5254250175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[4]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[14]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v4  delay:  250000000.0 and expected message recv time:  5257750175000
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[4]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v5  delay:  250000000.0 and expected message recv time:  5257750175000
BSM_MSG_RECV_TIME:  5257750175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[14]
BSM_MSG_RECV_TIME:  5257750175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[4]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a00> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a30>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a60>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a90>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606ac0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606af0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a880> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a880>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a8b0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a8e0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a970>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b80> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6b80>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6bb0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6be0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c10>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c40>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c70>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c40> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c40>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c70>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9ca0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9cd0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d30>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feac0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feac0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feaf0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb20>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb50>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb80>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565febb0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610940> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610970>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109a0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109d0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a30>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9880> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9880>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e98b0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e98e0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9970>]
 Protocol match v2 EGA.v2.MemoryArray[5] EGA.v2.MemoryArray[5]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v2 v1
 Protocol match v5 EGA.v5.MemoryArray[5] EGA.v5.MemoryArray[5]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v5 v4
 Protocol match v4 EGA.v4.MemoryArray[5] EGA.v4.MemoryArray[5]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v4 v3
 Protocol match v6 EGA.v6.MemoryArray[5] EGA.v6.MemoryArray[5]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v6 v5
 Protocol match v1 EGA.v1.MemoryArray[5] EGA.v1.MemoryArray[5]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v1 v0
 Protocol match v3 EGA.v3.MemoryArray[5] EGA.v3.MemoryArray[5]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v3 v2
 Protocol match v7 EGA.v7.MemoryArray[5] EGA.v7.MemoryArray[5]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v7 v6
 Protocol match v1 EGA.v1.MemoryArray[15] EGA.v1.MemoryArray[15]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v4 EGA.v4.MemoryArray[15] EGA.v4.MemoryArray[15]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v3 EGA.v3.MemoryArray[15] EGA.v3.MemoryArray[15]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v5 EGA.v5.MemoryArray[15] EGA.v5.MemoryArray[15]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v0 EGA.v0.MemoryArray[5] EGA.v0.MemoryArray[5]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v2 EGA.v2.MemoryArray[15] EGA.v2.MemoryArray[15]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v6 EGA.v6.MemoryArray[15] EGA.v6.MemoryArray[15]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v2 EGA.v2.MemoryArray[5] EGA.v2.MemoryArray[5]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v5 EGA.v5.MemoryArray[5] EGA.v5.MemoryArray[5]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v4 EGA.v4.MemoryArray[5] EGA.v4.MemoryArray[5]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v6 EGA.v6.MemoryArray[5] EGA.v6.MemoryArray[5]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v1 EGA.v1.MemoryArray[5] EGA.v1.MemoryArray[5]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v3 EGA.v3.MemoryArray[5] EGA.v3.MemoryArray[5]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v7 EGA.v7.MemoryArray[5] EGA.v7.MemoryArray[5]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
!!!!!!!!!!!!!!!! emit event v5
!!!!!!!!!!!!!!!! emit event v1
!!!!!!!!!!!!!!!! emit event v4
!!!!!!!!!!!!!!!! emit event v3
!!!!!!!!!!!!!!!! emit event v6
!!!!!!!!!!!!!!!! emit event v0
!!!!!!!!!!!!!!!! emit event v2
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[15]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v3  delay:  250000000.0 and expected message recv time:  5270250175000
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[5]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v4  delay:  250000000.0 and expected message recv time:  5270250175000
BSM_MSG_RECV_TIME:  5270250175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[15]
 Protocol match v3 EGA.v3.MemoryArray[15] EGA.v3.MemoryArray[15]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 15
Resss 15 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v3.MemoryArray[15]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv3v4
added a subtask to dependency  and map status is:	 [('TaskEntGen_v3_v4', ['EGA.v3.MemoryArray[15]'])]
checking eligibility of:	 TaskPurifyRightv3v4
subtasks_available:	 ['EGA.v3.MemoryArray[15]']
dependency_subtasks name:	 EGA.v3.MemoryArray[15]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v3.MemoryArray[15]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v3.MemoryArray[15]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv3v4', ['EP_EGA.v3.MemoryArray[13]', 'EP_EGA.v3.MemoryArray[14]', 'EP_EGA.v3.MemoryArray[15]']), ('TaskPurifyLeftv3v2', [])]
checking eligibility of:	 TaskSwapMiddlev4v2
Not eligible yet because TaskPurifyLeftv3v2 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5270250175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[5]
 Protocol match v4 EGA.v4.MemoryArray[5] EGA.v4.MemoryArray[5]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 5
Resss 5 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v4.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv4v3
added a subtask to dependency  and map status is:	 [('TaskEntGen_v4_v3', ['EGA.v4.MemoryArray[5]'])]
checking eligibility of:	 TaskPurifyLeftv4v3
subtasks_available:	 ['EGA.v4.MemoryArray[5]']
dependency_subtasks name:	 EGA.v4.MemoryArray[5]
inside ent_purify_action1
ReservationProtocol_v4_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v4.MemoryArray[5]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v4.MemoryArray[5]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v4.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv4v3', ['EP_EGA.v4.MemoryArray[5]'])]
checking eligibility of:	 TaskSwapRightEndv4v2
subtasks_available:	 ['EP_EGA.v4.MemoryArray[5]']
dependency_subtasks name:	 EP_EGA.v4.MemoryArray[5]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v4.MemoryArray[5]']
True
task.name: TaskSwapRightEndv4v2  for node: v4 and memory returned for this: 5
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[15]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v5  delay:  250000000.0 and expected message recv time:  5290250175000
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[5]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v6  delay:  250000000.0 and expected message recv time:  5290250175000
BSM_MSG_RECV_TIME:  5290250175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[15]
 Protocol match v5 EGA.v5.MemoryArray[15] EGA.v5.MemoryArray[15]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 15
Resss 15 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v5.MemoryArray[15]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv5v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v5_v6', ['EGA.v5.MemoryArray[15]'])]
checking eligibility of:	 TaskPurifyRightv5v6
subtasks_available:	 ['EGA.v5.MemoryArray[15]']
dependency_subtasks name:	 EGA.v5.MemoryArray[15]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v5.MemoryArray[15]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v5.MemoryArray[15]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv5v6', ['EP_EGA.v5.MemoryArray[14]', 'EP_EGA.v5.MemoryArray[15]']), ('TaskPurifyLeftv5v4', [])]
checking eligibility of:	 TaskSwapMiddlev6v4
Not eligible yet because TaskPurifyLeftv5v4 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5290250175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[5]
 Protocol match v6 EGA.v6.MemoryArray[5] EGA.v6.MemoryArray[5]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 5
Resss 5 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv6v5
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v5', ['EGA.v6.MemoryArray[5]'])]
checking eligibility of:	 TaskPurifyLeftv6v5
subtasks_available:	 ['EGA.v6.MemoryArray[5]']
dependency_subtasks name:	 EGA.v6.MemoryArray[5]
inside ent_purify_action1
ReservationProtocol_v6_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v6.MemoryArray[5]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[5]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv6v5', ['EP_EGA.v6.MemoryArray[5]'])]
checking eligibility of:	 TaskSwapRightEndv6v4
subtasks_available:	 ['EP_EGA.v6.MemoryArray[5]']
dependency_subtasks name:	 EP_EGA.v6.MemoryArray[5]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v6.MemoryArray[5]']
True
task.name: TaskSwapRightEndv6v4  for node: v6 and memory returned for this: 5
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v0  and reciver_protocol is:  EGA.v0.MemoryArray[5]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v0  delay:  250000000.0 and expected message recv time:  5293250175000
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[5]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v1  delay:  250000000.0 and expected message recv time:  5293250175000
BSM_MSG_RECV_TIME:  5293250175000  at node:  v0
push message at  v0  msg.receiver:  EGA.v0.MemoryArray[5]
 Protocol match v0 EGA.v0.MemoryArray[5] EGA.v0.MemoryArray[5]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 5
Resss 5 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v0.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv0v1
added a subtask to dependency  and map status is:	 [('TaskEntGen_v0_v1', ['EGA.v0.MemoryArray[5]'])]
checking eligibility of:	 TaskPurifyRightv0v1
subtasks_available:	 ['EGA.v0.MemoryArray[5]']
dependency_subtasks name:	 EGA.v0.MemoryArray[5]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v0.MemoryArray[5]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v0.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv0v1', ['EP_EGA.v0.MemoryArray[5]'])]
checking eligibility of:	 TaskSwapLeftEndv0v2
subtasks_available:	 ['EP_EGA.v0.MemoryArray[5]']
dependency_subtasks name:	 EP_EGA.v0.MemoryArray[5]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v0.MemoryArray[5]']
True
task.name: TaskSwapLeftEndv0v2  for node: v0 and memory returned for this: 5
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5293250175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[5]
 Protocol match v1 EGA.v1.MemoryArray[5] EGA.v1.MemoryArray[5]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 5
Resss 5 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v1.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv1v0
added a subtask to dependency  and map status is:	 [('TaskEntGen_v1_v0', ['EGA.v1.MemoryArray[5]'])]
checking eligibility of:	 TaskPurifyLeftv1v0
subtasks_available:	 ['EGA.v1.MemoryArray[5]']
dependency_subtasks name:	 EGA.v1.MemoryArray[5]
inside ent_purify_action1
ReservationProtocol_v1_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v1.MemoryArray[5]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v1.MemoryArray[5]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v1.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv1v2', []), ('TaskPurifyLeftv1v0', ['EP_EGA.v1.MemoryArray[5]'])]
checking eligibility of:	 TaskSwapMiddlev2v0
Not eligible yet because TaskPurifyRightv1v2 does not have an instance to allocate
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[15]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v3  delay:  250000000.0 and expected message recv time:  5304750175000
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[5]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v4  delay:  250000000.0 and expected message recv time:  5304750175000
BSM_MSG_RECV_TIME:  5304750175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[15]
BSM_MSG_RECV_TIME:  5304750175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[5]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[15]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v6  delay:  250000000.0 and expected message recv time:  5307750175000
sending messages to:  v7  and reciver_protocol is:  EGA.v7.MemoryArray[5]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v7  delay:  250000000.0 and expected message recv time:  5307750175000
BSM_MSG_RECV_TIME:  5307750175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[15]
 Protocol match v6 EGA.v6.MemoryArray[15] EGA.v6.MemoryArray[15]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 15
Resss 15 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[15]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv6v7
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v7', ['EGA.v6.MemoryArray[15]'])]
checking eligibility of:	 TaskPurifyRightv6v7
subtasks_available:	 ['EGA.v6.MemoryArray[15]']
dependency_subtasks name:	 EGA.v6.MemoryArray[15]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[15]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[15]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv6v7', ['EP_EGA.v6.MemoryArray[15]']), ('TaskSwapRightEndv6v4', [])]
checking eligibility of:	 TaskSwapMiddlev7v4
Not eligible yet because TaskSwapRightEndv6v4 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5307750175000  at node:  v7
push message at  v7  msg.receiver:  EGA.v7.MemoryArray[5]
 Protocol match v7 EGA.v7.MemoryArray[5] EGA.v7.MemoryArray[5]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 5
Resss 5 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v7.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv7v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v7_v6', ['EGA.v7.MemoryArray[5]'])]
checking eligibility of:	 TaskPurifyLeftv7v6
subtasks_available:	 ['EGA.v7.MemoryArray[5]']
dependency_subtasks name:	 EGA.v7.MemoryArray[5]
inside ent_purify_action1
ReservationProtocol_v7_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v7.MemoryArray[5]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v7.MemoryArray[5]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v7.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv7v6', ['EP_EGA.v7.MemoryArray[5]'])]
checking eligibility of:	 TaskSwapRightEndv7v4
subtasks_available:	 ['EP_EGA.v7.MemoryArray[5]']
dependency_subtasks name:	 EP_EGA.v7.MemoryArray[5]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v7.MemoryArray[5]']
True
task.name: TaskSwapRightEndv7v4  for node: v7 and memory returned for this: 5
dst, req_func:	 None None
Meas result end
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e98b0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e98b0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e98e0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9970>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610970> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610970>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109a0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109d0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a30>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feaf0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feaf0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb20>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb50>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb80>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565febb0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c70> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9c70>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9ca0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9cd0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d30>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6bb0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6bb0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6be0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c10>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c40>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c70>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a8b0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a8b0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a8e0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a970>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a30> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a30>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a60>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a90>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606ac0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606af0>]
 Protocol match v7 EGA.v7.MemoryArray[6] EGA.v7.MemoryArray[6]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v7 v6
 Protocol match v3 EGA.v3.MemoryArray[6] EGA.v3.MemoryArray[6]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v3 v2
 Protocol match v1 EGA.v1.MemoryArray[6] EGA.v1.MemoryArray[6]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v1 v0
 Protocol match v6 EGA.v6.MemoryArray[6] EGA.v6.MemoryArray[6]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v6 v5
 Protocol match v4 EGA.v4.MemoryArray[6] EGA.v4.MemoryArray[6]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v4 v3
 Protocol match v5 EGA.v5.MemoryArray[6] EGA.v5.MemoryArray[6]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v5 v4
 Protocol match v2 EGA.v2.MemoryArray[6] EGA.v2.MemoryArray[6]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v2 v1
 Protocol match v6 EGA.v6.MemoryArray[16] EGA.v6.MemoryArray[16]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v2 EGA.v2.MemoryArray[16] EGA.v2.MemoryArray[16]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v0 EGA.v0.MemoryArray[6] EGA.v0.MemoryArray[6]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v5 EGA.v5.MemoryArray[16] EGA.v5.MemoryArray[16]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v3 EGA.v3.MemoryArray[16] EGA.v3.MemoryArray[16]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v4 EGA.v4.MemoryArray[16] EGA.v4.MemoryArray[16]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v1 EGA.v1.MemoryArray[16] EGA.v1.MemoryArray[16]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v7 EGA.v7.MemoryArray[6] EGA.v7.MemoryArray[6]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v3 EGA.v3.MemoryArray[6] EGA.v3.MemoryArray[6]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v1 EGA.v1.MemoryArray[6] EGA.v1.MemoryArray[6]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v6 EGA.v6.MemoryArray[6] EGA.v6.MemoryArray[6]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v4 EGA.v4.MemoryArray[6] EGA.v4.MemoryArray[6]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v5 EGA.v5.MemoryArray[6] EGA.v5.MemoryArray[6]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v2 EGA.v2.MemoryArray[6] EGA.v2.MemoryArray[6]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
!!!!!!!!!!!!!!!! emit event v5
!!!!!!!!!!!!!!!! emit event v6
!!!!!!!!!!!!!!!! emit event v2
!!!!!!!!!!!!!!!! emit event v0
!!!!!!!!!!!!!!!! emit event v1
!!!!!!!!!!!!!!!! emit event v3
!!!!!!!!!!!!!!!! emit event v4
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[16]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v5  delay:  250000000.0 and expected message recv time:  5322250175000
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[6]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v6  delay:  250000000.0 and expected message recv time:  5322250175000
BSM_MSG_RECV_TIME:  5322250175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[16]
 Protocol match v5 EGA.v5.MemoryArray[16] EGA.v5.MemoryArray[16]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 16
Resss 16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v5.MemoryArray[16]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv5v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v5_v6', ['EGA.v5.MemoryArray[16]'])]
checking eligibility of:	 TaskPurifyRightv5v6
subtasks_available:	 ['EGA.v5.MemoryArray[16]']
dependency_subtasks name:	 EGA.v5.MemoryArray[16]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v5.MemoryArray[16]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v5.MemoryArray[16]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv5v6', ['EP_EGA.v5.MemoryArray[14]', 'EP_EGA.v5.MemoryArray[15]', 'EP_EGA.v5.MemoryArray[16]']), ('TaskPurifyLeftv5v4', [])]
checking eligibility of:	 TaskSwapMiddlev6v4
Not eligible yet because TaskPurifyLeftv5v4 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5322250175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[6]
 Protocol match v6 EGA.v6.MemoryArray[6] EGA.v6.MemoryArray[6]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 6
Resss 6 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[6]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv6v5
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v5', ['EGA.v6.MemoryArray[6]'])]
checking eligibility of:	 TaskPurifyLeftv6v5
subtasks_available:	 ['EGA.v6.MemoryArray[6]']
dependency_subtasks name:	 EGA.v6.MemoryArray[6]
inside ent_purify_action1
ReservationProtocol_v6_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v6.MemoryArray[6]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[6]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[6]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv6v5', ['EP_EGA.v6.MemoryArray[6]'])]
checking eligibility of:	 TaskSwapRightEndv6v4
subtasks_available:	 ['EP_EGA.v6.MemoryArray[6]']
dependency_subtasks name:	 EP_EGA.v6.MemoryArray[6]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v6.MemoryArray[6]']
True
task.name: TaskSwapRightEndv6v4  for node: v6 and memory returned for this: 6
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[16]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v4  delay:  250000000.0 and expected message recv time:  5344250175000
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[6]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v5  delay:  250000000.0 and expected message recv time:  5344250175000
BSM_MSG_RECV_TIME:  5344250175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[16]
 Protocol match v4 EGA.v4.MemoryArray[16] EGA.v4.MemoryArray[16]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 16
Resss 16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v4.MemoryArray[16]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv4v5
added a subtask to dependency  and map status is:	 [('TaskEntGen_v4_v5', ['EGA.v4.MemoryArray[16]'])]
checking eligibility of:	 TaskPurifyRightv4v5
subtasks_available:	 ['EGA.v4.MemoryArray[16]']
dependency_subtasks name:	 EGA.v4.MemoryArray[16]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v4.MemoryArray[16]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v4.MemoryArray[16]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv4v6
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv4v5', ['EP_EGA.v4.MemoryArray[16]'])]
checking eligibility of:	 TaskSwapLeftEndv4v6
subtasks_available:	 ['EP_EGA.v4.MemoryArray[16]']
dependency_subtasks name:	 EP_EGA.v4.MemoryArray[16]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v4.MemoryArray[16]']
True
task.name: TaskSwapLeftEndv4v6  for node: v4 and memory returned for this: 16
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5344250175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[6]
 Protocol match v5 EGA.v5.MemoryArray[6] EGA.v5.MemoryArray[6]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 6
Resss 6 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v5.MemoryArray[6]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv5v4
added a subtask to dependency  and map status is:	 [('TaskEntGen_v5_v4', ['EGA.v5.MemoryArray[6]'])]
checking eligibility of:	 TaskPurifyLeftv5v4
subtasks_available:	 ['EGA.v5.MemoryArray[6]']
dependency_subtasks name:	 EGA.v5.MemoryArray[6]
inside ent_purify_action1
ReservationProtocol_v5_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v5.MemoryArray[6]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v5.MemoryArray[6]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v5.MemoryArray[6]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv5v6', ['EP_EGA.v5.MemoryArray[14]', 'EP_EGA.v5.MemoryArray[15]', 'EP_EGA.v5.MemoryArray[16]']), ('TaskPurifyLeftv5v4', ['EP_EGA.v5.MemoryArray[6]'])]
checking eligibility of:	 TaskSwapMiddlev6v4
subtasks_available:	 ['EP_EGA.v5.MemoryArray[14]', 'EP_EGA.v5.MemoryArray[6]']
dependency_subtasks name:	 EP_EGA.v5.MemoryArray[14]
dependency_subtasks name:	 EP_EGA.v5.MemoryArray[6]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v5
inside task actin: left_m :v4 right_m: v6 and mid: v4 and self.own.name: v5
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v5.MemoryArray[14]
purify_subtask_right:  EP_EGA.v5.MemoryArray[6]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v5.MemoryArray[14]', 'EP_EGA.v5.MemoryArray[6]']
True
Make use of newly created swap subtask :  ESA.v5.MemoryArray[6].v5.MemoryArray[14]
task.name: TaskSwapMiddlev6v4  for node: v5 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v4  delay:  500000000.0 and expected message recv time:  5344750175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x158287c10>
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v6  delay:  500000000.0 and expected message recv time:  5344750175000
dst, req_func:	 v6 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x158287d30>
Meas result end
REQ_FUNC_RECV_TIME:  5344750175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x158dd7dc0>
Protocol Name:  ESB.v4.MemoryArray[16]
REQ_FUNC_RECV_TIME:  5344750175000  at node:  v6
push message at  v6  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x158dd7dc0>
Protocol Name:  ESB.v6.MemoryArray[4]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v5.MemoryArray[6].v5.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 6
Resss 6 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 14
Resss 14 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v4 ESB.v4.MemoryArray[16] ESB.v4.MemoryArray[16]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v4.MemoryArray[16]', 'fidelity': 0.8304014059736002, 'remote_node': 'v6', 'remote_memo': 'v6.MemoryArray[4]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 16
Resss 16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v6.MemoryArray[4]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[16]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv4v7
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v6', ['ESB.v4.MemoryArray[16]'])]
checking eligibility of:	 TaskSwapLeftEndv4v7
subtasks_available:	 ['ESB.v4.MemoryArray[16]']
dependency_subtasks name:	 ESB.v4.MemoryArray[16]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[16]']
True
task.name: TaskSwapLeftEndv4v7  for node: v4 and memory returned for this: 16
dst, req_func:	 None None
 Protocol match v6 ESB.v6.MemoryArray[4] ESB.v6.MemoryArray[4]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v6.MemoryArray[4]', 'fidelity': 0.8304014059736002, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[16]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 4
Resss 4 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v6', 'v4.MemoryArray[16]')
########Subtask Succeeded############## subtask.protocol name ESB.v6.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv6v7', ['EP_EGA.v6.MemoryArray[15]']), ('TaskSwapRightEndv6v4', ['ESB.v6.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddlev7v4
subtasks_available:	 ['EP_EGA.v6.MemoryArray[15]', 'ESB.v6.MemoryArray[4]']
dependency_subtasks name:	 EP_EGA.v6.MemoryArray[15]
dependency_subtasks name:	 ESB.v6.MemoryArray[4]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v6
inside task actin: left_m :v4 right_m: v7 and mid: v4 and self.own.name: v6
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v6.MemoryArray[15]
purify_subtask_right:  ESB.v6.MemoryArray[4]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v6.MemoryArray[15]', 'ESB.v6.MemoryArray[4]']
True
Make use of newly created swap subtask :  ESA.v6.MemoryArray[4].v6.MemoryArray[15]
task.name: TaskSwapMiddlev7v4  for node: v6 and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v4  delay:  500000000.0 and expected message recv time:  5346250175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x158287ee0>
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v7  delay:  500000000.0 and expected message recv time:  5346250175000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x158287f70>
REQ_FUNC_RECV_TIME:  5346250175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x158dfba30>
Protocol Name:  ESB.v4.MemoryArray[16]
REQ_FUNC_RECV_TIME:  5346250175000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x158dfba30>
Protocol Name:  ESB.v7.MemoryArray[5]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v6.MemoryArray[4].v6.MemoryArray[15]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 4
Resss 4 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 15
Resss 15 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v4 ESB.v4.MemoryArray[16] ESB.v4.MemoryArray[16]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v4.MemoryArray[16]', 'fidelity': 0.7375541591274104, 'remote_node': 'v7', 'remote_memo': 'v7.MemoryArray[5]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 16
Resss 16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v7.MemoryArray[5]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[16]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v7', ['ESB.v4.MemoryArray[14]', 'ESB.v4.MemoryArray[16]']), ('TaskSwapRightEndv4v0', [])]
checking eligibility of:	 TaskSwapMiddlev7v0
Not eligible yet because TaskSwapRightEndv4v0 does not have an instance to allocate
 Protocol match v7 ESB.v7.MemoryArray[5] ESB.v7.MemoryArray[5]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v7.MemoryArray[5]', 'fidelity': 0.7375541591274104, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[16]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 5
Resss 5 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v7', 'v4.MemoryArray[16]')
########Subtask Succeeded############## subtask.protocol name ESB.v7.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv7v0
added a subtask to dependency  and map status is:	 [('TaskSwapRightEndv7v4', ['ESB.v7.MemoryArray[5]'])]
checking eligibility of:	 TaskSwapRightEndv7v0
subtasks_available:	 ['ESB.v7.MemoryArray[5]']
dependency_subtasks name:	 ESB.v7.MemoryArray[5]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v7.MemoryArray[5]']
True
task.name: TaskSwapRightEndv7v0  for node: v7 and memory returned for this: 5
dst, req_func:	 None None
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[16]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v1_v2  dest:  v1  delay:  250000000.0 and expected message recv time:  5353250175000
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[6]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v1_v2  dest:  v2  delay:  250000000.0 and expected message recv time:  5353250175000
BSM_MSG_RECV_TIME:  5353250175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[16]
 Protocol match v1 EGA.v1.MemoryArray[16] EGA.v1.MemoryArray[16]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 16
Resss 16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v1.MemoryArray[16]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv1v2
added a subtask to dependency  and map status is:	 [('TaskEntGen_v1_v2', ['EGA.v1.MemoryArray[16]'])]
checking eligibility of:	 TaskPurifyRightv1v2
subtasks_available:	 ['EGA.v1.MemoryArray[16]']
dependency_subtasks name:	 EGA.v1.MemoryArray[16]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v1.MemoryArray[16]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v1.MemoryArray[16]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv1v2', ['EP_EGA.v1.MemoryArray[16]']), ('TaskPurifyLeftv1v0', ['EP_EGA.v1.MemoryArray[5]'])]
checking eligibility of:	 TaskSwapMiddlev2v0
subtasks_available:	 ['EP_EGA.v1.MemoryArray[16]', 'EP_EGA.v1.MemoryArray[5]']
dependency_subtasks name:	 EP_EGA.v1.MemoryArray[16]
dependency_subtasks name:	 EP_EGA.v1.MemoryArray[5]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v1
inside task actin: left_m :v0 right_m: v2 and mid: v4 and self.own.name: v1
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v1.MemoryArray[16]
purify_subtask_right:  EP_EGA.v1.MemoryArray[5]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v1.MemoryArray[16]', 'EP_EGA.v1.MemoryArray[5]']
True
Make use of newly created swap subtask :  ESA.v1.MemoryArray[5].v1.MemoryArray[16]
task.name: TaskSwapMiddlev2v0  for node: v1 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v0  delay:  500000000.0 and expected message recv time:  5353750175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x158e2b1f0>
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v2  delay:  500000000.0 and expected message recv time:  5353750175000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x158e2b280>
Meas result end
BSM_MSG_RECV_TIME:  5353250175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[6]
 Protocol match v2 EGA.v2.MemoryArray[6] EGA.v2.MemoryArray[6]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 6
Resss 6 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v2.MemoryArray[6]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv2v1
added a subtask to dependency  and map status is:	 [('TaskEntGen_v2_v1', ['EGA.v2.MemoryArray[6]'])]
checking eligibility of:	 TaskPurifyLeftv2v1
subtasks_available:	 ['EGA.v2.MemoryArray[6]']
dependency_subtasks name:	 EGA.v2.MemoryArray[6]
inside ent_purify_action1
ReservationProtocol_v2_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v2.MemoryArray[6]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v2.MemoryArray[6]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v2.MemoryArray[6]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv2v1', ['EP_EGA.v2.MemoryArray[6]'])]
checking eligibility of:	 TaskSwapRightEndv2v0
subtasks_available:	 ['EP_EGA.v2.MemoryArray[6]']
dependency_subtasks name:	 EP_EGA.v2.MemoryArray[6]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v2.MemoryArray[6]']
True
task.name: TaskSwapRightEndv2v0  for node: v2 and memory returned for this: 6
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[16]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v6  delay:  250000000.0 and expected message recv time:  5353750175000
sending messages to:  v7  and reciver_protocol is:  EGA.v7.MemoryArray[6]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v7  delay:  250000000.0 and expected message recv time:  5353750175000
REQ_FUNC_RECV_TIME:  5353750175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x158ec4760>
Protocol Name:  ESB.v0.MemoryArray[5]
REQ_FUNC_RECV_TIME:  5353750175000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x158ec4760>
Protocol Name:  ESB.v2.MemoryArray[6]
BSM_MSG_RECV_TIME:  5353750175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[16]
 Protocol match v6 EGA.v6.MemoryArray[16] EGA.v6.MemoryArray[16]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 16
Resss 16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[16]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv6v7
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v7', ['EGA.v6.MemoryArray[16]'])]
checking eligibility of:	 TaskPurifyRightv6v7
subtasks_available:	 ['EGA.v6.MemoryArray[16]']
dependency_subtasks name:	 EGA.v6.MemoryArray[16]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[16]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[16]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv6v7', ['EP_EGA.v6.MemoryArray[16]']), ('TaskSwapRightEndv6v4', [])]
checking eligibility of:	 TaskSwapMiddlev7v4
Not eligible yet because TaskSwapRightEndv6v4 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5353750175000  at node:  v7
push message at  v7  msg.receiver:  EGA.v7.MemoryArray[6]
 Protocol match v7 EGA.v7.MemoryArray[6] EGA.v7.MemoryArray[6]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 6
Resss 6 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v7.MemoryArray[6]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv7v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v7_v6', ['EGA.v7.MemoryArray[6]'])]
checking eligibility of:	 TaskPurifyLeftv7v6
subtasks_available:	 ['EGA.v7.MemoryArray[6]']
dependency_subtasks name:	 EGA.v7.MemoryArray[6]
inside ent_purify_action1
ReservationProtocol_v7_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v7.MemoryArray[6]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v7.MemoryArray[6]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v7.MemoryArray[6]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv7v6', ['EP_EGA.v7.MemoryArray[6]'])]
checking eligibility of:	 TaskSwapRightEndv7v4
subtasks_available:	 ['EP_EGA.v7.MemoryArray[6]']
dependency_subtasks name:	 EP_EGA.v7.MemoryArray[6]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v7.MemoryArray[6]']
True
task.name: TaskSwapRightEndv7v4  for node: v7 and memory returned for this: 6
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[16]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v4  delay:  250000000.0 and expected message recv time:  5354250175000
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[6]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v5  delay:  250000000.0 and expected message recv time:  5354250175000
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v1.MemoryArray[5].v1.MemoryArray[16]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 5
Resss 5 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 16
Resss 16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
BSM_MSG_RECV_TIME:  5354250175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[16]
BSM_MSG_RECV_TIME:  5354250175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[6]
 Protocol match v0 ESB.v0.MemoryArray[5] ESB.v0.MemoryArray[5]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[5]', 'fidelity': 0.8304014059736002, 'remote_node': 'v2', 'remote_memo': 'v2.MemoryArray[6]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 5
Resss 5 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v2.MemoryArray[6]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v4
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv0v2', ['ESB.v0.MemoryArray[5]'])]
checking eligibility of:	 TaskSwapLeftEndv0v4
subtasks_available:	 ['ESB.v0.MemoryArray[5]']
dependency_subtasks name:	 ESB.v0.MemoryArray[5]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v0.MemoryArray[5]']
True
task.name: TaskSwapLeftEndv0v4  for node: v0 and memory returned for this: 5
dst, req_func:	 None None
 Protocol match v2 ESB.v2.MemoryArray[6] ESB.v2.MemoryArray[6]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v2.MemoryArray[6]', 'fidelity': 0.8304014059736002, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[5]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 6
Resss 6 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v2', 'v0.MemoryArray[5]')
########Subtask Succeeded############## subtask.protocol name ESB.v2.MemoryArray[6]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv2v4', []), ('TaskSwapRightEndv2v0', ['ESB.v2.MemoryArray[4]', 'ESB.v2.MemoryArray[6]'])]
checking eligibility of:	 TaskSwapMiddlev4v0
Not eligible yet because TaskSwapLeftEndv2v4 does not have an instance to allocate
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[16]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v2  delay:  250000000.0 and expected message recv time:  5364250175000
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[6]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v3  delay:  250000000.0 and expected message recv time:  5364250175000
BSM_MSG_RECV_TIME:  5364250175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[16]
 Protocol match v2 EGA.v2.MemoryArray[16] EGA.v2.MemoryArray[16]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 16
Resss 16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v2.MemoryArray[16]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv2v3
added a subtask to dependency  and map status is:	 [('TaskEntGen_v2_v3', ['EGA.v2.MemoryArray[16]'])]
checking eligibility of:	 TaskPurifyRightv2v3
subtasks_available:	 ['EGA.v2.MemoryArray[16]']
dependency_subtasks name:	 EGA.v2.MemoryArray[16]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v2.MemoryArray[16]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v2.MemoryArray[16]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv2v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv2v3', ['EP_EGA.v2.MemoryArray[16]'])]
checking eligibility of:	 TaskSwapLeftEndv2v4
subtasks_available:	 ['EP_EGA.v2.MemoryArray[16]']
dependency_subtasks name:	 EP_EGA.v2.MemoryArray[16]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v2.MemoryArray[16]']
True
task.name: TaskSwapLeftEndv2v4  for node: v2 and memory returned for this: 16
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5364250175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[6]
 Protocol match v3 EGA.v3.MemoryArray[6] EGA.v3.MemoryArray[6]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 6
Resss 6 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v3.MemoryArray[6]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv3v2
added a subtask to dependency  and map status is:	 [('TaskEntGen_v3_v2', ['EGA.v3.MemoryArray[6]'])]
checking eligibility of:	 TaskPurifyLeftv3v2
subtasks_available:	 ['EGA.v3.MemoryArray[6]']
dependency_subtasks name:	 EGA.v3.MemoryArray[6]
inside ent_purify_action1
ReservationProtocol_v3_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v3.MemoryArray[6]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v3.MemoryArray[6]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v3.MemoryArray[6]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv3v4', ['EP_EGA.v3.MemoryArray[13]', 'EP_EGA.v3.MemoryArray[14]', 'EP_EGA.v3.MemoryArray[15]']), ('TaskPurifyLeftv3v2', ['EP_EGA.v3.MemoryArray[6]'])]
checking eligibility of:	 TaskSwapMiddlev4v2
subtasks_available:	 ['EP_EGA.v3.MemoryArray[13]', 'EP_EGA.v3.MemoryArray[6]']
dependency_subtasks name:	 EP_EGA.v3.MemoryArray[13]
dependency_subtasks name:	 EP_EGA.v3.MemoryArray[6]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v3
inside task actin: left_m :v2 right_m: v4 and mid: v4 and self.own.name: v3
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v3.MemoryArray[13]
purify_subtask_right:  EP_EGA.v3.MemoryArray[6]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v3.MemoryArray[13]', 'EP_EGA.v3.MemoryArray[6]']
True
Make use of newly created swap subtask :  ESA.v3.MemoryArray[6].v3.MemoryArray[13]
task.name: TaskSwapMiddlev4v2  for node: v3 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v2  delay:  500000000.0 and expected message recv time:  5364750175000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x158e2b940>
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v4  delay:  500000000.0 and expected message recv time:  5364750175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x158e2b8b0>
Meas result end
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a8e0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a8e0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a970>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a60> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a60>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a90>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606ac0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606af0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6be0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6be0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c10>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c40>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c70>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9ca0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9ca0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9cd0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d30>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e98e0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e98e0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9970>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb20> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb20>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb50>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb80>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565febb0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109a0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109a0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109d0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a30>]
REQ_FUNC_RECV_TIME:  5364750175000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x158fe2fa0>
Protocol Name:  ESB.v2.MemoryArray[16]
REQ_FUNC_RECV_TIME:  5364750175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x158fe2fa0>
Protocol Name:  ESB.v4.MemoryArray[3]
 Protocol match v5 EGA.v5.MemoryArray[7] EGA.v5.MemoryArray[7]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v5 v4
 Protocol match v2 EGA.v2.MemoryArray[7] EGA.v2.MemoryArray[7]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v2 v1
 Protocol match v4 EGA.v4.MemoryArray[7] EGA.v4.MemoryArray[7]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v4 v3
 Protocol match v6 EGA.v6.MemoryArray[7] EGA.v6.MemoryArray[7]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v6 v5
 Protocol match v7 EGA.v7.MemoryArray[7] EGA.v7.MemoryArray[7]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v7 v6
 Protocol match v1 EGA.v1.MemoryArray[7] EGA.v1.MemoryArray[7]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v1 v0
 Protocol match v3 EGA.v3.MemoryArray[7] EGA.v3.MemoryArray[7]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v3 v2
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v3.MemoryArray[6].v3.MemoryArray[13]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 6
Resss 6 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 13
Resss 13 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v4 EGA.v4.MemoryArray[17] EGA.v4.MemoryArray[17]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v1 EGA.v1.MemoryArray[17] EGA.v1.MemoryArray[17]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v3 EGA.v3.MemoryArray[17] EGA.v3.MemoryArray[17]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v5 EGA.v5.MemoryArray[17] EGA.v5.MemoryArray[17]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v6 EGA.v6.MemoryArray[17] EGA.v6.MemoryArray[17]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v0 EGA.v0.MemoryArray[7] EGA.v0.MemoryArray[7]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v2 EGA.v2.MemoryArray[17] EGA.v2.MemoryArray[17]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v2 ESB.v2.MemoryArray[16] ESB.v2.MemoryArray[16]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v2.MemoryArray[16]', 'fidelity': 0.8304014059736002, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[3]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 16
Resss 16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v2', 'v4.MemoryArray[3]')
########Subtask Succeeded############## subtask.protocol name ESB.v2.MemoryArray[16]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv2v4', ['ESB.v2.MemoryArray[16]']), ('TaskSwapRightEndv2v0', ['ESB.v2.MemoryArray[4]', 'ESB.v2.MemoryArray[6]'])]
checking eligibility of:	 TaskSwapMiddlev4v0
subtasks_available:	 ['ESB.v2.MemoryArray[16]', 'ESB.v2.MemoryArray[4]']
dependency_subtasks name:	 ESB.v2.MemoryArray[16]
dependency_subtasks name:	 ESB.v2.MemoryArray[4]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v2
inside task actin: left_m :v0 right_m: v4 and mid: v4 and self.own.name: v2
inside ent_swap_action_middle
purify_subtask_left:  ESB.v2.MemoryArray[16]
purify_subtask_right:  ESB.v2.MemoryArray[4]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v2.MemoryArray[16]', 'ESB.v2.MemoryArray[4]']
True
Make use of newly created swap subtask :  ESA.v2.MemoryArray[4].v2.MemoryArray[16]
task.name: TaskSwapMiddlev4v0  for node: v2 and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v0  delay:  500000000.0 and expected message recv time:  5366250175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x158e2ba60>
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v4  delay:  500000000.0 and expected message recv time:  5366250175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x158e2baf0>
 Protocol match v4 ESB.v4.MemoryArray[3] ESB.v4.MemoryArray[3]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v4.MemoryArray[3]', 'fidelity': 0.8304014059736002, 'remote_node': 'v2', 'remote_memo': 'v2.MemoryArray[16]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v2.MemoryArray[16]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv4v0
added a subtask to dependency  and map status is:	 [('TaskSwapRightEndv4v2', ['ESB.v4.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapRightEndv4v0
subtasks_available:	 ['ESB.v4.MemoryArray[3]']
dependency_subtasks name:	 ESB.v4.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[3]']
True
task.name: TaskSwapRightEndv4v0  for node: v4 and memory returned for this: 3
dst, req_func:	 None None
 Protocol match v5 EGA.v5.MemoryArray[7] EGA.v5.MemoryArray[7]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v2 EGA.v2.MemoryArray[7] EGA.v2.MemoryArray[7]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v4 EGA.v4.MemoryArray[7] EGA.v4.MemoryArray[7]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v6 EGA.v6.MemoryArray[7] EGA.v6.MemoryArray[7]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v7 EGA.v7.MemoryArray[7] EGA.v7.MemoryArray[7]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v1 EGA.v1.MemoryArray[7] EGA.v1.MemoryArray[7]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v3 EGA.v3.MemoryArray[7] EGA.v3.MemoryArray[7]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
!!!!!!!!!!!!!!!! emit event v1
!!!!!!!!!!!!!!!! emit event v3
!!!!!!!!!!!!!!!! emit event v4
!!!!!!!!!!!!!!!! emit event v2
!!!!!!!!!!!!!!!! emit event v5
!!!!!!!!!!!!!!!! emit event v6
!!!!!!!!!!!!!!!! emit event v0
REQ_FUNC_RECV_TIME:  5366250175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x159056ca0>
Protocol Name:  ESB.v0.MemoryArray[3]
REQ_FUNC_RECV_TIME:  5366250175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x159056ca0>
Protocol Name:  ESB.v4.MemoryArray[3]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v2.MemoryArray[4].v2.MemoryArray[16]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 4
Resss 4 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 16
Resss 16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v0 ESB.v0.MemoryArray[3] ESB.v0.MemoryArray[3]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[3]', 'fidelity': 0.6550881702907854, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[3]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v4.MemoryArray[3]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v7
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv0v4', ['ESB.v0.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapLeftEndv0v7
subtasks_available:	 ['ESB.v0.MemoryArray[3]']
dependency_subtasks name:	 ESB.v0.MemoryArray[3]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v0.MemoryArray[3]']
True
task.name: TaskSwapLeftEndv0v7  for node: v0 and memory returned for this: 3
dst, req_func:	 None None
 Protocol match v4 ESB.v4.MemoryArray[3] ESB.v4.MemoryArray[3]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v4.MemoryArray[3]', 'fidelity': 0.6550881702907854, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[3]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v0.MemoryArray[3]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v7', ['ESB.v4.MemoryArray[14]', 'ESB.v4.MemoryArray[16]']), ('TaskSwapRightEndv4v0', ['ESB.v4.MemoryArray[3]'])]
checking eligibility of:	 TaskSwapMiddlev7v0
subtasks_available:	 ['ESB.v4.MemoryArray[14]', 'ESB.v4.MemoryArray[3]']
dependency_subtasks name:	 ESB.v4.MemoryArray[14]
dependency_subtasks name:	 ESB.v4.MemoryArray[3]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v4
inside task actin: left_m :v0 right_m: v7 and mid: v4 and self.own.name: v4
inside ent_swap_action_middle
purify_subtask_left:  ESB.v4.MemoryArray[14]
purify_subtask_right:  ESB.v4.MemoryArray[3]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[14]', 'ESB.v4.MemoryArray[3]']
True
Make use of newly created swap subtask :  ESA.v4.MemoryArray[3].v4.MemoryArray[14]
task.name: TaskSwapMiddlev7v0  for node: v4 and memory returned for this: 3
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v0  delay:  500000000.0 and expected message recv time:  5367750175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x158e2bd30>
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v7  delay:  500000000.0 and expected message recv time:  5367750175000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x158e2bdc0>
REQ_FUNC_RECV_TIME:  5367750175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1590ddf70>
Protocol Name:  ESB.v0.MemoryArray[3]
REQ_FUNC_RECV_TIME:  5367750175000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1590ddf70>
Protocol Name:  ESB.v7.MemoryArray[3]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v4.MemoryArray[3].v4.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 14
Resss 14 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v0 ESB.v0.MemoryArray[3] ESB.v0.MemoryArray[3]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[3]', 'fidelity': 0.4590048543634773, 'remote_node': 'v7', 'remote_memo': 'v7.MemoryArray[3]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v7.MemoryArray[3]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
 Protocol match v7 ESB.v7.MemoryArray[3] ESB.v7.MemoryArray[3]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v7.MemoryArray[3]', 'fidelity': 0.4590048543634773, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[3]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 3
Resss 3 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v7', 'v0.MemoryArray[3]')
########Subtask Succeeded############## subtask.protocol name ESB.v7.MemoryArray[3]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[17]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v5  delay:  250000000.0 and expected message recv time:  5373750175000
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[7]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v6  delay:  250000000.0 and expected message recv time:  5373750175000
BSM_MSG_RECV_TIME:  5373750175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[17]
 Protocol match v5 EGA.v5.MemoryArray[17] EGA.v5.MemoryArray[17]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 17
Resss 17 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v5.MemoryArray[17]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv5v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v5_v6', ['EGA.v5.MemoryArray[17]'])]
checking eligibility of:	 TaskPurifyRightv5v6
subtasks_available:	 ['EGA.v5.MemoryArray[17]']
dependency_subtasks name:	 EGA.v5.MemoryArray[17]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v5.MemoryArray[17]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v5.MemoryArray[17]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv5v6', ['EP_EGA.v5.MemoryArray[15]', 'EP_EGA.v5.MemoryArray[16]', 'EP_EGA.v5.MemoryArray[17]']), ('TaskPurifyLeftv5v4', [])]
checking eligibility of:	 TaskSwapMiddlev6v4
Not eligible yet because TaskPurifyLeftv5v4 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5373750175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[7]
 Protocol match v6 EGA.v6.MemoryArray[7] EGA.v6.MemoryArray[7]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 7
Resss 7 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv6v5
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v5', ['EGA.v6.MemoryArray[7]'])]
checking eligibility of:	 TaskPurifyLeftv6v5
subtasks_available:	 ['EGA.v6.MemoryArray[7]']
dependency_subtasks name:	 EGA.v6.MemoryArray[7]
inside ent_purify_action1
ReservationProtocol_v6_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v6.MemoryArray[7]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[7]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv6v5', ['EP_EGA.v6.MemoryArray[7]'])]
checking eligibility of:	 TaskSwapRightEndv6v4
subtasks_available:	 ['EP_EGA.v6.MemoryArray[7]']
dependency_subtasks name:	 EP_EGA.v6.MemoryArray[7]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v6.MemoryArray[7]']
True
task.name: TaskSwapRightEndv6v4  for node: v6 and memory returned for this: 7
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[17]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v3  delay:  250000000.0 and expected message recv time:  5387250175000
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[7]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v4  delay:  250000000.0 and expected message recv time:  5387250175000
BSM_MSG_RECV_TIME:  5387250175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[17]
 Protocol match v3 EGA.v3.MemoryArray[17] EGA.v3.MemoryArray[17]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 17
Resss 17 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v3.MemoryArray[17]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv3v4
added a subtask to dependency  and map status is:	 [('TaskEntGen_v3_v4', ['EGA.v3.MemoryArray[17]'])]
checking eligibility of:	 TaskPurifyRightv3v4
subtasks_available:	 ['EGA.v3.MemoryArray[17]']
dependency_subtasks name:	 EGA.v3.MemoryArray[17]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v3.MemoryArray[17]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v3.MemoryArray[17]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv3v4', ['EP_EGA.v3.MemoryArray[14]', 'EP_EGA.v3.MemoryArray[15]', 'EP_EGA.v3.MemoryArray[17]']), ('TaskPurifyLeftv3v2', [])]
checking eligibility of:	 TaskSwapMiddlev4v2
Not eligible yet because TaskPurifyLeftv3v2 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5387250175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[7]
 Protocol match v4 EGA.v4.MemoryArray[7] EGA.v4.MemoryArray[7]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 7
Resss 7 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v4.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv4v3
added a subtask to dependency  and map status is:	 [('TaskEntGen_v4_v3', ['EGA.v4.MemoryArray[7]'])]
checking eligibility of:	 TaskPurifyLeftv4v3
subtasks_available:	 ['EGA.v4.MemoryArray[7]']
dependency_subtasks name:	 EGA.v4.MemoryArray[7]
inside ent_purify_action1
ReservationProtocol_v4_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v4.MemoryArray[7]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v4.MemoryArray[7]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v4.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv4v3', ['EP_EGA.v4.MemoryArray[7]'])]
checking eligibility of:	 TaskSwapRightEndv4v2
subtasks_available:	 ['EP_EGA.v4.MemoryArray[7]']
dependency_subtasks name:	 EP_EGA.v4.MemoryArray[7]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v4.MemoryArray[7]']
True
task.name: TaskSwapRightEndv4v2  for node: v4 and memory returned for this: 7
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[17]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v6  delay:  250000000.0 and expected message recv time:  5387750175000
sending messages to:  v7  and reciver_protocol is:  EGA.v7.MemoryArray[7]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v7  delay:  250000000.0 and expected message recv time:  5387750175000
BSM_MSG_RECV_TIME:  5387750175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[17]
 Protocol match v6 EGA.v6.MemoryArray[17] EGA.v6.MemoryArray[17]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 17
Resss 17 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[17]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv6v7
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v7', ['EGA.v6.MemoryArray[17]'])]
checking eligibility of:	 TaskPurifyRightv6v7
subtasks_available:	 ['EGA.v6.MemoryArray[17]']
dependency_subtasks name:	 EGA.v6.MemoryArray[17]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[17]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[17]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv6v7', ['EP_EGA.v6.MemoryArray[16]', 'EP_EGA.v6.MemoryArray[17]']), ('TaskSwapRightEndv6v4', [])]
checking eligibility of:	 TaskSwapMiddlev7v4
Not eligible yet because TaskSwapRightEndv6v4 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5387750175000  at node:  v7
push message at  v7  msg.receiver:  EGA.v7.MemoryArray[7]
 Protocol match v7 EGA.v7.MemoryArray[7] EGA.v7.MemoryArray[7]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 7
Resss 7 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v7.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv7v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v7_v6', ['EGA.v7.MemoryArray[7]'])]
checking eligibility of:	 TaskPurifyLeftv7v6
subtasks_available:	 ['EGA.v7.MemoryArray[7]']
dependency_subtasks name:	 EGA.v7.MemoryArray[7]
inside ent_purify_action1
ReservationProtocol_v7_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v7.MemoryArray[7]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v7.MemoryArray[7]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v7.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv7v6', ['EP_EGA.v7.MemoryArray[7]'])]
checking eligibility of:	 TaskSwapRightEndv7v4
subtasks_available:	 ['EP_EGA.v7.MemoryArray[7]']
dependency_subtasks name:	 EP_EGA.v7.MemoryArray[7]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v7.MemoryArray[7]']
True
task.name: TaskSwapRightEndv7v4  for node: v7 and memory returned for this: 7
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v0  and reciver_protocol is:  EGA.v0.MemoryArray[7]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v0  delay:  250000000.0 and expected message recv time:  5392250175000
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[7]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v1  delay:  250000000.0 and expected message recv time:  5392250175000
BSM_MSG_RECV_TIME:  5392250175000  at node:  v0
push message at  v0  msg.receiver:  EGA.v0.MemoryArray[7]
 Protocol match v0 EGA.v0.MemoryArray[7] EGA.v0.MemoryArray[7]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 7
Resss 7 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v0.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv0v1
added a subtask to dependency  and map status is:	 [('TaskEntGen_v0_v1', ['EGA.v0.MemoryArray[7]'])]
checking eligibility of:	 TaskPurifyRightv0v1
subtasks_available:	 ['EGA.v0.MemoryArray[7]']
dependency_subtasks name:	 EGA.v0.MemoryArray[7]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v0.MemoryArray[7]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v0.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv0v1', ['EP_EGA.v0.MemoryArray[7]'])]
checking eligibility of:	 TaskSwapLeftEndv0v2
subtasks_available:	 ['EP_EGA.v0.MemoryArray[7]']
dependency_subtasks name:	 EP_EGA.v0.MemoryArray[7]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v0.MemoryArray[7]']
True
task.name: TaskSwapLeftEndv0v2  for node: v0 and memory returned for this: 7
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5392250175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[7]
 Protocol match v1 EGA.v1.MemoryArray[7] EGA.v1.MemoryArray[7]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 7
Resss 7 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v1.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv1v0
added a subtask to dependency  and map status is:	 [('TaskEntGen_v1_v0', ['EGA.v1.MemoryArray[7]'])]
checking eligibility of:	 TaskPurifyLeftv1v0
subtasks_available:	 ['EGA.v1.MemoryArray[7]']
dependency_subtasks name:	 EGA.v1.MemoryArray[7]
inside ent_purify_action1
ReservationProtocol_v1_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v1.MemoryArray[7]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v1.MemoryArray[7]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v1.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv1v2', []), ('TaskPurifyLeftv1v0', ['EP_EGA.v1.MemoryArray[7]'])]
checking eligibility of:	 TaskSwapMiddlev2v0
Not eligible yet because TaskPurifyRightv1v2 does not have an instance to allocate
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v0  and reciver_protocol is:  EGA.v0.MemoryArray[7]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v0  delay:  250000000.0 and expected message recv time:  5398750175000
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[7]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v1  delay:  250000000.0 and expected message recv time:  5398750175000
BSM_MSG_RECV_TIME:  5398750175000  at node:  v0
push message at  v0  msg.receiver:  EGA.v0.MemoryArray[7]
BSM_MSG_RECV_TIME:  5398750175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[7]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[17]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v4  delay:  250000000.0 and expected message recv time:  5401250175000
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[7]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v4_v5  dest:  v5  delay:  250000000.0 and expected message recv time:  5401250175000
BSM_MSG_RECV_TIME:  5401250175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[17]
 Protocol match v4 EGA.v4.MemoryArray[17] EGA.v4.MemoryArray[17]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 17
Resss 17 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v4.MemoryArray[17]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv4v5
added a subtask to dependency  and map status is:	 [('TaskEntGen_v4_v5', ['EGA.v4.MemoryArray[17]'])]
checking eligibility of:	 TaskPurifyRightv4v5
subtasks_available:	 ['EGA.v4.MemoryArray[17]']
dependency_subtasks name:	 EGA.v4.MemoryArray[17]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v4.MemoryArray[17]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v4.MemoryArray[17]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv4v6
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv4v5', ['EP_EGA.v4.MemoryArray[17]'])]
checking eligibility of:	 TaskSwapLeftEndv4v6
subtasks_available:	 ['EP_EGA.v4.MemoryArray[17]']
dependency_subtasks name:	 EP_EGA.v4.MemoryArray[17]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v4.MemoryArray[17]']
True
task.name: TaskSwapLeftEndv4v6  for node: v4 and memory returned for this: 17
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5401250175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[7]
 Protocol match v5 EGA.v5.MemoryArray[7] EGA.v5.MemoryArray[7]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 7
Resss 7 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v5.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv5v4
added a subtask to dependency  and map status is:	 [('TaskEntGen_v5_v4', ['EGA.v5.MemoryArray[7]'])]
checking eligibility of:	 TaskPurifyLeftv5v4
subtasks_available:	 ['EGA.v5.MemoryArray[7]']
dependency_subtasks name:	 EGA.v5.MemoryArray[7]
inside ent_purify_action1
ReservationProtocol_v5_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v5.MemoryArray[7]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v5.MemoryArray[7]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v5.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv5v6', ['EP_EGA.v5.MemoryArray[15]', 'EP_EGA.v5.MemoryArray[16]', 'EP_EGA.v5.MemoryArray[17]']), ('TaskPurifyLeftv5v4', ['EP_EGA.v5.MemoryArray[7]'])]
checking eligibility of:	 TaskSwapMiddlev6v4
subtasks_available:	 ['EP_EGA.v5.MemoryArray[15]', 'EP_EGA.v5.MemoryArray[7]']
dependency_subtasks name:	 EP_EGA.v5.MemoryArray[15]
dependency_subtasks name:	 EP_EGA.v5.MemoryArray[7]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v5
inside task actin: left_m :v4 right_m: v6 and mid: v4 and self.own.name: v5
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v5.MemoryArray[15]
purify_subtask_right:  EP_EGA.v5.MemoryArray[7]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v5.MemoryArray[15]', 'EP_EGA.v5.MemoryArray[7]']
True
Make use of newly created swap subtask :  ESA.v5.MemoryArray[7].v5.MemoryArray[15]
task.name: TaskSwapMiddlev6v4  for node: v5 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v4  delay:  500000000.0 and expected message recv time:  5401750175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x159187700>
TASK_MANAGER_REQ_MESG curr_node: v5  dest:  v6  delay:  500000000.0 and expected message recv time:  5401750175000
dst, req_func:	 v6 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x159187820>
Meas result end
REQ_FUNC_RECV_TIME:  5401750175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x159455370>
Protocol Name:  ESB.v4.MemoryArray[17]
REQ_FUNC_RECV_TIME:  5401750175000  at node:  v6
push message at  v6  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x159455370>
Protocol Name:  ESB.v6.MemoryArray[5]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v5.MemoryArray[7].v5.MemoryArray[15]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 7
Resss 7 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 15
Resss 15 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v4 ESB.v4.MemoryArray[17] ESB.v4.MemoryArray[17]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v4.MemoryArray[17]', 'fidelity': 0.8304014059736002, 'remote_node': 'v6', 'remote_memo': 'v6.MemoryArray[5]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 17
Resss 17 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v6.MemoryArray[5]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[17]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv4v7
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v6', ['ESB.v4.MemoryArray[17]'])]
checking eligibility of:	 TaskSwapLeftEndv4v7
subtasks_available:	 ['ESB.v4.MemoryArray[17]']
dependency_subtasks name:	 ESB.v4.MemoryArray[17]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[17]']
True
task.name: TaskSwapLeftEndv4v7  for node: v4 and memory returned for this: 17
dst, req_func:	 None None
 Protocol match v6 ESB.v6.MemoryArray[5] ESB.v6.MemoryArray[5]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v6.MemoryArray[5]', 'fidelity': 0.8304014059736002, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[17]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 5
Resss 5 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v6', 'v4.MemoryArray[17]')
########Subtask Succeeded############## subtask.protocol name ESB.v6.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv6v7', ['EP_EGA.v6.MemoryArray[16]', 'EP_EGA.v6.MemoryArray[17]']), ('TaskSwapRightEndv6v4', ['ESB.v6.MemoryArray[5]'])]
checking eligibility of:	 TaskSwapMiddlev7v4
subtasks_available:	 ['EP_EGA.v6.MemoryArray[16]', 'ESB.v6.MemoryArray[5]']
dependency_subtasks name:	 EP_EGA.v6.MemoryArray[16]
dependency_subtasks name:	 ESB.v6.MemoryArray[5]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v6
inside task actin: left_m :v4 right_m: v7 and mid: v4 and self.own.name: v6
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v6.MemoryArray[16]
purify_subtask_right:  ESB.v6.MemoryArray[5]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v6.MemoryArray[16]', 'ESB.v6.MemoryArray[5]']
True
Make use of newly created swap subtask :  ESA.v6.MemoryArray[5].v6.MemoryArray[16]
task.name: TaskSwapMiddlev7v4  for node: v6 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v4  delay:  500000000.0 and expected message recv time:  5403250175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x1591879d0>
TASK_MANAGER_REQ_MESG curr_node: v6  dest:  v7  delay:  500000000.0 and expected message recv time:  5403250175000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x159187a60>
REQ_FUNC_RECV_TIME:  5403250175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x159474ca0>
Protocol Name:  ESB.v4.MemoryArray[17]
REQ_FUNC_RECV_TIME:  5403250175000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x159474ca0>
Protocol Name:  ESB.v7.MemoryArray[6]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v6.MemoryArray[5].v6.MemoryArray[16]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 5
Resss 5 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 16
Resss 16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[17]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v6  delay:  250000000.0 and expected message recv time:  5404250175000
sending messages to:  v7  and reciver_protocol is:  EGA.v7.MemoryArray[7]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v7  delay:  250000000.0 and expected message recv time:  5404250175000
 Protocol match v4 ESB.v4.MemoryArray[17] ESB.v4.MemoryArray[17]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v4.MemoryArray[17]', 'fidelity': 0.7375541591274104, 'remote_node': 'v7', 'remote_memo': 'v7.MemoryArray[6]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 17
Resss 17 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v7.MemoryArray[6]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[17]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v7', ['ESB.v4.MemoryArray[16]', 'ESB.v4.MemoryArray[17]']), ('TaskSwapRightEndv4v0', [])]
checking eligibility of:	 TaskSwapMiddlev7v0
Not eligible yet because TaskSwapRightEndv4v0 does not have an instance to allocate
 Protocol match v7 ESB.v7.MemoryArray[6] ESB.v7.MemoryArray[6]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v7.MemoryArray[6]', 'fidelity': 0.7375541591274104, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[17]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 6
Resss 6 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v7', 'v4.MemoryArray[17]')
########Subtask Succeeded############## subtask.protocol name ESB.v7.MemoryArray[6]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv7v0
added a subtask to dependency  and map status is:	 [('TaskSwapRightEndv7v4', ['ESB.v7.MemoryArray[6]'])]
checking eligibility of:	 TaskSwapRightEndv7v0
subtasks_available:	 ['ESB.v7.MemoryArray[6]']
dependency_subtasks name:	 ESB.v7.MemoryArray[6]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v7.MemoryArray[6]']
True
task.name: TaskSwapRightEndv7v0  for node: v7 and memory returned for this: 6
dst, req_func:	 None None
BSM_MSG_RECV_TIME:  5404250175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[17]
BSM_MSG_RECV_TIME:  5404250175000  at node:  v7
push message at  v7  msg.receiver:  EGA.v7.MemoryArray[7]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[17]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v2  delay:  250000000.0 and expected message recv time:  5406750175000
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[7]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v3  delay:  250000000.0 and expected message recv time:  5406750175000
BSM_MSG_RECV_TIME:  5406750175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[17]
 Protocol match v2 EGA.v2.MemoryArray[17] EGA.v2.MemoryArray[17]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 17
Resss 17 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v2.MemoryArray[17]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv2v3
added a subtask to dependency  and map status is:	 [('TaskEntGen_v2_v3', ['EGA.v2.MemoryArray[17]'])]
checking eligibility of:	 TaskPurifyRightv2v3
subtasks_available:	 ['EGA.v2.MemoryArray[17]']
dependency_subtasks name:	 EGA.v2.MemoryArray[17]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v2.MemoryArray[17]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v2.MemoryArray[17]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv2v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv2v3', ['EP_EGA.v2.MemoryArray[17]'])]
checking eligibility of:	 TaskSwapLeftEndv2v4
subtasks_available:	 ['EP_EGA.v2.MemoryArray[17]']
dependency_subtasks name:	 EP_EGA.v2.MemoryArray[17]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v2.MemoryArray[17]']
True
task.name: TaskSwapLeftEndv2v4  for node: v2 and memory returned for this: 17
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5406750175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[7]
 Protocol match v3 EGA.v3.MemoryArray[7] EGA.v3.MemoryArray[7]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 7
Resss 7 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v3.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv3v2
added a subtask to dependency  and map status is:	 [('TaskEntGen_v3_v2', ['EGA.v3.MemoryArray[7]'])]
checking eligibility of:	 TaskPurifyLeftv3v2
subtasks_available:	 ['EGA.v3.MemoryArray[7]']
dependency_subtasks name:	 EGA.v3.MemoryArray[7]
inside ent_purify_action1
ReservationProtocol_v3_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v3.MemoryArray[7]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v3.MemoryArray[7]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v3.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv3v4', ['EP_EGA.v3.MemoryArray[14]', 'EP_EGA.v3.MemoryArray[15]', 'EP_EGA.v3.MemoryArray[17]']), ('TaskPurifyLeftv3v2', ['EP_EGA.v3.MemoryArray[7]'])]
checking eligibility of:	 TaskSwapMiddlev4v2
subtasks_available:	 ['EP_EGA.v3.MemoryArray[14]', 'EP_EGA.v3.MemoryArray[7]']
dependency_subtasks name:	 EP_EGA.v3.MemoryArray[14]
dependency_subtasks name:	 EP_EGA.v3.MemoryArray[7]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v3
inside task actin: left_m :v2 right_m: v4 and mid: v4 and self.own.name: v3
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v3.MemoryArray[14]
purify_subtask_right:  EP_EGA.v3.MemoryArray[7]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v3.MemoryArray[14]', 'EP_EGA.v3.MemoryArray[7]']
True
Make use of newly created swap subtask :  ESA.v3.MemoryArray[7].v3.MemoryArray[14]
task.name: TaskSwapMiddlev4v2  for node: v3 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v2  delay:  500000000.0 and expected message recv time:  5407250175000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x159187e50>
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v4  delay:  500000000.0 and expected message recv time:  5407250175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x159187ee0>
Meas result end
REQ_FUNC_RECV_TIME:  5407250175000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1594decd0>
Protocol Name:  ESB.v2.MemoryArray[17]
REQ_FUNC_RECV_TIME:  5407250175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1594decd0>
Protocol Name:  ESB.v4.MemoryArray[4]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v3.MemoryArray[7].v3.MemoryArray[14]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 7
Resss 7 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 14
Resss 14 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v2 ESB.v2.MemoryArray[17] ESB.v2.MemoryArray[17]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v2.MemoryArray[17]', 'fidelity': 0.8304014059736002, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[4]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 17
Resss 17 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v2', 'v4.MemoryArray[4]')
########Subtask Succeeded############## subtask.protocol name ESB.v2.MemoryArray[17]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv2v4', ['ESB.v2.MemoryArray[17]']), ('TaskSwapRightEndv2v0', ['ESB.v2.MemoryArray[6]'])]
checking eligibility of:	 TaskSwapMiddlev4v0
subtasks_available:	 ['ESB.v2.MemoryArray[17]', 'ESB.v2.MemoryArray[6]']
dependency_subtasks name:	 ESB.v2.MemoryArray[17]
dependency_subtasks name:	 ESB.v2.MemoryArray[6]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v2
inside task actin: left_m :v0 right_m: v4 and mid: v4 and self.own.name: v2
inside ent_swap_action_middle
purify_subtask_left:  ESB.v2.MemoryArray[17]
purify_subtask_right:  ESB.v2.MemoryArray[6]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v2.MemoryArray[17]', 'ESB.v2.MemoryArray[6]']
True
Make use of newly created swap subtask :  ESA.v2.MemoryArray[6].v2.MemoryArray[17]
task.name: TaskSwapMiddlev4v0  for node: v2 and memory returned for this: 6
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v0  delay:  500000000.0 and expected message recv time:  5408750175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x159187f70>
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v4  delay:  500000000.0 and expected message recv time:  5408750175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x159510040>
 Protocol match v4 ESB.v4.MemoryArray[4] ESB.v4.MemoryArray[4]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v4.MemoryArray[4]', 'fidelity': 0.8304014059736002, 'remote_node': 'v2', 'remote_memo': 'v2.MemoryArray[17]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 4
Resss 4 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v2.MemoryArray[17]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv4v0
added a subtask to dependency  and map status is:	 [('TaskSwapRightEndv4v2', ['ESB.v4.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapRightEndv4v0
subtasks_available:	 ['ESB.v4.MemoryArray[4]']
dependency_subtasks name:	 ESB.v4.MemoryArray[4]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[4]']
True
task.name: TaskSwapRightEndv4v0  for node: v4 and memory returned for this: 4
dst, req_func:	 None None
REQ_FUNC_RECV_TIME:  5408750175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x15950f580>
Protocol Name:  ESB.v0.MemoryArray[5]
REQ_FUNC_RECV_TIME:  5408750175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x15950f580>
Protocol Name:  ESB.v4.MemoryArray[4]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v2.MemoryArray[6].v2.MemoryArray[17]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 6
Resss 6 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 17
Resss 17 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v0 ESB.v0.MemoryArray[5] ESB.v0.MemoryArray[5]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[5]', 'fidelity': 0.6550881702907854, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[4]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 5
Resss 5 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v4.MemoryArray[4]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v7
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv0v4', ['ESB.v0.MemoryArray[5]'])]
checking eligibility of:	 TaskSwapLeftEndv0v7
subtasks_available:	 ['ESB.v0.MemoryArray[5]']
dependency_subtasks name:	 ESB.v0.MemoryArray[5]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v0.MemoryArray[5]']
True
task.name: TaskSwapLeftEndv0v7  for node: v0 and memory returned for this: 5
dst, req_func:	 None None
 Protocol match v4 ESB.v4.MemoryArray[4] ESB.v4.MemoryArray[4]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v4.MemoryArray[4]', 'fidelity': 0.6550881702907854, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[5]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 4
Resss 4 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v0.MemoryArray[5]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[4]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v7', ['ESB.v4.MemoryArray[16]', 'ESB.v4.MemoryArray[17]']), ('TaskSwapRightEndv4v0', ['ESB.v4.MemoryArray[4]'])]
checking eligibility of:	 TaskSwapMiddlev7v0
subtasks_available:	 ['ESB.v4.MemoryArray[16]', 'ESB.v4.MemoryArray[4]']
dependency_subtasks name:	 ESB.v4.MemoryArray[16]
dependency_subtasks name:	 ESB.v4.MemoryArray[4]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v4
inside task actin: left_m :v0 right_m: v7 and mid: v4 and self.own.name: v4
inside ent_swap_action_middle
purify_subtask_left:  ESB.v4.MemoryArray[16]
purify_subtask_right:  ESB.v4.MemoryArray[4]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[16]', 'ESB.v4.MemoryArray[4]']
True
Make use of newly created swap subtask :  ESA.v4.MemoryArray[4].v4.MemoryArray[16]
task.name: TaskSwapMiddlev7v0  for node: v4 and memory returned for this: 4
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v0  delay:  500000000.0 and expected message recv time:  5410250175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x159510280>
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v7  delay:  500000000.0 and expected message recv time:  5410250175000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x159510310>
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[17]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v3  delay:  250000000.0 and expected message recv time:  5410250175000
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[7]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v4  delay:  250000000.0 and expected message recv time:  5410250175000
REQ_FUNC_RECV_TIME:  5410250175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x159530f70>
Protocol Name:  ESB.v0.MemoryArray[5]
REQ_FUNC_RECV_TIME:  5410250175000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x159530f70>
Protocol Name:  ESB.v7.MemoryArray[5]
BSM_MSG_RECV_TIME:  5410250175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[17]
BSM_MSG_RECV_TIME:  5410250175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[7]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[17]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v6  delay:  250000000.0 and expected message recv time:  5410750175000
sending messages to:  v7  and reciver_protocol is:  EGA.v7.MemoryArray[7]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v7  delay:  250000000.0 and expected message recv time:  5410750175000
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v4.MemoryArray[4].v4.MemoryArray[16]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 4
Resss 4 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 16
Resss 16 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
BSM_MSG_RECV_TIME:  5410750175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[17]
BSM_MSG_RECV_TIME:  5410750175000  at node:  v7
push message at  v7  msg.receiver:  EGA.v7.MemoryArray[7]
 Protocol match v0 ESB.v0.MemoryArray[5] ESB.v0.MemoryArray[5]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[5]', 'fidelity': 0.4590048543634773, 'remote_node': 'v7', 'remote_memo': 'v7.MemoryArray[5]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 5
Resss 5 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v7.MemoryArray[5]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
 Protocol match v7 ESB.v7.MemoryArray[5] ESB.v7.MemoryArray[5]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v7.MemoryArray[5]', 'fidelity': 0.4590048543634773, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[5]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 5
Resss 5 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v7', 'v0.MemoryArray[5]')
########Subtask Succeeded############## subtask.protocol name ESB.v7.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109d0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1566109d0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a30>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9910> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9970>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9cd0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9cd0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d30>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb50> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb50>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb80>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565febb0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c10> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c10>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c40>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c70>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a90> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606a90>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606ac0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606af0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a910> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a910>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a970>]
 Protocol match v3 EGA.v3.MemoryArray[8] EGA.v3.MemoryArray[8]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v3 v2
 Protocol match v7 EGA.v7.MemoryArray[8] EGA.v7.MemoryArray[8]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v7 v6
 Protocol match v6 EGA.v6.MemoryArray[8] EGA.v6.MemoryArray[8]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v6 v5
 Protocol match v1 EGA.v1.MemoryArray[8] EGA.v1.MemoryArray[8]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v1 v0
 Protocol match v4 EGA.v4.MemoryArray[8] EGA.v4.MemoryArray[8]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v4 v3
 Protocol match v2 EGA.v2.MemoryArray[8] EGA.v2.MemoryArray[8]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v2 v1
 Protocol match v5 EGA.v5.MemoryArray[8] EGA.v5.MemoryArray[8]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v5 v4
 Protocol match v2 EGA.v2.MemoryArray[18] EGA.v2.MemoryArray[18]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v6 EGA.v6.MemoryArray[18] EGA.v6.MemoryArray[18]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v5 EGA.v5.MemoryArray[18] EGA.v5.MemoryArray[18]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v0 EGA.v0.MemoryArray[8] EGA.v0.MemoryArray[8]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v3 EGA.v3.MemoryArray[18] EGA.v3.MemoryArray[18]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v1 EGA.v1.MemoryArray[18] EGA.v1.MemoryArray[18]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v4 EGA.v4.MemoryArray[18] EGA.v4.MemoryArray[18]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v3 EGA.v3.MemoryArray[8] EGA.v3.MemoryArray[8]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v7 EGA.v7.MemoryArray[8] EGA.v7.MemoryArray[8]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v6 EGA.v6.MemoryArray[8] EGA.v6.MemoryArray[8]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v1 EGA.v1.MemoryArray[8] EGA.v1.MemoryArray[8]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v4 EGA.v4.MemoryArray[8] EGA.v4.MemoryArray[8]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v2 EGA.v2.MemoryArray[8] EGA.v2.MemoryArray[8]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v5 EGA.v5.MemoryArray[8] EGA.v5.MemoryArray[8]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
!!!!!!!!!!!!!!!! emit event v4
!!!!!!!!!!!!!!!! emit event v2
!!!!!!!!!!!!!!!! emit event v6
!!!!!!!!!!!!!!!! emit event v5
!!!!!!!!!!!!!!!! emit event v1
!!!!!!!!!!!!!!!! emit event v0
!!!!!!!!!!!!!!!! emit event v3
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[18]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v6  delay:  250000000.0 and expected message recv time:  5432750175000
sending messages to:  v7  and reciver_protocol is:  EGA.v7.MemoryArray[8]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v7  delay:  250000000.0 and expected message recv time:  5432750175000
BSM_MSG_RECV_TIME:  5432750175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[18]
 Protocol match v6 EGA.v6.MemoryArray[18] EGA.v6.MemoryArray[18]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 18
Resss 18 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[18]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv6v7
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v7', ['EGA.v6.MemoryArray[18]'])]
checking eligibility of:	 TaskPurifyRightv6v7
subtasks_available:	 ['EGA.v6.MemoryArray[18]']
dependency_subtasks name:	 EGA.v6.MemoryArray[18]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[18]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[18]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv6v7', ['EP_EGA.v6.MemoryArray[17]', 'EP_EGA.v6.MemoryArray[18]']), ('TaskSwapRightEndv6v4', [])]
checking eligibility of:	 TaskSwapMiddlev7v4
Not eligible yet because TaskSwapRightEndv6v4 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5432750175000  at node:  v7
push message at  v7  msg.receiver:  EGA.v7.MemoryArray[8]
 Protocol match v7 EGA.v7.MemoryArray[8] EGA.v7.MemoryArray[8]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 8
Resss 8 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v7.MemoryArray[8]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv7v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v7_v6', ['EGA.v7.MemoryArray[8]'])]
checking eligibility of:	 TaskPurifyLeftv7v6
subtasks_available:	 ['EGA.v7.MemoryArray[8]']
dependency_subtasks name:	 EGA.v7.MemoryArray[8]
inside ent_purify_action1
ReservationProtocol_v7_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v7.MemoryArray[8]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v7.MemoryArray[8]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v7.MemoryArray[8]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv7v6', ['EP_EGA.v7.MemoryArray[8]'])]
checking eligibility of:	 TaskSwapRightEndv7v4
subtasks_available:	 ['EP_EGA.v7.MemoryArray[8]']
dependency_subtasks name:	 EP_EGA.v7.MemoryArray[8]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v7.MemoryArray[8]']
True
task.name: TaskSwapRightEndv7v4  for node: v7 and memory returned for this: 8
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[18]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v1_v2  dest:  v1  delay:  250000000.0 and expected message recv time:  5440750175000
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[8]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v1_v2  dest:  v2  delay:  250000000.0 and expected message recv time:  5440750175000
BSM_MSG_RECV_TIME:  5440750175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[18]
 Protocol match v1 EGA.v1.MemoryArray[18] EGA.v1.MemoryArray[18]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 18
Resss 18 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v1.MemoryArray[18]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv1v2
added a subtask to dependency  and map status is:	 [('TaskEntGen_v1_v2', ['EGA.v1.MemoryArray[18]'])]
checking eligibility of:	 TaskPurifyRightv1v2
subtasks_available:	 ['EGA.v1.MemoryArray[18]']
dependency_subtasks name:	 EGA.v1.MemoryArray[18]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v1.MemoryArray[18]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v1.MemoryArray[18]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv1v2', ['EP_EGA.v1.MemoryArray[18]']), ('TaskPurifyLeftv1v0', ['EP_EGA.v1.MemoryArray[7]'])]
checking eligibility of:	 TaskSwapMiddlev2v0
subtasks_available:	 ['EP_EGA.v1.MemoryArray[18]', 'EP_EGA.v1.MemoryArray[7]']
dependency_subtasks name:	 EP_EGA.v1.MemoryArray[18]
dependency_subtasks name:	 EP_EGA.v1.MemoryArray[7]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v1
inside task actin: left_m :v0 right_m: v2 and mid: v4 and self.own.name: v1
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v1.MemoryArray[18]
purify_subtask_right:  EP_EGA.v1.MemoryArray[7]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v1.MemoryArray[18]', 'EP_EGA.v1.MemoryArray[7]']
True
Make use of newly created swap subtask :  ESA.v1.MemoryArray[7].v1.MemoryArray[18]
task.name: TaskSwapMiddlev2v0  for node: v1 and memory returned for this: 7
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v0  delay:  500000000.0 and expected message recv time:  5441250175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x159510700>
TASK_MANAGER_REQ_MESG curr_node: v1  dest:  v2  delay:  500000000.0 and expected message recv time:  5441250175000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x159510790>
Meas result end
BSM_MSG_RECV_TIME:  5440750175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[8]
 Protocol match v2 EGA.v2.MemoryArray[8] EGA.v2.MemoryArray[8]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 8
Resss 8 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v2.MemoryArray[8]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv2v1
added a subtask to dependency  and map status is:	 [('TaskEntGen_v2_v1', ['EGA.v2.MemoryArray[8]'])]
checking eligibility of:	 TaskPurifyLeftv2v1
subtasks_available:	 ['EGA.v2.MemoryArray[8]']
dependency_subtasks name:	 EGA.v2.MemoryArray[8]
inside ent_purify_action1
ReservationProtocol_v2_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v2.MemoryArray[8]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v2.MemoryArray[8]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v2.MemoryArray[8]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv2v1', ['EP_EGA.v2.MemoryArray[8]'])]
checking eligibility of:	 TaskSwapRightEndv2v0
subtasks_available:	 ['EP_EGA.v2.MemoryArray[8]']
dependency_subtasks name:	 EP_EGA.v2.MemoryArray[8]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v2.MemoryArray[8]']
True
task.name: TaskSwapRightEndv2v0  for node: v2 and memory returned for this: 8
dst, req_func:	 None None
Meas result end
REQ_FUNC_RECV_TIME:  5441250175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1598fe940>
Protocol Name:  ESB.v0.MemoryArray[7]
REQ_FUNC_RECV_TIME:  5441250175000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x1598fe940>
Protocol Name:  ESB.v2.MemoryArray[8]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v1.MemoryArray[7].v1.MemoryArray[18]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 7
Resss 7 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 18
Resss 18 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v0 ESB.v0.MemoryArray[7] ESB.v0.MemoryArray[7]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[7]', 'fidelity': 0.8304014059736002, 'remote_node': 'v2', 'remote_memo': 'v2.MemoryArray[8]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 7
Resss 7 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v2.MemoryArray[8]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v4
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv0v2', ['ESB.v0.MemoryArray[7]'])]
checking eligibility of:	 TaskSwapLeftEndv0v4
subtasks_available:	 ['ESB.v0.MemoryArray[7]']
dependency_subtasks name:	 ESB.v0.MemoryArray[7]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v0.MemoryArray[7]']
True
task.name: TaskSwapLeftEndv0v4  for node: v0 and memory returned for this: 7
dst, req_func:	 None None
 Protocol match v2 ESB.v2.MemoryArray[8] ESB.v2.MemoryArray[8]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v2.MemoryArray[8]', 'fidelity': 0.8304014059736002, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[7]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 8
Resss 8 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v2', 'v0.MemoryArray[7]')
########Subtask Succeeded############## subtask.protocol name ESB.v2.MemoryArray[8]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv2v4', []), ('TaskSwapRightEndv2v0', ['ESB.v2.MemoryArray[8]'])]
checking eligibility of:	 TaskSwapMiddlev4v0
Not eligible yet because TaskSwapLeftEndv2v4 does not have an instance to allocate
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[18]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v3  delay:  250000000.0 and expected message recv time:  5446250175000
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[8]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v4  delay:  250000000.0 and expected message recv time:  5446250175000
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[18]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v5  delay:  250000000.0 and expected message recv time:  5446250175000
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[8]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v6  delay:  250000000.0 and expected message recv time:  5446250175000
BSM_MSG_RECV_TIME:  5446250175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[18]
 Protocol match v3 EGA.v3.MemoryArray[18] EGA.v3.MemoryArray[18]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 18
Resss 18 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v3.MemoryArray[18]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv3v4
added a subtask to dependency  and map status is:	 [('TaskEntGen_v3_v4', ['EGA.v3.MemoryArray[18]'])]
checking eligibility of:	 TaskPurifyRightv3v4
subtasks_available:	 ['EGA.v3.MemoryArray[18]']
dependency_subtasks name:	 EGA.v3.MemoryArray[18]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v3.MemoryArray[18]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v3.MemoryArray[18]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv3v4', ['EP_EGA.v3.MemoryArray[15]', 'EP_EGA.v3.MemoryArray[17]', 'EP_EGA.v3.MemoryArray[18]']), ('TaskPurifyLeftv3v2', [])]
checking eligibility of:	 TaskSwapMiddlev4v2
Not eligible yet because TaskPurifyLeftv3v2 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5446250175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[8]
 Protocol match v4 EGA.v4.MemoryArray[8] EGA.v4.MemoryArray[8]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 8
Resss 8 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v4.MemoryArray[8]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv4v3
added a subtask to dependency  and map status is:	 [('TaskEntGen_v4_v3', ['EGA.v4.MemoryArray[8]'])]
checking eligibility of:	 TaskPurifyLeftv4v3
subtasks_available:	 ['EGA.v4.MemoryArray[8]']
dependency_subtasks name:	 EGA.v4.MemoryArray[8]
inside ent_purify_action1
ReservationProtocol_v4_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v4.MemoryArray[8]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v4.MemoryArray[8]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v4.MemoryArray[8]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv4v3', ['EP_EGA.v4.MemoryArray[8]'])]
checking eligibility of:	 TaskSwapRightEndv4v2
subtasks_available:	 ['EP_EGA.v4.MemoryArray[8]']
dependency_subtasks name:	 EP_EGA.v4.MemoryArray[8]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v4.MemoryArray[8]']
True
task.name: TaskSwapRightEndv4v2  for node: v4 and memory returned for this: 8
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5446250175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[18]
 Protocol match v5 EGA.v5.MemoryArray[18] EGA.v5.MemoryArray[18]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 18
Resss 18 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v5.MemoryArray[18]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv5v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v5_v6', ['EGA.v5.MemoryArray[18]'])]
checking eligibility of:	 TaskPurifyRightv5v6
subtasks_available:	 ['EGA.v5.MemoryArray[18]']
dependency_subtasks name:	 EGA.v5.MemoryArray[18]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v5.MemoryArray[18]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v5.MemoryArray[18]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv5v6', ['EP_EGA.v5.MemoryArray[16]', 'EP_EGA.v5.MemoryArray[17]', 'EP_EGA.v5.MemoryArray[18]']), ('TaskPurifyLeftv5v4', [])]
checking eligibility of:	 TaskSwapMiddlev6v4
Not eligible yet because TaskPurifyLeftv5v4 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5446250175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[8]
 Protocol match v6 EGA.v6.MemoryArray[8] EGA.v6.MemoryArray[8]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 8
Resss 8 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[8]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv6v5
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v5', ['EGA.v6.MemoryArray[8]'])]
checking eligibility of:	 TaskPurifyLeftv6v5
subtasks_available:	 ['EGA.v6.MemoryArray[8]']
dependency_subtasks name:	 EGA.v6.MemoryArray[8]
inside ent_purify_action1
ReservationProtocol_v6_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v6.MemoryArray[8]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[8]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[8]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv6v5', ['EP_EGA.v6.MemoryArray[8]'])]
checking eligibility of:	 TaskSwapRightEndv6v4
subtasks_available:	 ['EP_EGA.v6.MemoryArray[8]']
dependency_subtasks name:	 EP_EGA.v6.MemoryArray[8]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v6.MemoryArray[8]']
True
task.name: TaskSwapRightEndv6v4  for node: v6 and memory returned for this: 8
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[18]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v2  delay:  250000000.0 and expected message recv time:  5457750175000
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[8]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v3  delay:  250000000.0 and expected message recv time:  5457750175000
BSM_MSG_RECV_TIME:  5457750175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[18]
 Protocol match v2 EGA.v2.MemoryArray[18] EGA.v2.MemoryArray[18]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 18
Resss 18 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v2.MemoryArray[18]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv2v3
added a subtask to dependency  and map status is:	 [('TaskEntGen_v2_v3', ['EGA.v2.MemoryArray[18]'])]
checking eligibility of:	 TaskPurifyRightv2v3
subtasks_available:	 ['EGA.v2.MemoryArray[18]']
dependency_subtasks name:	 EGA.v2.MemoryArray[18]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v2.MemoryArray[18]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v2.MemoryArray[18]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv2v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv2v3', ['EP_EGA.v2.MemoryArray[18]'])]
checking eligibility of:	 TaskSwapLeftEndv2v4
subtasks_available:	 ['EP_EGA.v2.MemoryArray[18]']
dependency_subtasks name:	 EP_EGA.v2.MemoryArray[18]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v2.MemoryArray[18]']
True
task.name: TaskSwapLeftEndv2v4  for node: v2 and memory returned for this: 18
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5457750175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[8]
 Protocol match v3 EGA.v3.MemoryArray[8] EGA.v3.MemoryArray[8]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 8
Resss 8 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v3.MemoryArray[8]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv3v2
added a subtask to dependency  and map status is:	 [('TaskEntGen_v3_v2', ['EGA.v3.MemoryArray[8]'])]
checking eligibility of:	 TaskPurifyLeftv3v2
subtasks_available:	 ['EGA.v3.MemoryArray[8]']
dependency_subtasks name:	 EGA.v3.MemoryArray[8]
inside ent_purify_action1
ReservationProtocol_v3_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v3.MemoryArray[8]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v3.MemoryArray[8]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v3.MemoryArray[8]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv3v4', ['EP_EGA.v3.MemoryArray[15]', 'EP_EGA.v3.MemoryArray[17]', 'EP_EGA.v3.MemoryArray[18]']), ('TaskPurifyLeftv3v2', ['EP_EGA.v3.MemoryArray[8]'])]
checking eligibility of:	 TaskSwapMiddlev4v2
subtasks_available:	 ['EP_EGA.v3.MemoryArray[15]', 'EP_EGA.v3.MemoryArray[8]']
dependency_subtasks name:	 EP_EGA.v3.MemoryArray[15]
dependency_subtasks name:	 EP_EGA.v3.MemoryArray[8]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v3
inside task actin: left_m :v2 right_m: v4 and mid: v4 and self.own.name: v3
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v3.MemoryArray[15]
purify_subtask_right:  EP_EGA.v3.MemoryArray[8]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v3.MemoryArray[15]', 'EP_EGA.v3.MemoryArray[8]']
True
Make use of newly created swap subtask :  ESA.v3.MemoryArray[8].v3.MemoryArray[15]
task.name: TaskSwapMiddlev4v2  for node: v3 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v2  delay:  500000000.0 and expected message recv time:  5458250175000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x159510e50>
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v4  delay:  500000000.0 and expected message recv time:  5458250175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x159510f70>
Meas result end
REQ_FUNC_RECV_TIME:  5458250175000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x159ab8910>
Protocol Name:  ESB.v2.MemoryArray[18]
REQ_FUNC_RECV_TIME:  5458250175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x159ab8910>
Protocol Name:  ESB.v4.MemoryArray[5]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v3.MemoryArray[8].v3.MemoryArray[15]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 8
Resss 8 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 15
Resss 15 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v2 ESB.v2.MemoryArray[18] ESB.v2.MemoryArray[18]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v2.MemoryArray[18]', 'fidelity': 0.8304014059736002, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[5]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 18
Resss 18 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v2', 'v4.MemoryArray[5]')
########Subtask Succeeded############## subtask.protocol name ESB.v2.MemoryArray[18]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv2v4', ['ESB.v2.MemoryArray[18]']), ('TaskSwapRightEndv2v0', ['ESB.v2.MemoryArray[8]'])]
checking eligibility of:	 TaskSwapMiddlev4v0
subtasks_available:	 ['ESB.v2.MemoryArray[18]', 'ESB.v2.MemoryArray[8]']
dependency_subtasks name:	 ESB.v2.MemoryArray[18]
dependency_subtasks name:	 ESB.v2.MemoryArray[8]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v2
inside task actin: left_m :v0 right_m: v4 and mid: v4 and self.own.name: v2
inside ent_swap_action_middle
purify_subtask_left:  ESB.v2.MemoryArray[18]
purify_subtask_right:  ESB.v2.MemoryArray[8]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v2.MemoryArray[18]', 'ESB.v2.MemoryArray[8]']
True
Make use of newly created swap subtask :  ESA.v2.MemoryArray[8].v2.MemoryArray[18]
task.name: TaskSwapMiddlev4v0  for node: v2 and memory returned for this: 8
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v0  delay:  500000000.0 and expected message recv time:  5459750175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x159aea0d0>
TASK_MANAGER_REQ_MESG curr_node: v2  dest:  v4  delay:  500000000.0 and expected message recv time:  5459750175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x159aea160>
 Protocol match v4 ESB.v4.MemoryArray[5] ESB.v4.MemoryArray[5]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v4.MemoryArray[5]', 'fidelity': 0.8304014059736002, 'remote_node': 'v2', 'remote_memo': 'v2.MemoryArray[18]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 5
Resss 5 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v2.MemoryArray[18]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv4v0
added a subtask to dependency  and map status is:	 [('TaskSwapRightEndv4v2', ['ESB.v4.MemoryArray[5]'])]
checking eligibility of:	 TaskSwapRightEndv4v0
subtasks_available:	 ['ESB.v4.MemoryArray[5]']
dependency_subtasks name:	 ESB.v4.MemoryArray[5]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[5]']
True
task.name: TaskSwapRightEndv4v0  for node: v4 and memory returned for this: 5
dst, req_func:	 None None
REQ_FUNC_RECV_TIME:  5459750175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x159ae8220>
Protocol Name:  ESB.v0.MemoryArray[7]
REQ_FUNC_RECV_TIME:  5459750175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x159ae8220>
Protocol Name:  ESB.v4.MemoryArray[5]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[18]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v6  delay:  250000000.0 and expected message recv time:  5460250175000
sending messages to:  v7  and reciver_protocol is:  EGA.v7.MemoryArray[8]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v7  delay:  250000000.0 and expected message recv time:  5460250175000
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v2.MemoryArray[8].v2.MemoryArray[18]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 8
Resss 8 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 18
Resss 18 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
BSM_MSG_RECV_TIME:  5460250175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[18]
BSM_MSG_RECV_TIME:  5460250175000  at node:  v7
push message at  v7  msg.receiver:  EGA.v7.MemoryArray[8]
 Protocol match v0 ESB.v0.MemoryArray[7] ESB.v0.MemoryArray[7]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[7]', 'fidelity': 0.6550881702907854, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[5]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 7
Resss 7 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v4.MemoryArray[5]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v7
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv0v4', ['ESB.v0.MemoryArray[7]'])]
checking eligibility of:	 TaskSwapLeftEndv0v7
subtasks_available:	 ['ESB.v0.MemoryArray[7]']
dependency_subtasks name:	 ESB.v0.MemoryArray[7]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v0.MemoryArray[7]']
True
task.name: TaskSwapLeftEndv0v7  for node: v0 and memory returned for this: 7
dst, req_func:	 None None
 Protocol match v4 ESB.v4.MemoryArray[5] ESB.v4.MemoryArray[5]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v4.MemoryArray[5]', 'fidelity': 0.6550881702907854, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[7]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 5
Resss 5 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v0.MemoryArray[7]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[5]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv4v7', ['ESB.v4.MemoryArray[17]']), ('TaskSwapRightEndv4v0', ['ESB.v4.MemoryArray[5]'])]
checking eligibility of:	 TaskSwapMiddlev7v0
subtasks_available:	 ['ESB.v4.MemoryArray[17]', 'ESB.v4.MemoryArray[5]']
dependency_subtasks name:	 ESB.v4.MemoryArray[17]
dependency_subtasks name:	 ESB.v4.MemoryArray[5]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v4
inside task actin: left_m :v0 right_m: v7 and mid: v4 and self.own.name: v4
inside ent_swap_action_middle
purify_subtask_left:  ESB.v4.MemoryArray[17]
purify_subtask_right:  ESB.v4.MemoryArray[5]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[17]', 'ESB.v4.MemoryArray[5]']
True
Make use of newly created swap subtask :  ESA.v4.MemoryArray[5].v4.MemoryArray[17]
task.name: TaskSwapMiddlev7v0  for node: v4 and memory returned for this: 5
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v0  delay:  500000000.0 and expected message recv time:  5461250175000
dst, req_func:	 v0 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x159aea3a0>
TASK_MANAGER_REQ_MESG curr_node: v4  dest:  v7  delay:  500000000.0 and expected message recv time:  5461250175000
dst, req_func:	 v7 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x159aea430>
REQ_FUNC_RECV_TIME:  5461250175000  at node:  v0
push message at  v0  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x159b09f10>
Protocol Name:  ESB.v0.MemoryArray[7]
REQ_FUNC_RECV_TIME:  5461250175000  at node:  v7
push message at  v7  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x159b09f10>
Protocol Name:  ESB.v7.MemoryArray[6]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v4.MemoryArray[5].v4.MemoryArray[17]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 5
Resss 5 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 17
Resss 17 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v0 ESB.v0.MemoryArray[7] ESB.v0.MemoryArray[7]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v0.MemoryArray[7]', 'fidelity': 0.4590048543634773, 'remote_node': 'v7', 'remote_memo': 'v7.MemoryArray[6]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 7
Resss 7 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v0', 'v7.MemoryArray[6]')
########Subtask Succeeded############## subtask.protocol name ESB.v0.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
 Protocol match v7 ESB.v7.MemoryArray[6] ESB.v7.MemoryArray[6]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v7.MemoryArray[6]', 'fidelity': 0.4590048543634773, 'remote_node': 'v0', 'remote_memo': 'v0.MemoryArray[7]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 6
Resss 6 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
Entanglement swap successful between ('v7', 'v0.MemoryArray[7]')
########Subtask Succeeded############## subtask.protocol name ESB.v7.MemoryArray[6]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606ac0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606ac0>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606af0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a940> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a970>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c40> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c40>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c70>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb80> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565feb80>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565febb0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d00> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d30>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9940> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9940>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9970>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a00> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a00>, <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a30>]
 Protocol match v2 EGA.v2.MemoryArray[9] EGA.v2.MemoryArray[9]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v2 v1
 Protocol match v5 EGA.v5.MemoryArray[9] EGA.v5.MemoryArray[9]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v5 v4
 Protocol match v4 EGA.v4.MemoryArray[9] EGA.v4.MemoryArray[9]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v4 v3
 Protocol match v1 EGA.v1.MemoryArray[9] EGA.v1.MemoryArray[9]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v1 v0
 Protocol match v6 EGA.v6.MemoryArray[9] EGA.v6.MemoryArray[9]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v6 v5
 Protocol match v7 EGA.v7.MemoryArray[9] EGA.v7.MemoryArray[9]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v7 v6
 Protocol match v3 EGA.v3.MemoryArray[9] EGA.v3.MemoryArray[9]
Enta gen msg_type GenerationMsgType.BSM_ALLOCATE
BSM ALLOCATED, STARTING PROTOCOL v3 v2
 Protocol match v1 EGA.v1.MemoryArray[19] EGA.v1.MemoryArray[19]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v4 EGA.v4.MemoryArray[19] EGA.v4.MemoryArray[19]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v3 EGA.v3.MemoryArray[19] EGA.v3.MemoryArray[19]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v0 EGA.v0.MemoryArray[9] EGA.v0.MemoryArray[9]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v5 EGA.v5.MemoryArray[19] EGA.v5.MemoryArray[19]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v6 EGA.v6.MemoryArray[19] EGA.v6.MemoryArray[19]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v2 EGA.v2.MemoryArray[19] EGA.v2.MemoryArray[19]
Enta gen msg_type GenerationMsgType.NEGOTIATE
BSM negotiate
 BSM negotiate end
 Protocol match v2 EGA.v2.MemoryArray[9] EGA.v2.MemoryArray[9]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v5 EGA.v5.MemoryArray[9] EGA.v5.MemoryArray[9]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v4 EGA.v4.MemoryArray[9] EGA.v4.MemoryArray[9]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v1 EGA.v1.MemoryArray[9] EGA.v1.MemoryArray[9]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v6 EGA.v6.MemoryArray[9] EGA.v6.MemoryArray[9]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v7 EGA.v7.MemoryArray[9] EGA.v7.MemoryArray[9]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
 Protocol match v3 EGA.v3.MemoryArray[9] EGA.v3.MemoryArray[9]
Enta gen msg_type GenerationMsgType.NEGOTIATE_ACK
Negociate AcK start
Negotiate Ack end
!!!!!!!!!!!!!!!! emit event v3
!!!!!!!!!!!!!!!! emit event v2
!!!!!!!!!!!!!!!! emit event v6
!!!!!!!!!!!!!!!! emit event v0
!!!!!!!!!!!!!!!! emit event v5
!!!!!!!!!!!!!!!! emit event v1
!!!!!!!!!!!!!!!! emit event v4
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v5  and reciver_protocol is:  EGA.v5.MemoryArray[19]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v5  delay:  250000000.0 and expected message recv time:  5483750175000
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[9]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v5_v6  dest:  v6  delay:  250000000.0 and expected message recv time:  5483750175000
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[19]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v2  delay:  250000000.0 and expected message recv time:  5483750175000
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[9]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v3  delay:  250000000.0 and expected message recv time:  5483750175000
BSM_MSG_RECV_TIME:  5483750175000  at node:  v5
push message at  v5  msg.receiver:  EGA.v5.MemoryArray[19]
 Protocol match v5 EGA.v5.MemoryArray[19] EGA.v5.MemoryArray[19]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 19
Resss 19 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v5.MemoryArray[19]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv5v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v5_v6', ['EGA.v5.MemoryArray[19]'])]
checking eligibility of:	 TaskPurifyRightv5v6
subtasks_available:	 ['EGA.v5.MemoryArray[19]']
dependency_subtasks name:	 EGA.v5.MemoryArray[19]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v5.MemoryArray[19]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v5.MemoryArray[19]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv5v6', ['EP_EGA.v5.MemoryArray[16]', 'EP_EGA.v5.MemoryArray[17]', 'EP_EGA.v5.MemoryArray[18]', 'EP_EGA.v5.MemoryArray[19]']), ('TaskPurifyLeftv5v4', [])]
checking eligibility of:	 TaskSwapMiddlev6v4
Not eligible yet because TaskPurifyLeftv5v4 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5483750175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[9]
 Protocol match v6 EGA.v6.MemoryArray[9] EGA.v6.MemoryArray[9]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 9
Resss 9 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[9]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv6v5
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v5', ['EGA.v6.MemoryArray[9]'])]
checking eligibility of:	 TaskPurifyLeftv6v5
subtasks_available:	 ['EGA.v6.MemoryArray[9]']
dependency_subtasks name:	 EGA.v6.MemoryArray[9]
inside ent_purify_action1
ReservationProtocol_v6_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v6.MemoryArray[9]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[9]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[9]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv6v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv6v5', ['EP_EGA.v6.MemoryArray[9]'])]
checking eligibility of:	 TaskSwapRightEndv6v4
subtasks_available:	 ['EP_EGA.v6.MemoryArray[9]']
dependency_subtasks name:	 EP_EGA.v6.MemoryArray[9]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v6.MemoryArray[9]']
True
task.name: TaskSwapRightEndv6v4  for node: v6 and memory returned for this: 9
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5483750175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[19]
 Protocol match v2 EGA.v2.MemoryArray[19] EGA.v2.MemoryArray[19]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 19
Resss 19 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v2.MemoryArray[19]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv2v3
added a subtask to dependency  and map status is:	 [('TaskEntGen_v2_v3', ['EGA.v2.MemoryArray[19]'])]
checking eligibility of:	 TaskPurifyRightv2v3
subtasks_available:	 ['EGA.v2.MemoryArray[19]']
dependency_subtasks name:	 EGA.v2.MemoryArray[19]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v2.MemoryArray[19]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v2.MemoryArray[19]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv2v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv2v3', ['EP_EGA.v2.MemoryArray[19]'])]
checking eligibility of:	 TaskSwapLeftEndv2v4
subtasks_available:	 ['EP_EGA.v2.MemoryArray[19]']
dependency_subtasks name:	 EP_EGA.v2.MemoryArray[19]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v2.MemoryArray[19]']
True
task.name: TaskSwapLeftEndv2v4  for node: v2 and memory returned for this: 19
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5483750175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[9]
 Protocol match v3 EGA.v3.MemoryArray[9] EGA.v3.MemoryArray[9]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 9
Resss 9 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v3.MemoryArray[9]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv3v2
added a subtask to dependency  and map status is:	 [('TaskEntGen_v3_v2', ['EGA.v3.MemoryArray[9]'])]
checking eligibility of:	 TaskPurifyLeftv3v2
subtasks_available:	 ['EGA.v3.MemoryArray[9]']
dependency_subtasks name:	 EGA.v3.MemoryArray[9]
inside ent_purify_action1
ReservationProtocol_v3_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v3.MemoryArray[9]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v3.MemoryArray[9]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v3.MemoryArray[9]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv3v4', ['EP_EGA.v3.MemoryArray[17]', 'EP_EGA.v3.MemoryArray[18]']), ('TaskPurifyLeftv3v2', ['EP_EGA.v3.MemoryArray[9]'])]
checking eligibility of:	 TaskSwapMiddlev4v2
subtasks_available:	 ['EP_EGA.v3.MemoryArray[17]', 'EP_EGA.v3.MemoryArray[9]']
dependency_subtasks name:	 EP_EGA.v3.MemoryArray[17]
dependency_subtasks name:	 EP_EGA.v3.MemoryArray[9]
inside task actin: left :v0 right: v7 and mid: v4 and self.own.name: v3
inside task actin: left_m :v2 right_m: v4 and mid: v4 and self.own.name: v3
inside ent_swap_action_middle
purify_subtask_left:  EP_EGA.v3.MemoryArray[17]
purify_subtask_right:  EP_EGA.v3.MemoryArray[9]
Created new swap subtask
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v3.MemoryArray[17]', 'EP_EGA.v3.MemoryArray[9]']
True
Make use of newly created swap subtask :  ESA.v3.MemoryArray[9].v3.MemoryArray[17]
task.name: TaskSwapMiddlev4v2  for node: v3 and memory returned for this: 9
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v2  delay:  500000000.0 and expected message recv time:  5484250175000
dst, req_func:	 v2 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func1 at 0x159aea8b0>
TASK_MANAGER_REQ_MESG curr_node: v3  dest:  v4  delay:  500000000.0 and expected message recv time:  5484250175000
dst, req_func:	 v4 <function ReservationProtocol.set_dependencies_subtask.<locals>.ent_swap_action_middle.<locals>.swap_subtask_action.<locals>.req_func2 at 0x159aea940>
Meas result end
REQ_FUNC_RECV_TIME:  5484250175000  at node:  v2
push message at  v2  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x159e098b0>
Protocol Name:  ESB.v2.MemoryArray[19]
REQ_FUNC_RECV_TIME:  5484250175000  at node:  v4
push message at  v4  msg.receiver:  ManagerType.ResourceManager
ini_protocol <qntsim.entanglement_management.swapping.EntanglementSwappingA object at 0x159e098b0>
Protocol Name:  ESB.v4.MemoryArray[7]
Resource manager Response
Resource manager Response
Entanglement Swapping successful
########Subtask Succeeded############## subtask.protocol name ESA.v3.MemoryArray[9].v3.MemoryArray[17]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 9
Resss 9 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 17
Resss 17 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
 Protocol match v2 ESB.v2.MemoryArray[19] ESB.v2.MemoryArray[19]
Swapping message kwargs SwappingMsgType.SWAP_RES {'left_protocol': 'ESB.v2.MemoryArray[19]', 'fidelity': 0.8304014059736002, 'remote_node': 'v4', 'remote_memo': 'v4.MemoryArray[7]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 19
Resss 19 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v2', 'v4.MemoryArray[7]')
########Subtask Succeeded############## subtask.protocol name ESB.v2.MemoryArray[19]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v0
added a subtask to dependency  and map status is:	 [('TaskSwapLeftEndv2v4', ['ESB.v2.MemoryArray[19]']), ('TaskSwapRightEndv2v0', [])]
checking eligibility of:	 TaskSwapMiddlev4v0
Not eligible yet because TaskSwapRightEndv2v0 does not have an instance to allocate
 Protocol match v4 ESB.v4.MemoryArray[7] ESB.v4.MemoryArray[7]
Swapping message kwargs SwappingMsgType.SWAP_RES {'right_protocol': 'ESB.v4.MemoryArray[7]', 'fidelity': 0.8304014059736002, 'remote_node': 'v2', 'remote_memo': 'v2.MemoryArray[19]', 'expire_time': inf, 'meas_res': []}
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 7
Resss 7 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
Entanglement swap successful between ('v4', 'v2.MemoryArray[19]')
########Subtask Succeeded############## subtask.protocol name ESB.v4.MemoryArray[7]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv4v0
added a subtask to dependency  and map status is:	 [('TaskSwapRightEndv4v2', ['ESB.v4.MemoryArray[7]'])]
checking eligibility of:	 TaskSwapRightEndv4v0
subtasks_available:	 ['ESB.v4.MemoryArray[7]']
dependency_subtasks name:	 ESB.v4.MemoryArray[7]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['ESB.v4.MemoryArray[7]']
True
task.name: TaskSwapRightEndv4v0  for node: v4 and memory returned for this: 7
dst, req_func:	 None None
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v6  and reciver_protocol is:  EGA.v6.MemoryArray[19]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v6  delay:  250000000.0 and expected message recv time:  5485750175000
sending messages to:  v7  and reciver_protocol is:  EGA.v7.MemoryArray[9]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v6_v7  dest:  v7  delay:  250000000.0 and expected message recv time:  5485750175000
BSM_MSG_RECV_TIME:  5485750175000  at node:  v6
push message at  v6  msg.receiver:  EGA.v6.MemoryArray[19]
 Protocol match v6 EGA.v6.MemoryArray[19] EGA.v6.MemoryArray[19]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 19
Resss 19 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v6.MemoryArray[19]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv6v7
added a subtask to dependency  and map status is:	 [('TaskEntGen_v6_v7', ['EGA.v6.MemoryArray[19]'])]
checking eligibility of:	 TaskPurifyRightv6v7
subtasks_available:	 ['EGA.v6.MemoryArray[19]']
dependency_subtasks name:	 EGA.v6.MemoryArray[19]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v6.MemoryArray[19]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v6.MemoryArray[19]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv6v7', ['EP_EGA.v6.MemoryArray[17]', 'EP_EGA.v6.MemoryArray[18]', 'EP_EGA.v6.MemoryArray[19]']), ('TaskSwapRightEndv6v4', [])]
checking eligibility of:	 TaskSwapMiddlev7v4
Not eligible yet because TaskSwapRightEndv6v4 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5485750175000  at node:  v7
push message at  v7  msg.receiver:  EGA.v7.MemoryArray[9]
 Protocol match v7 EGA.v7.MemoryArray[9] EGA.v7.MemoryArray[9]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 9
Resss 9 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v7.MemoryArray[9]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv7v6
added a subtask to dependency  and map status is:	 [('TaskEntGen_v7_v6', ['EGA.v7.MemoryArray[9]'])]
checking eligibility of:	 TaskPurifyLeftv7v6
subtasks_available:	 ['EGA.v7.MemoryArray[9]']
dependency_subtasks name:	 EGA.v7.MemoryArray[9]
inside ent_purify_action1
ReservationProtocol_v7_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v7.MemoryArray[9]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v7.MemoryArray[9]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v7.MemoryArray[9]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv7v4
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv7v6', ['EP_EGA.v7.MemoryArray[9]'])]
checking eligibility of:	 TaskSwapRightEndv7v4
subtasks_available:	 ['EP_EGA.v7.MemoryArray[9]']
dependency_subtasks name:	 EP_EGA.v7.MemoryArray[9]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v7.MemoryArray[9]']
True
task.name: TaskSwapRightEndv7v4  for node: v7 and memory returned for this: 9
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[19]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v3  delay:  250000000.0 and expected message recv time:  5489250175000
sending messages to:  v4  and reciver_protocol is:  EGA.v4.MemoryArray[9]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v3_v4  dest:  v4  delay:  250000000.0 and expected message recv time:  5489250175000
BSM_MSG_RECV_TIME:  5489250175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[19]
 Protocol match v3 EGA.v3.MemoryArray[19] EGA.v3.MemoryArray[19]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 19
Resss 19 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v3.MemoryArray[19]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv3v4
added a subtask to dependency  and map status is:	 [('TaskEntGen_v3_v4', ['EGA.v3.MemoryArray[19]'])]
checking eligibility of:	 TaskPurifyRightv3v4
subtasks_available:	 ['EGA.v3.MemoryArray[19]']
dependency_subtasks name:	 EGA.v3.MemoryArray[19]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v3.MemoryArray[19]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v3.MemoryArray[19]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv3v4', ['EP_EGA.v3.MemoryArray[18]', 'EP_EGA.v3.MemoryArray[19]']), ('TaskPurifyLeftv3v2', [])]
checking eligibility of:	 TaskSwapMiddlev4v2
Not eligible yet because TaskPurifyLeftv3v2 does not have an instance to allocate
Meas result end
BSM_MSG_RECV_TIME:  5489250175000  at node:  v4
push message at  v4  msg.receiver:  EGA.v4.MemoryArray[9]
 Protocol match v4 EGA.v4.MemoryArray[9] EGA.v4.MemoryArray[9]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 9
Resss 9 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v4.MemoryArray[9]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv4v3
added a subtask to dependency  and map status is:	 [('TaskEntGen_v4_v3', ['EGA.v4.MemoryArray[9]'])]
checking eligibility of:	 TaskPurifyLeftv4v3
subtasks_available:	 ['EGA.v4.MemoryArray[9]']
dependency_subtasks name:	 EGA.v4.MemoryArray[9]
inside ent_purify_action1
ReservationProtocol_v4_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v4.MemoryArray[9]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v4.MemoryArray[9]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v4.MemoryArray[9]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapRightEndv4v2
added a subtask to dependency  and map status is:	 [('TaskPurifyLeftv4v3', ['EP_EGA.v4.MemoryArray[9]'])]
checking eligibility of:	 TaskSwapRightEndv4v2
subtasks_available:	 ['EP_EGA.v4.MemoryArray[9]']
dependency_subtasks name:	 EP_EGA.v4.MemoryArray[9]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v4.MemoryArray[9]']
True
task.name: TaskSwapRightEndv4v2  for node: v4 and memory returned for this: 9
dst, req_func:	 None None
Meas result end
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v2  and reciver_protocol is:  EGA.v2.MemoryArray[19]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v2  delay:  250000000.0 and expected message recv time:  5498250175000
sending messages to:  v3  and reciver_protocol is:  EGA.v3.MemoryArray[9]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v2_v3  dest:  v3  delay:  250000000.0 and expected message recv time:  5498250175000
BSM_MSG_RECV_TIME:  5498250175000  at node:  v2
push message at  v2  msg.receiver:  EGA.v2.MemoryArray[19]
BSM_MSG_RECV_TIME:  5498250175000  at node:  v3
push message at  v3  msg.receiver:  EGA.v3.MemoryArray[9]
!!!!!!!!!!!!!!!Entanglement SUCESS!!!!!!!!!!!!!!!!!!!
sending messages to:  v0  and reciver_protocol is:  EGA.v0.MemoryArray[9]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v0  delay:  250000000.0 and expected message recv time:  5520250175000
sending messages to:  v1  and reciver_protocol is:  EGA.v1.MemoryArray[9]
ENT_GEN_SUCCESS_RESPONSE curr_node: middle_v0_v1  dest:  v1  delay:  250000000.0 and expected message recv time:  5520250175000
BSM_MSG_RECV_TIME:  5520250175000  at node:  v0
push message at  v0  msg.receiver:  EGA.v0.MemoryArray[9]
 Protocol match v0 EGA.v0.MemoryArray[9] EGA.v0.MemoryArray[9]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 9
Resss 9 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v0.MemoryArray[9]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyRightv0v1
added a subtask to dependency  and map status is:	 [('TaskEntGen_v0_v1', ['EGA.v0.MemoryArray[9]'])]
checking eligibility of:	 TaskPurifyRightv0v1
subtasks_available:	 ['EGA.v0.MemoryArray[9]']
dependency_subtasks name:	 EGA.v0.MemoryArray[9]
inside ent_purify_action2
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v0.MemoryArray[9]']
True
purification not needed
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v0.MemoryArray[9]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapLeftEndv0v2
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv0v1', ['EP_EGA.v0.MemoryArray[9]'])]
checking eligibility of:	 TaskSwapLeftEndv0v2
subtasks_available:	 ['EP_EGA.v0.MemoryArray[9]']
dependency_subtasks name:	 EP_EGA.v0.MemoryArray[9]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EP_EGA.v0.MemoryArray[9]']
True
task.name: TaskSwapLeftEndv0v2  for node: v0 and memory returned for this: 9
dst, req_func:	 None None
Meas result end
BSM_MSG_RECV_TIME:  5520250175000  at node:  v1
push message at  v1  msg.receiver:  EGA.v1.MemoryArray[9]
 Protocol match v1 EGA.v1.MemoryArray[9] EGA.v1.MemoryArray[9]
Enta gen msg_type GenerationMsgType.MEAS_RES
Meas result start
!!!!!!!!!!!!!!!!!!!SUCCEEDED!!!!!!!!!!!!!!!!!!!!!!!!
Res to mem [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 9
Resss 9 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] 0
_entanglement_succeed:  len(self.subtask.protocols):  0
########Subtask Succeeded############## subtask.protocol name EGA.v1.MemoryArray[9]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskPurifyLeftv1v0
added a subtask to dependency  and map status is:	 [('TaskEntGen_v1_v0', ['EGA.v1.MemoryArray[9]'])]
checking eligibility of:	 TaskPurifyLeftv1v0
subtasks_available:	 ['EGA.v1.MemoryArray[9]']
dependency_subtasks name:	 EGA.v1.MemoryArray[9]
inside ent_purify_action1
ReservationProtocol_v1_R0
len(gen_subtask.dependents):  0
Not Making use of previously mapped purification subtask
newly created purification subtask for the gen subtask:  EGA.v1.MemoryArray[9]
len(subtasks):	 1
subtask:	self.dependencies in is_eligible_to_run ['EGA.v1.MemoryArray[9]']
True
Purification not needed
########Subtask Succeeded############## subtask.protocol name EP_EGA.v1.MemoryArray[9]
In subtask_success
subtask.dependents:  0
dependent_tasks for this:  1
Task name:	 TaskSwapMiddlev2v0
added a subtask to dependency  and map status is:	 [('TaskPurifyRightv1v2', []), ('TaskPurifyLeftv1v0', ['EP_EGA.v1.MemoryArray[9]'])]
checking eligibility of:	 TaskSwapMiddlev2v0
Not eligible yet because TaskPurifyRightv1v2 does not have an instance to allocate
Meas result end
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9970> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9970>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a30> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156610a30>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606af0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x156606af0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d30> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565e9d30>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565febb0> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565febb0>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c70> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x1565f6c70>]
protocol removed: <qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a970> [<qntsim.entanglement_management.generation.EntanglementGenerationA object at 0x15661a970>]
tl.time=  19999500000000
v0 memories
Index:	Entangled Node:	Fidelity:	Entanglement Time:	State:
0     	v7             	0.4590048543634773	5.094750175	ENTANGLED
1     	v7             	0.4590048543634773	5.149250175	ENTANGLED
2     	v7             	0.4590048543634773	5.238250175	ENTANGLED
3     	v7             	0.4590048543634773	5.368750175	ENTANGLED
4     	None           	0        	-1e-12	RAW
5     	v7             	0.4590048543634773	5.411250175	ENTANGLED
6     	None           	0        	-1e-12	RAW
7     	v7             	0.4590048543634773	5.462250175	ENTANGLED
8     	None           	0        	-1e-12	RAW
9     	v1             	0.9349367588934053	5.520250175	ENTANGLED
10    	None           	0        	-1e-12	RAW
11    	None           	0        	-1e-12	RAW
12    	None           	0        	-1e-12	RAW
13    	None           	0        	-1e-12	RAW
14    	None           	0        	-1e-12	RAW
15    	None           	0        	-1e-12	RAW
16    	None           	0        	-1e-12	RAW
17    	None           	0        	-1e-12	RAW
18    	None           	0        	-1e-12	RAW
19    	None           	0        	-1e-12	RAW
20    	None           	0        	-1e-12	RAW
21    	None           	0        	-1e-12	RAW
22    	None           	0        	-1e-12	RAW
23    	None           	0        	-1e-12	RAW
24    	None           	0        	-1e-12	RAW
25    	None           	0        	-1e-12	RAW
26    	None           	0        	-1e-12	RAW
27    	None           	0        	-1e-12	RAW
28    	None           	0        	-1e-12	RAW
29    	None           	0        	-1e-12	RAW
30    	None           	0        	-1e-12	RAW
31    	None           	0        	-1e-12	RAW
32    	None           	0        	-1e-12	RAW
33    	None           	0        	-1e-12	RAW
34    	None           	0        	-1e-12	RAW
35    	None           	0        	-1e-12	RAW
36    	None           	0        	-1e-12	RAW
37    	None           	0        	-1e-12	RAW
38    	None           	0        	-1e-12	RAW
39    	None           	0        	-1e-12	RAW
40    	None           	0        	-1e-12	RAW
41    	None           	0        	-1e-12	RAW
42    	None           	0        	-1e-12	RAW
43    	None           	0        	-1e-12	RAW
44    	None           	0        	-1e-12	RAW
45    	None           	0        	-1e-12	RAW
46    	None           	0        	-1e-12	RAW
47    	None           	0        	-1e-12	RAW
48    	None           	0        	-1e-12	RAW
49    	None           	0        	-1e-12	RAW
v1 memories
Index:	Entangled Node:	Fidelity:	Entanglement Time:
0     	None           	0        	-1e-12	RAW
1     	None           	0        	-1e-12	RAW
2     	None           	0        	-1e-12	RAW
3     	None           	0        	-1e-12	RAW
4     	None           	0        	-1e-12	RAW
5     	None           	0        	-1e-12	RAW
6     	None           	0        	-1e-12	RAW
7     	None           	0        	-1e-12	RAW
8     	None           	0        	-1e-12	RAW
9     	v0             	0.9349367588934053	5.520250175	ENTANGLED
10    	None           	0        	-1e-12	RAW
11    	None           	0        	-1e-12	RAW
12    	None           	0        	-1e-12	RAW
13    	None           	0        	-1e-12	RAW
14    	None           	0        	-1e-12	RAW
15    	None           	0        	-1e-12	RAW
16    	None           	0        	-1e-12	RAW
17    	None           	0        	-1e-12	RAW
18    	None           	0        	-1e-12	RAW
19    	None           	0        	-1e-12	RAW
20    	None           	0        	-1e-12	RAW
21    	None           	0        	-1e-12	RAW
22    	None           	0        	-1e-12	RAW
23    	None           	0        	-1e-12	RAW
24    	None           	0        	-1e-12	RAW
25    	None           	0        	-1e-12	RAW
26    	None           	0        	-1e-12	RAW
27    	None           	0        	-1e-12	RAW
28    	None           	0        	-1e-12	RAW
29    	None           	0        	-1e-12	RAW
30    	None           	0        	-1e-12	RAW
31    	None           	0        	-1e-12	RAW
32    	None           	0        	-1e-12	RAW
33    	None           	0        	-1e-12	RAW
34    	None           	0        	-1e-12	RAW
35    	None           	0        	-1e-12	RAW
36    	None           	0        	-1e-12	RAW
37    	None           	0        	-1e-12	RAW
38    	None           	0        	-1e-12	RAW
39    	None           	0        	-1e-12	RAW
40    	None           	0        	-1e-12	RAW
41    	None           	0        	-1e-12	RAW
42    	None           	0        	-1e-12	RAW
43    	None           	0        	-1e-12	RAW
44    	None           	0        	-1e-12	RAW
45    	None           	0        	-1e-12	RAW
46    	None           	0        	-1e-12	RAW
47    	None           	0        	-1e-12	RAW
48    	None           	0        	-1e-12	RAW
49    	None           	0        	-1e-12	RAW
v2 memories
Index:	Entangled Node:	Fidelity:	Entanglement Time:
0     	None           	0        	-1e-12	RAW
1     	None           	0        	-1e-12	RAW
2     	None           	0        	-1e-12	RAW
3     	None           	0        	-1e-12	RAW
4     	None           	0        	-1e-12	RAW
5     	None           	0        	-1e-12	RAW
6     	None           	0        	-1e-12	RAW
7     	None           	0        	-1e-12	RAW
8     	None           	0        	-1e-12	RAW
9     	None           	0        	-1e-12	RAW
10    	None           	0        	-1e-12	RAW
11    	None           	0        	-1e-12	RAW
12    	None           	0        	-1e-12	RAW
13    	None           	0        	-1e-12	RAW
14    	None           	0        	-1e-12	RAW
15    	None           	0        	-1e-12	RAW
16    	None           	0        	-1e-12	RAW
17    	None           	0        	-1e-12	RAW
18    	None           	0        	-1e-12	RAW
19    	v4             	0.8304014059736002	5.485250175	ENTANGLED
20    	None           	0        	-1e-12	RAW
21    	None           	0        	-1e-12	RAW
22    	None           	0        	-1e-12	RAW
23    	None           	0        	-1e-12	RAW
24    	None           	0        	-1e-12	RAW
25    	None           	0        	-1e-12	RAW
26    	None           	0        	-1e-12	RAW
27    	None           	0        	-1e-12	RAW
28    	None           	0        	-1e-12	RAW
29    	None           	0        	-1e-12	RAW
30    	None           	0        	-1e-12	RAW
31    	None           	0        	-1e-12	RAW
32    	None           	0        	-1e-12	RAW
33    	None           	0        	-1e-12	RAW
34    	None           	0        	-1e-12	RAW
35    	None           	0        	-1e-12	RAW
36    	None           	0        	-1e-12	RAW
37    	None           	0        	-1e-12	RAW
38    	None           	0        	-1e-12	RAW
39    	None           	0        	-1e-12	RAW
40    	None           	0        	-1e-12	RAW
41    	None           	0        	-1e-12	RAW
42    	None           	0        	-1e-12	RAW
43    	None           	0        	-1e-12	RAW
44    	None           	0        	-1e-12	RAW
45    	None           	0        	-1e-12	RAW
46    	None           	0        	-1e-12	RAW
47    	None           	0        	-1e-12	RAW
48    	None           	0        	-1e-12	RAW
49    	None           	0        	-1e-12	RAW
v3 memories
Index:	Entangled Node:	Fidelity:	Entanglement Time:
0     	None           	0        	-1e-12	RAW
1     	None           	0        	-1e-12	RAW
2     	None           	0        	-1e-12	RAW
3     	None           	0        	-1e-12	RAW
4     	None           	0        	-1e-12	RAW
5     	None           	0        	-1e-12	RAW
6     	None           	0        	-1e-12	RAW
7     	None           	0        	-1e-12	RAW
8     	None           	0        	-1e-12	RAW
9     	None           	0        	-1e-12	RAW
10    	None           	0        	-1e-12	RAW
11    	None           	0        	-1e-12	RAW
12    	None           	0        	-1e-12	RAW
13    	None           	0        	-1e-12	RAW
14    	None           	0        	-1e-12	RAW
15    	None           	0        	-1e-12	RAW
16    	None           	0        	-1e-12	RAW
17    	None           	0        	-1e-12	RAW
18    	v4             	0.9349367588934053	5.446250175	ENTANGLED
19    	v4             	0.9349367588934053	5.489250175	ENTANGLED
20    	None           	0        	-1e-12	RAW
21    	None           	0        	-1e-12	RAW
22    	None           	0        	-1e-12	RAW
23    	None           	0        	-1e-12	RAW
24    	None           	0        	-1e-12	RAW
25    	None           	0        	-1e-12	RAW
26    	None           	0        	-1e-12	RAW
27    	None           	0        	-1e-12	RAW
28    	None           	0        	-1e-12	RAW
29    	None           	0        	-1e-12	RAW
30    	None           	0        	-1e-12	RAW
31    	None           	0        	-1e-12	RAW
32    	None           	0        	-1e-12	RAW
33    	None           	0        	-1e-12	RAW
34    	None           	0        	-1e-12	RAW
35    	None           	0        	-1e-12	RAW
36    	None           	0        	-1e-12	RAW
37    	None           	0        	-1e-12	RAW
38    	None           	0        	-1e-12	RAW
39    	None           	0        	-1e-12	RAW
40    	None           	0        	-1e-12	RAW
41    	None           	0        	-1e-12	RAW
42    	None           	0        	-1e-12	RAW
43    	None           	0        	-1e-12	RAW
44    	None           	0        	-1e-12	RAW
45    	None           	0        	-1e-12	RAW
46    	None           	0        	-1e-12	RAW
47    	None           	0        	-1e-12	RAW
48    	None           	0        	-1e-12	RAW
49    	None           	0        	-1e-12	RAW
v4 memories
Index:	Entangled Node:	Fidelity:	Entanglement Time:
0     	None           	0        	-1e-12	RAW
1     	None           	0        	-1e-12	RAW
2     	None           	0        	-1e-12	RAW
3     	None           	0        	-1e-12	RAW
4     	None           	0        	-1e-12	RAW
5     	None           	0        	-1e-12	RAW
6     	None           	0        	-1e-12	RAW
7     	v2             	0.8304014059736002	5.485250175	ENTANGLED
8     	v3             	0.9349367588934053	5.446250175	ENTANGLED
9     	v3             	0.9349367588934053	5.489250175	ENTANGLED
10    	None           	0        	-1e-12	RAW
11    	None           	0        	-1e-12	RAW
12    	None           	0        	-1e-12	RAW
13    	None           	0        	-1e-12	RAW
14    	None           	0        	-1e-12	RAW
15    	None           	0        	-1e-12	RAW
16    	None           	0        	-1e-12	RAW
17    	None           	0        	-1e-12	RAW
18    	None           	0        	-1e-12	RAW
19    	None           	0        	-1e-12	RAW
20    	None           	0        	-1e-12	RAW
21    	None           	0        	-1e-12	RAW
22    	None           	0        	-1e-12	RAW
23    	None           	0        	-1e-12	RAW
24    	None           	0        	-1e-12	RAW
25    	None           	0        	-1e-12	RAW
26    	None           	0        	-1e-12	RAW
27    	None           	0        	-1e-12	RAW
28    	None           	0        	-1e-12	RAW
29    	None           	0        	-1e-12	RAW
30    	None           	0        	-1e-12	RAW
31    	None           	0        	-1e-12	RAW
32    	None           	0        	-1e-12	RAW
33    	None           	0        	-1e-12	RAW
34    	None           	0        	-1e-12	RAW
35    	None           	0        	-1e-12	RAW
36    	None           	0        	-1e-12	RAW
37    	None           	0        	-1e-12	RAW
38    	None           	0        	-1e-12	RAW
39    	None           	0        	-1e-12	RAW
40    	None           	0        	-1e-12	RAW
41    	None           	0        	-1e-12	RAW
42    	None           	0        	-1e-12	RAW
43    	None           	0        	-1e-12	RAW
44    	None           	0        	-1e-12	RAW
45    	None           	0        	-1e-12	RAW
46    	None           	0        	-1e-12	RAW
47    	None           	0        	-1e-12	RAW
48    	None           	0        	-1e-12	RAW
49    	None           	0        	-1e-12	RAW
v5 memories
Index:	Entangled Node:	Fidelity:	Entanglement Time:
0     	None           	0        	-1e-12	RAW
1     	None           	0        	-1e-12	RAW
2     	None           	0        	-1e-12	RAW
3     	None           	0        	-1e-12	RAW
4     	None           	0        	-1e-12	RAW
5     	None           	0        	-1e-12	RAW
6     	None           	0        	-1e-12	RAW
7     	None           	0        	-1e-12	RAW
8     	None           	0        	-1e-12	RAW
9     	None           	0        	-1e-12	RAW
10    	None           	0        	-1e-12	RAW
11    	None           	0        	-1e-12	RAW
12    	None           	0        	-1e-12	RAW
13    	None           	0        	-1e-12	RAW
14    	None           	0        	-1e-12	RAW
15    	None           	0        	-1e-12	RAW
16    	v6             	0.9349367588934053	5.322250175	ENTANGLED
17    	v6             	0.9349367588934053	5.373750175	ENTANGLED
18    	v6             	0.9349367588934053	5.446250175	ENTANGLED
19    	v6             	0.9349367588934053	5.483750175	ENTANGLED
20    	None           	0        	-1e-12	RAW
21    	None           	0        	-1e-12	RAW
22    	None           	0        	-1e-12	RAW
23    	None           	0        	-1e-12	RAW
24    	None           	0        	-1e-12	RAW
25    	None           	0        	-1e-12	RAW
26    	None           	0        	-1e-12	RAW
27    	None           	0        	-1e-12	RAW
28    	None           	0        	-1e-12	RAW
29    	None           	0        	-1e-12	RAW
30    	None           	0        	-1e-12	RAW
31    	None           	0        	-1e-12	RAW
32    	None           	0        	-1e-12	RAW
33    	None           	0        	-1e-12	RAW
34    	None           	0        	-1e-12	RAW
35    	None           	0        	-1e-12	RAW
36    	None           	0        	-1e-12	RAW
37    	None           	0        	-1e-12	RAW
38    	None           	0        	-1e-12	RAW
39    	None           	0        	-1e-12	RAW
40    	None           	0        	-1e-12	RAW
41    	None           	0        	-1e-12	RAW
42    	None           	0        	-1e-12	RAW
43    	None           	0        	-1e-12	RAW
44    	None           	0        	-1e-12	RAW
45    	None           	0        	-1e-12	RAW
46    	None           	0        	-1e-12	RAW
47    	None           	0        	-1e-12	RAW
48    	None           	0        	-1e-12	RAW
49    	None           	0        	-1e-12	RAW
v6 memories
Index:	Entangled Node:	Fidelity:	Entanglement Time:
0     	None           	0        	-1e-12	RAW
1     	None           	0        	-1e-12	RAW
2     	None           	0        	-1e-12	RAW
3     	None           	0        	-1e-12	RAW
4     	None           	0        	-1e-12	RAW
5     	None           	0        	-1e-12	RAW
6     	v5             	0.9349367588934053	5.322250175	ENTANGLED
7     	v5             	0.9349367588934053	5.373750175	ENTANGLED
8     	v5             	0.9349367588934053	5.446250175	ENTANGLED
9     	v5             	0.9349367588934053	5.483750175	ENTANGLED
10    	None           	0        	-1e-12	RAW
11    	None           	0        	-1e-12	RAW
12    	None           	0        	-1e-12	RAW
13    	None           	0        	-1e-12	RAW
14    	None           	0        	-1e-12	RAW
15    	None           	0        	-1e-12	RAW
16    	None           	0        	-1e-12	RAW
17    	v7             	0.9349367588934053	5.387750175	ENTANGLED
18    	v7             	0.9349367588934053	5.432750175	ENTANGLED
19    	v7             	0.9349367588934053	5.485750175	ENTANGLED
20    	None           	0        	-1e-12	RAW
21    	None           	0        	-1e-12	RAW
22    	None           	0        	-1e-12	RAW
23    	None           	0        	-1e-12	RAW
24    	None           	0        	-1e-12	RAW
25    	None           	0        	-1e-12	RAW
26    	None           	0        	-1e-12	RAW
27    	None           	0        	-1e-12	RAW
28    	None           	0        	-1e-12	RAW
29    	None           	0        	-1e-12	RAW
30    	None           	0        	-1e-12	RAW
31    	None           	0        	-1e-12	RAW
32    	None           	0        	-1e-12	RAW
33    	None           	0        	-1e-12	RAW
34    	None           	0        	-1e-12	RAW
35    	None           	0        	-1e-12	RAW
36    	None           	0        	-1e-12	RAW
37    	None           	0        	-1e-12	RAW
38    	None           	0        	-1e-12	RAW
39    	None           	0        	-1e-12	RAW
40    	None           	0        	-1e-12	RAW
41    	None           	0        	-1e-12	RAW
42    	None           	0        	-1e-12	RAW
43    	None           	0        	-1e-12	RAW
44    	None           	0        	-1e-12	RAW
45    	None           	0        	-1e-12	RAW
46    	None           	0        	-1e-12	RAW
47    	None           	0        	-1e-12	RAW
48    	None           	0        	-1e-12	RAW
49    	None           	0        	-1e-12	RAW
v7 memories
Index:	Entangled Node:	Fidelity:	Entanglement Time:
0     	v0             	0.4590048543634773	5.094750175	ENTANGLED
1     	v0             	0.4590048543634773	5.149250175	ENTANGLED
2     	v0             	0.4590048543634773	5.238250175	ENTANGLED
3     	v0             	0.4590048543634773	5.368750175	ENTANGLED
4     	None           	0        	-1e-12	RAW
5     	v0             	0.4590048543634773	5.411250175	ENTANGLED
6     	v0             	0.4590048543634773	5.462250175	ENTANGLED
7     	v6             	0.9349367588934053	5.387750175	ENTANGLED
8     	v6             	0.9349367588934053	5.432750175	ENTANGLED
9     	v6             	0.9349367588934053	5.485750175	ENTANGLED
10    	None           	0        	-1e-12	RAW
11    	None           	0        	-1e-12	RAW
12    	None           	0        	-1e-12	RAW
13    	None           	0        	-1e-12	RAW
14    	None           	0        	-1e-12	RAW
15    	None           	0        	-1e-12	RAW
16    	None           	0        	-1e-12	RAW
17    	None           	0        	-1e-12	RAW
18    	None           	0        	-1e-12	RAW
19    	None           	0        	-1e-12	RAW
20    	None           	0        	-1e-12	RAW
21    	None           	0        	-1e-12	RAW
22    	None           	0        	-1e-12	RAW
23    	None           	0        	-1e-12	RAW
24    	None           	0        	-1e-12	RAW
25    	None           	0        	-1e-12	RAW
26    	None           	0        	-1e-12	RAW
27    	None           	0        	-1e-12	RAW
28    	None           	0        	-1e-12	RAW
29    	None           	0        	-1e-12	RAW
30    	None           	0        	-1e-12	RAW
31    	None           	0        	-1e-12	RAW
32    	None           	0        	-1e-12	RAW
33    	None           	0        	-1e-12	RAW
34    	None           	0        	-1e-12	RAW
35    	None           	0        	-1e-12	RAW
36    	None           	0        	-1e-12	RAW
37    	None           	0        	-1e-12	RAW
38    	None           	0        	-1e-12	RAW
39    	None           	0        	-1e-12	RAW
40    	None           	0        	-1e-12	RAW
41    	None           	0        	-1e-12	RAW
42    	None           	0        	-1e-12	RAW
43    	None           	0        	-1e-12	RAW
44    	None           	0        	-1e-12	RAW
45    	None           	0        	-1e-12	RAW
46    	None           	0        	-1e-12	RAW
47    	None           	0        	-1e-12	RAW
48    	None           	0        	-1e-12	RAW
49    	None           	0        	-1e-12	RAW
